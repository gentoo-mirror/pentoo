From 66a25e76c538f7844568a20243bfe015ee0315a1 Mon Sep 17 00:00:00 2001
From: Krzysztof Kolasa <kkolasa@winsoft.pl>
Date: Tue, 17 Mar 2015 23:41:25 +0100
Subject: [PATCH] changes for kernel 4.0.0

---
 firegl_public.c | 38 ++++++++++++++++++++++++++++++--------
 kcl_acpi.c      |  2 ++
 kcl_str.c       |  4 ++++
 4 files changed, 42 insertions(+), 8 deletions(-)

diff --git a/firegl_public.c b/firegl_public.c
index eccbc1c..a7368c8 100644
--- a/common/lib/modules/fglrx/build_mod/firegl_public.c
+++ b/common/lib/modules/fglrx/build_mod/firegl_public.c
@@ -93,7 +93,7 @@
    and they use different config options. These options can only be enabled
    on x86_64 with newer 2.6 kernels (2.6.23 for intel, 2.6.26 for amd). 
 */
-#if defined(CONFIG_AMD_IOMMU) || defined(CONFIG_DMAR)
+#if defined(CONFIG_AMD_IOMMU) || defined(CONFIG_INTEL_IOMMU) || defined(CONFIG_DMAR)
     #define FIREGL_DMA_REMAPPING
 #endif
 
@@ -269,8 +269,12 @@ module_param(firegl, charp, 0);
 #endif
 
 #ifdef MODULE_LICENSE
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(3,19,0)
+MODULE_LICENSE("GPL\0Proprietary. (C) 2002 - ATI Technologies, Starnberg, GERMANY");
+#else
 MODULE_LICENSE("Proprietary. (C) 2002 - ATI Technologies, Starnberg, GERMANY");
 #endif
+#endif
 #ifdef MODULE_DEVICE_TABLE
 MODULE_DEVICE_TABLE(pci, fglrx_pci_table);
 #endif
@@ -4496,8 +4500,13 @@ static void kcl_mem_pat_setup (void *info)
 
     if (cpu_has_pge)
     {
-        cr4 = read_cr4();
-        write_cr4(cr4 & ~X86_CR4_PGE);
+#if LINUX_VERSION_CODE < KERNEL_VERSION(4,0,0)
+	cr4 = read_cr4();
+	write_cr4(cr4 & ~X86_CR4_PGE);
+#else
+	cr4 = __read_cr4();
+	__write_cr4(cr4 & ~X86_CR4_PGE);
+#endif
     }
      __flush_tlb();
 
@@ -4510,7 +4519,11 @@ static void kcl_mem_pat_setup (void *info)
     write_cr0(cr0 & 0xbfffffff);
     if (cpu_has_pge)
     {
-        write_cr4(cr4);
+#if LINUX_VERSION_CODE < KERNEL_VERSION(4,0,0)
+	write_cr4(cr4);
+#else
+	__write_cr4(cr4);
+#endif
     }
     local_irq_restore(flags);
 
@@ -4537,8 +4550,13 @@ static void kcl_mem_pat_restore (void *info)
 
     if (cpu_has_pge)
     {
-        cr4 = read_cr4();
-        write_cr4(cr4 & ~X86_CR4_PGE);
+#if LINUX_VERSION_CODE < KERNEL_VERSION(4,0,0)
+	cr4 = read_cr4();
+	write_cr4(cr4 & ~X86_CR4_PGE);
+#else
+	cr4 = __read_cr4();
+	__write_cr4(cr4 & ~X86_CR4_PGE);
+#endif
     }
      __flush_tlb();
   
@@ -4550,7 +4568,11 @@ static void kcl_mem_pat_restore (void *info)
     write_cr0(cr0 & 0xbfffffff);
     if (cpu_has_pge)
     {
-        write_cr4(cr4);
+#if LINUX_VERSION_CODE < KERNEL_VERSION(4,0,0)
+	write_cr4(cr4);
+#else
+	__write_cr4(cr4);
+#endif
     }
     local_irq_restore(flags);
 
@@ -6420,7 +6442,7 @@ void ATI_API_CALL KCL_create_uuid(void *buf)
     generate_random_uuid((char *)buf);
 }
 
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(3,15,0)
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(3,15,0) && LINUX_VERSION_CODE < KERNEL_VERSION(4,0,0)
 static int KCL_fpu_save_init(struct task_struct *tsk)
 {
    struct fpu *fpu = &tsk->thread.fpu;
diff --git a/kcl_acpi.c b/kcl_acpi.c
index 3a80984..8b88b62 100644
--- a/common/lib/modules/fglrx/build_mod/kcl_acpi.c
+++ b/common/lib/modules/fglrx/build_mod/kcl_acpi.c
@@ -829,6 +829,7 @@ KCL_ACPI_DevHandle ATI_API_CALL KCL_ACPI_GetAlternateHandle(KCL_ACPI_DevHandle p
     return retHandle;
 }
 
+#if LINUX_VERSION_CODE < KERNEL_VERSION(4,0,0)
 static acpi_status KCL_ACPI_Slot_No_Hotplug(KCL_ACPI_DevHandle handle, u32 lvl, void *data, void **rv)
 {
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(3,12,7) && LINUX_VERSION_CODE < KERNEL_VERSION(3,17,0)
@@ -848,6 +849,7 @@ static acpi_status KCL_ACPI_Slot_No_Hotplug(KCL_ACPI_DevHandle handle, u32 lvl,
 #endif
    return 0;
 }
+#endif
 
 void ATI_API_CALL KCL_ACPI_No_Hotplug(void* dev)
 {
diff --git a/kcl_str.c b/kcl_str.c
index 2d89eb0..dcaa1be 100644
--- a/common/lib/modules/fglrx/build_mod/kcl_str.c
+++ b/common/lib/modules/fglrx/build_mod/kcl_str.c
@@ -169,7 +169,11 @@ int ATI_API_CALL KCL_STR_Strnicmp(const char* s1,
                                   const char* s2,
                                   KCL_TYPE_SizeSigned count)
 {
+#if LINUX_VERSION_CODE < KERNEL_VERSION(4,0,0)
     return strnicmp(s1, s2, count);
+#else
+    return strncasecmp(s1, s2, count);
+#endif
 }
 
 /** \brief Locate character in string
