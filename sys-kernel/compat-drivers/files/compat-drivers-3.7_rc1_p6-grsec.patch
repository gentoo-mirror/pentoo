--- drivers/net/wireless/ath/ath.h	2012-09-27 23:19:12.000000000 +0000
+++ drivers/net/wireless/ath/ath.h	2012-10-15 17:30:59.818924529 +0000
@@ -119,6 +119,7 @@ struct ath_ops {
 	void (*write_flush) (void *);
 	u32 (*rmw)(void *, u32 reg_offset, u32 set, u32 clr);
 };
+typedef struct ath_ops __no_const ath_ops_no_const;
 
 struct ath_common;
 struct ath_bus_ops;
--- drivers/net/wireless/ath/ath9k/ar9002_mac.c	2012-09-27 23:19:11.000000000 +0000
+++ drivers/net/wireless/ath/ath9k/ar9002_mac.c	2012-10-15 17:30:59.816924531 +0000
@@ -184,8 +184,8 @@ ar9002_set_txdesc(struct ath_hw *ah, voi
 	ads->ds_txstatus6 = ads->ds_txstatus7 = 0;
 	ads->ds_txstatus8 = ads->ds_txstatus9 = 0;
 
-	ACCESS_ONCE(ads->ds_link) = i->link;
-	ACCESS_ONCE(ads->ds_data) = i->buf_addr[0];
+	ACCESS_ONCE_RW(ads->ds_link) = i->link;
+	ACCESS_ONCE_RW(ads->ds_data) = i->buf_addr[0];
 
 	ctl1 = i->buf_len[0] | (i->is_last ? 0 : AR_TxMore);
 	ctl6 = SM(i->keytype, AR_EncrType);
@@ -199,26 +199,26 @@ ar9002_set_txdesc(struct ath_hw *ah, voi
 
 	if ((i->is_first || i->is_last) &&
 	    i->aggr != AGGR_BUF_MIDDLE && i->aggr != AGGR_BUF_LAST) {
-		ACCESS_ONCE(ads->ds_ctl2) = set11nTries(i->rates, 0)
+		ACCESS_ONCE_RW(ads->ds_ctl2) = set11nTries(i->rates, 0)
 			| set11nTries(i->rates, 1)
 			| set11nTries(i->rates, 2)
 			| set11nTries(i->rates, 3)
 			| (i->dur_update ? AR_DurUpdateEna : 0)
 			| SM(0, AR_BurstDur);
 
-		ACCESS_ONCE(ads->ds_ctl3) = set11nRate(i->rates, 0)
+		ACCESS_ONCE_RW(ads->ds_ctl3) = set11nRate(i->rates, 0)
 			| set11nRate(i->rates, 1)
 			| set11nRate(i->rates, 2)
 			| set11nRate(i->rates, 3);
 	} else {
-		ACCESS_ONCE(ads->ds_ctl2) = 0;
-		ACCESS_ONCE(ads->ds_ctl3) = 0;
+		ACCESS_ONCE_RW(ads->ds_ctl2) = 0;
+		ACCESS_ONCE_RW(ads->ds_ctl3) = 0;
 	}
 
 	if (!i->is_first) {
-		ACCESS_ONCE(ads->ds_ctl0) = 0;
-		ACCESS_ONCE(ads->ds_ctl1) = ctl1;
-		ACCESS_ONCE(ads->ds_ctl6) = ctl6;
+		ACCESS_ONCE_RW(ads->ds_ctl0) = 0;
+		ACCESS_ONCE_RW(ads->ds_ctl1) = ctl1;
+		ACCESS_ONCE_RW(ads->ds_ctl6) = ctl6;
 		return;
 	}
 
@@ -243,7 +243,7 @@ ar9002_set_txdesc(struct ath_hw *ah, voi
 		break;
 	}
 
-	ACCESS_ONCE(ads->ds_ctl0) = (i->pkt_len & AR_FrameLen)
+	ACCESS_ONCE_RW(ads->ds_ctl0) = (i->pkt_len & AR_FrameLen)
 		| (i->flags & ATH9K_TXDESC_VMF ? AR_VirtMoreFrag : 0)
 		| SM(i->txpower, AR_XmitPower)
 		| (i->flags & ATH9K_TXDESC_VEOL ? AR_VEOL : 0)
@@ -253,19 +253,19 @@ ar9002_set_txdesc(struct ath_hw *ah, voi
 		| (i->flags & ATH9K_TXDESC_RTSENA ? AR_RTSEnable :
 		   (i->flags & ATH9K_TXDESC_CTSENA ? AR_CTSEnable : 0));
 
-	ACCESS_ONCE(ads->ds_ctl1) = ctl1;
-	ACCESS_ONCE(ads->ds_ctl6) = ctl6;
+	ACCESS_ONCE_RW(ads->ds_ctl1) = ctl1;
+	ACCESS_ONCE_RW(ads->ds_ctl6) = ctl6;
 
 	if (i->aggr == AGGR_BUF_MIDDLE || i->aggr == AGGR_BUF_LAST)
 		return;
 
-	ACCESS_ONCE(ads->ds_ctl4) = set11nPktDurRTSCTS(i->rates, 0)
+	ACCESS_ONCE_RW(ads->ds_ctl4) = set11nPktDurRTSCTS(i->rates, 0)
 		| set11nPktDurRTSCTS(i->rates, 1);
 
-	ACCESS_ONCE(ads->ds_ctl5) = set11nPktDurRTSCTS(i->rates, 2)
+	ACCESS_ONCE_RW(ads->ds_ctl5) = set11nPktDurRTSCTS(i->rates, 2)
 		| set11nPktDurRTSCTS(i->rates, 3);
 
-	ACCESS_ONCE(ads->ds_ctl7) = set11nRateFlags(i->rates, 0)
+	ACCESS_ONCE_RW(ads->ds_ctl7) = set11nRateFlags(i->rates, 0)
 		| set11nRateFlags(i->rates, 1)
 		| set11nRateFlags(i->rates, 2)
 		| set11nRateFlags(i->rates, 3)
--- drivers/net/wireless/ath/ath9k/ar9003_mac.c	2012-09-27 23:19:12.000000000 +0000
+++ drivers/net/wireless/ath/ath9k/ar9003_mac.c	2012-10-15 17:30:59.817924530 +0000
@@ -39,47 +39,47 @@ ar9003_set_txdesc(struct ath_hw *ah, voi
 	      (i->qcu << AR_TxQcuNum_S) | desc_len;
 
 	checksum += val;
-	ACCESS_ONCE(ads->info) = val;
+	ACCESS_ONCE_RW(ads->info) = val;
 
 	checksum += i->link;
-	ACCESS_ONCE(ads->link) = i->link;
+	ACCESS_ONCE_RW(ads->link) = i->link;
 
 	checksum += i->buf_addr[0];
-	ACCESS_ONCE(ads->data0) = i->buf_addr[0];
+	ACCESS_ONCE_RW(ads->data0) = i->buf_addr[0];
 	checksum += i->buf_addr[1];
-	ACCESS_ONCE(ads->data1) = i->buf_addr[1];
+	ACCESS_ONCE_RW(ads->data1) = i->buf_addr[1];
 	checksum += i->buf_addr[2];
-	ACCESS_ONCE(ads->data2) = i->buf_addr[2];
+	ACCESS_ONCE_RW(ads->data2) = i->buf_addr[2];
 	checksum += i->buf_addr[3];
-	ACCESS_ONCE(ads->data3) = i->buf_addr[3];
+	ACCESS_ONCE_RW(ads->data3) = i->buf_addr[3];
 
 	checksum += (val = (i->buf_len[0] << AR_BufLen_S) & AR_BufLen);
-	ACCESS_ONCE(ads->ctl3) = val;
+	ACCESS_ONCE_RW(ads->ctl3) = val;
 	checksum += (val = (i->buf_len[1] << AR_BufLen_S) & AR_BufLen);
-	ACCESS_ONCE(ads->ctl5) = val;
+	ACCESS_ONCE_RW(ads->ctl5) = val;
 	checksum += (val = (i->buf_len[2] << AR_BufLen_S) & AR_BufLen);
-	ACCESS_ONCE(ads->ctl7) = val;
+	ACCESS_ONCE_RW(ads->ctl7) = val;
 	checksum += (val = (i->buf_len[3] << AR_BufLen_S) & AR_BufLen);
-	ACCESS_ONCE(ads->ctl9) = val;
+	ACCESS_ONCE_RW(ads->ctl9) = val;
 
 	checksum = (u16) (((checksum & 0xffff) + (checksum >> 16)) & 0xffff);
-	ACCESS_ONCE(ads->ctl10) = checksum;
+	ACCESS_ONCE_RW(ads->ctl10) = checksum;
 
 	if (i->is_first || i->is_last) {
-		ACCESS_ONCE(ads->ctl13) = set11nTries(i->rates, 0)
+		ACCESS_ONCE_RW(ads->ctl13) = set11nTries(i->rates, 0)
 			| set11nTries(i->rates, 1)
 			| set11nTries(i->rates, 2)
 			| set11nTries(i->rates, 3)
 			| (i->dur_update ? AR_DurUpdateEna : 0)
 			| SM(0, AR_BurstDur);
 
-		ACCESS_ONCE(ads->ctl14) = set11nRate(i->rates, 0)
+		ACCESS_ONCE_RW(ads->ctl14) = set11nRate(i->rates, 0)
 			| set11nRate(i->rates, 1)
 			| set11nRate(i->rates, 2)
 			| set11nRate(i->rates, 3);
 	} else {
-		ACCESS_ONCE(ads->ctl13) = 0;
-		ACCESS_ONCE(ads->ctl14) = 0;
+		ACCESS_ONCE_RW(ads->ctl13) = 0;
+		ACCESS_ONCE_RW(ads->ctl14) = 0;
 	}
 
 	ads->ctl20 = 0;
@@ -89,17 +89,17 @@ ar9003_set_txdesc(struct ath_hw *ah, voi
 
 	ctl17 = SM(i->keytype, AR_EncrType);
 	if (!i->is_first) {
-		ACCESS_ONCE(ads->ctl11) = 0;
-		ACCESS_ONCE(ads->ctl12) = i->is_last ? 0 : AR_TxMore;
-		ACCESS_ONCE(ads->ctl15) = 0;
-		ACCESS_ONCE(ads->ctl16) = 0;
-		ACCESS_ONCE(ads->ctl17) = ctl17;
-		ACCESS_ONCE(ads->ctl18) = 0;
-		ACCESS_ONCE(ads->ctl19) = 0;
+		ACCESS_ONCE_RW(ads->ctl11) = 0;
+		ACCESS_ONCE_RW(ads->ctl12) = i->is_last ? 0 : AR_TxMore;
+		ACCESS_ONCE_RW(ads->ctl15) = 0;
+		ACCESS_ONCE_RW(ads->ctl16) = 0;
+		ACCESS_ONCE_RW(ads->ctl17) = ctl17;
+		ACCESS_ONCE_RW(ads->ctl18) = 0;
+		ACCESS_ONCE_RW(ads->ctl19) = 0;
 		return;
 	}
 
-	ACCESS_ONCE(ads->ctl11) = (i->pkt_len & AR_FrameLen)
+	ACCESS_ONCE_RW(ads->ctl11) = (i->pkt_len & AR_FrameLen)
 		| (i->flags & ATH9K_TXDESC_VMF ? AR_VirtMoreFrag : 0)
 		| SM(i->txpower, AR_XmitPower)
 		| (i->flags & ATH9K_TXDESC_VEOL ? AR_VEOL : 0)
@@ -135,22 +135,22 @@ ar9003_set_txdesc(struct ath_hw *ah, voi
 	val = (i->flags & ATH9K_TXDESC_PAPRD) >> ATH9K_TXDESC_PAPRD_S;
 	ctl12 |= SM(val, AR_PAPRDChainMask);
 
-	ACCESS_ONCE(ads->ctl12) = ctl12;
-	ACCESS_ONCE(ads->ctl17) = ctl17;
+	ACCESS_ONCE_RW(ads->ctl12) = ctl12;
+	ACCESS_ONCE_RW(ads->ctl17) = ctl17;
 
-	ACCESS_ONCE(ads->ctl15) = set11nPktDurRTSCTS(i->rates, 0)
+	ACCESS_ONCE_RW(ads->ctl15) = set11nPktDurRTSCTS(i->rates, 0)
 		| set11nPktDurRTSCTS(i->rates, 1);
 
-	ACCESS_ONCE(ads->ctl16) = set11nPktDurRTSCTS(i->rates, 2)
+	ACCESS_ONCE_RW(ads->ctl16) = set11nPktDurRTSCTS(i->rates, 2)
 		| set11nPktDurRTSCTS(i->rates, 3);
 
-	ACCESS_ONCE(ads->ctl18) = set11nRateFlags(i->rates, 0)
+	ACCESS_ONCE_RW(ads->ctl18) = set11nRateFlags(i->rates, 0)
 		| set11nRateFlags(i->rates, 1)
 		| set11nRateFlags(i->rates, 2)
 		| set11nRateFlags(i->rates, 3)
 		| SM(i->rtscts_rate, AR_RTSCTSRate);
 
-	ACCESS_ONCE(ads->ctl19) = AR_Not_Sounding;
+	ACCESS_ONCE_RW(ads->ctl19) = AR_Not_Sounding;
 }
 
 static u16 ar9003_calc_ptr_chksum(struct ar9003_txc *ads)
--- drivers/net/wireless/ath/ath9k/hw.h	2012-09-27 23:19:12.000000000 +0000
+++ drivers/net/wireless/ath/ath9k/hw.h	2012-10-15 17:30:59.817924530 +0000
@@ -657,7 +657,7 @@ struct ath_hw_private_ops {
 
 	/* ANI */
 	void (*ani_cache_ini_regs)(struct ath_hw *ah);
-};
+} __no_const;
 
 /**
  * struct ath_hw_ops - callbacks used by hardware code and driver code
@@ -687,7 +687,7 @@ struct ath_hw_ops {
 	void (*antdiv_comb_conf_set)(struct ath_hw *ah,
 			struct ath_hw_antcomb_conf *antconf);
 	void (*antctrl_shared_chain_lnadiv)(struct ath_hw *hw, bool enable);
-};
+} __no_const;
 
 struct ath_nf_limits {
 	s16 max;
@@ -707,7 +707,7 @@ enum ath_cal_list {
 #define AH_FASTCC       0x4
 
 struct ath_hw {
-	struct ath_ops reg_ops;
+	ath_ops_no_const reg_ops;
 
 	struct ieee80211_hw *hw;
 	struct ath_common common;
--- drivers/net/wireless/brcm80211/brcmsmac/phy/phy_int.h	2012-09-27 23:19:11.000000000 +0000
+++ drivers/net/wireless/brcm80211/brcmsmac/phy/phy_int.h	2012-10-15 17:30:59.818924529 +0000
@@ -545,7 +545,7 @@ struct phy_func_ptr {
 	void (*carrsuppr)(struct brcms_phy *);
 	s32 (*rxsigpwr)(struct brcms_phy *, s32);
 	void (*detach)(struct brcms_phy *);
-};
+} __no_const;
 
 struct brcms_phy {
 	struct brcms_phy_pub pubpi_ro;
--- drivers/net/wireless/iwlegacy/3945-mac.c	2012-09-27 23:19:12.000000000 +0000
+++ drivers/net/wireless/iwlegacy/3945-mac.c	2012-10-15 17:30:59.819924529 +0000
@@ -3613,7 +3613,9 @@ il3945_pci_probe(struct pci_dev *pdev, c
 	 */
 	if (il3945_mod_params.disable_hw_scan) {
 		D_INFO("Disabling hw_scan\n");
-		il3945_mac_ops.hw_scan = NULL;
+		pax_open_kernel();
+		*(void **)&il3945_mac_ops.hw_scan = NULL;
+		pax_close_kernel();
 	}
 
 	D_INFO("*** LOAD DRIVER ***\n");
--- drivers/net/wireless/iwlwifi/dvm/debugfs.c	2012-09-27 23:19:11.000000000 +0000
+++ drivers/net/wireless/iwlwifi/dvm/debugfs.c	2012-10-15 17:30:59.819924529 +0000
@@ -203,7 +203,7 @@ static ssize_t iwl_dbgfs_sram_write(stru
 {
 	struct iwl_priv *priv = file->private_data;
 	char buf[64];
-	int buf_size;
+	size_t buf_size;
 	u32 offset, len;
 
 	memset(buf, 0, sizeof(buf));
@@ -473,7 +473,7 @@ static ssize_t iwl_dbgfs_rx_handlers_wri
 	struct iwl_priv *priv = file->private_data;
 
 	char buf[8];
-	int buf_size;
+	size_t buf_size;
 	u32 reset_flag;
 
 	memset(buf, 0, sizeof(buf));
@@ -554,7 +554,7 @@ static ssize_t iwl_dbgfs_disable_ht40_wr
 {
 	struct iwl_priv *priv = file->private_data;
 	char buf[8];
-	int buf_size;
+	size_t buf_size;
 	int ht40;
 
 	memset(buf, 0, sizeof(buf));
@@ -606,7 +606,7 @@ static ssize_t iwl_dbgfs_sleep_level_ove
 {
 	struct iwl_priv *priv = file->private_data;
 	char buf[8];
-	int buf_size;
+	size_t buf_size;
 	int value;
 
 	memset(buf, 0, sizeof(buf));
@@ -1871,7 +1871,7 @@ static ssize_t iwl_dbgfs_clear_ucode_sta
 {
 	struct iwl_priv *priv = file->private_data;
 	char buf[8];
-	int buf_size;
+	size_t buf_size;
 	int clear;
 
 	memset(buf, 0, sizeof(buf));
@@ -1916,7 +1916,7 @@ static ssize_t iwl_dbgfs_ucode_tracing_w
 {
 	struct iwl_priv *priv = file->private_data;
 	char buf[8];
-	int buf_size;
+	size_t buf_size;
 	int trace;
 
 	memset(buf, 0, sizeof(buf));
@@ -1987,7 +1987,7 @@ static ssize_t iwl_dbgfs_missed_beacon_w
 {
 	struct iwl_priv *priv = file->private_data;
 	char buf[8];
-	int buf_size;
+	size_t buf_size;
 	int missed;
 
 	memset(buf, 0, sizeof(buf));
@@ -2028,7 +2028,7 @@ static ssize_t iwl_dbgfs_plcp_delta_writ
 
 	struct iwl_priv *priv = file->private_data;
 	char buf[8];
-	int buf_size;
+	size_t buf_size;
 	int plcp;
 
 	memset(buf, 0, sizeof(buf));
@@ -2088,7 +2088,7 @@ static ssize_t iwl_dbgfs_txfifo_flush_wr
 
 	struct iwl_priv *priv = file->private_data;
 	char buf[8];
-	int buf_size;
+	size_t buf_size;
 	int flush;
 
 	memset(buf, 0, sizeof(buf));
@@ -2178,7 +2178,7 @@ static ssize_t iwl_dbgfs_protection_mode
 
 	struct iwl_priv *priv = file->private_data;
 	char buf[8];
-	int buf_size;
+	size_t buf_size;
 	int rts;
 
 	if (!priv->cfg->ht_params)
@@ -2220,7 +2220,7 @@ static ssize_t iwl_dbgfs_echo_test_write
 {
 	struct iwl_priv *priv = file->private_data;
 	char buf[8];
-	int buf_size;
+	size_t buf_size;
 
 	memset(buf, 0, sizeof(buf));
 	buf_size = min(count, sizeof(buf) -  1);
@@ -2256,7 +2256,7 @@ static ssize_t iwl_dbgfs_log_event_write
 	struct iwl_priv *priv = file->private_data;
 	u32 event_log_flag;
 	char buf[8];
-	int buf_size;
+	size_t buf_size;
 
 	/* check that the interface is up */
 	if (!iwl_is_ready(priv))
@@ -2310,7 +2310,7 @@ static ssize_t iwl_dbgfs_calib_disabled_
 	struct iwl_priv *priv = file->private_data;
 	char buf[8];
 	u32 calib_disabled;
-	int buf_size;
+	size_t buf_size;
 
 	memset(buf, 0, sizeof(buf));
 	buf_size = min(count, sizeof(buf) - 1);
--- drivers/net/wireless/iwlwifi/pcie/trans.c	2012-09-27 23:19:12.000000000 +0000
+++ drivers/net/wireless/iwlwifi/pcie/trans.c	2012-10-15 17:30:59.820924530 +0000
@@ -1944,7 +1944,7 @@ static ssize_t iwl_dbgfs_interrupt_write
 	struct isr_statistics *isr_stats = &trans_pcie->isr_stats;
 
 	char buf[8];
-	int buf_size;
+	size_t buf_size;
 	u32 reset_flag;
 
 	memset(buf, 0, sizeof(buf));
@@ -1965,7 +1965,7 @@ static ssize_t iwl_dbgfs_csr_write(struc
 {
 	struct iwl_trans *trans = file->private_data;
 	char buf[8];
-	int buf_size;
+	size_t buf_size;
 	int csr;
 
 	memset(buf, 0, sizeof(buf));
--- drivers/net/wireless/mac80211_hwsim.c	2012-09-27 23:19:12.000000000 +0000
+++ drivers/net/wireless/mac80211_hwsim.c	2012-10-15 17:30:59.820924530 +0000
@@ -1748,9 +1748,11 @@ static int __init init_mac80211_hwsim(vo
 		return -EINVAL;
 
 	if (fake_hw_scan) {
-		mac80211_hwsim_ops.hw_scan = mac80211_hwsim_hw_scan;
-		mac80211_hwsim_ops.sw_scan_start = NULL;
-		mac80211_hwsim_ops.sw_scan_complete = NULL;
+		pax_open_kernel();
+		*(void **)&mac80211_hwsim_ops.hw_scan = mac80211_hwsim_hw_scan;
+		*(void **)&mac80211_hwsim_ops.sw_scan_start = NULL;
+		*(void **)&mac80211_hwsim_ops.sw_scan_complete = NULL;
+		pax_close_kernel();
 	}
 
 	spin_lock_init(&hwsim_radio_lock);
--- drivers/net/wireless/mwifiex/main.h	2012-09-27 23:19:11.000000000 +0000
+++ drivers/net/wireless/mwifiex/main.h	2012-10-15 17:30:59.820924530 +0000
@@ -571,7 +571,7 @@ struct mwifiex_if_ops {
 	int (*event_complete) (struct mwifiex_adapter *, struct sk_buff *);
 	int (*data_complete) (struct mwifiex_adapter *, struct sk_buff *);
 	int (*dnld_fw) (struct mwifiex_adapter *, struct mwifiex_fw_image *);
-};
+} __no_const;
 
 struct mwifiex_adapter {
 	u8 iface_type;
--- drivers/net/wireless/rndis_wlan.c	2012-09-27 23:19:12.000000000 +0000
+++ drivers/net/wireless/rndis_wlan.c	2012-10-15 17:30:59.821924531 +0000
@@ -1235,7 +1235,7 @@ static int set_rts_threshold(struct usbn
 
 	netdev_dbg(usbdev->net, "%s(): %i\n", __func__, rts_threshold);
 
-	if (rts_threshold < 0 || rts_threshold > 2347)
+	if (rts_threshold > 2347)
 		rts_threshold = 2347;
 
 	tmp = cpu_to_le32(rts_threshold);
--- drivers/net/wireless/rt2x00/rt2x00.h	2012-09-27 23:19:11.000000000 +0000
+++ drivers/net/wireless/rt2x00/rt2x00.h	2012-10-15 17:30:59.821924531 +0000
@@ -397,7 +397,7 @@ struct rt2x00_intf {
 	 * for hardware which doesn't support hardware
 	 * sequence counting.
 	 */
-	atomic_t seqno;
+	atomic_unchecked_t seqno;
 };
 
 static inline struct rt2x00_intf* vif_to_intf(struct ieee80211_vif *vif)
--- drivers/net/wireless/rt2x00/rt2x00queue.c	2012-09-27 23:19:11.000000000 +0000
+++ drivers/net/wireless/rt2x00/rt2x00queue.c	2012-10-15 17:30:59.822924531 +0000
@@ -240,9 +240,9 @@ static void rt2x00queue_create_tx_descri
 	 * sequence counter given by mac80211.
 	 */
 	if (test_bit(ENTRY_TXD_FIRST_FRAGMENT, &txdesc->flags))
-		seqno = atomic_add_return(0x10, &intf->seqno);
+		seqno = atomic_add_return_unchecked(0x10, &intf->seqno);
 	else
-		seqno = atomic_read(&intf->seqno);
+		seqno = atomic_read_unchecked(&intf->seqno);
 
 	hdr->seq_ctrl &= cpu_to_le16(IEEE80211_SCTL_FRAG);
 	hdr->seq_ctrl |= cpu_to_le16(seqno);
--- drivers/net/wireless/ti/wl1251/wl1251.h	2012-09-27 23:19:11.000000000 +0000
+++ drivers/net/wireless/ti/wl1251/wl1251.h	2012-10-15 17:30:59.822924531 +0000
@@ -266,7 +266,7 @@ struct wl1251_if_operations {
 	void (*reset)(struct wl1251 *wl);
 	void (*enable_irq)(struct wl1251 *wl);
 	void (*disable_irq)(struct wl1251 *wl);
-};
+} __no_const;
 
 struct wl1251 {
 	struct ieee80211_hw *hw;
--- drivers/net/wireless/ti/wlcore/wlcore.h	2012-09-27 23:19:12.000000000 +0000
+++ drivers/net/wireless/ti/wlcore/wlcore.h	2012-10-15 17:30:59.822924531 +0000
@@ -81,7 +81,7 @@ struct wlcore_ops {
 		       struct ieee80211_sta *sta,
 		       struct ieee80211_key_conf *key_conf);
 	u32 (*pre_pkt_send)(struct wl1271 *wl, u32 buf_offset, u32 last_len);
-};
+} __no_const;
 
 enum wlcore_partitions {
 	PART_DOWN,
--- include/linux/unaligned/access_ok.h	2012-09-17 19:15:56.000000000 +0000
+++ include/linux/unaligned/access_ok.h	2012-10-15 17:30:59.823924531 +0000
@@ -6,32 +6,32 @@
 
 static inline u16 get_unaligned_le16(const void *p)
 {
-	return le16_to_cpup((__le16 *)p);
+	return le16_to_cpup((const __le16 *)p);
 }
 
 static inline u32 get_unaligned_le32(const void *p)
 {
-	return le32_to_cpup((__le32 *)p);
+	return le32_to_cpup((const __le32 *)p);
 }
 
 static inline u64 get_unaligned_le64(const void *p)
 {
-	return le64_to_cpup((__le64 *)p);
+	return le64_to_cpup((const __le64 *)p);
 }
 
 static inline u16 get_unaligned_be16(const void *p)
 {
-	return be16_to_cpup((__be16 *)p);
+	return be16_to_cpup((const __be16 *)p);
 }
 
 static inline u32 get_unaligned_be32(const void *p)
 {
-	return be32_to_cpup((__be32 *)p);
+	return be32_to_cpup((const __be32 *)p);
 }
 
 static inline u64 get_unaligned_be64(const void *p)
 {
-	return be64_to_cpup((__be64 *)p);
+	return be64_to_cpup((const __be64 *)p);
 }
 
 static inline void put_unaligned_le16(u16 val, void *p)
--- net/bluetooth/hci_sock.c	2012-09-27 23:19:12.000000000 +0000
+++ net/bluetooth/hci_sock.c	2012-10-15 17:30:59.825924531 +0000
@@ -940,7 +940,7 @@ static int hci_sock_setsockopt(struct so
 			uf.event_mask[1] = *((u32 *) f->event_mask + 1);
 		}
 
-		len = min_t(unsigned int, len, sizeof(uf));
+		len = min((size_t)len, sizeof(uf));
 		if (copy_from_user(&uf, optval, len)) {
 			err = -EFAULT;
 			break;
--- net/bluetooth/l2cap_core.c	2012-09-27 23:19:11.000000000 +0000
+++ net/bluetooth/l2cap_core.c	2012-10-15 17:30:59.825924531 +0000
@@ -3165,8 +3165,10 @@ static int l2cap_parse_conf_rsp(struct l
 			break;
 
 		case L2CAP_CONF_RFC:
-			if (olen == sizeof(rfc))
-				memcpy(&rfc, (void *)val, olen);
+			if (olen != sizeof(rfc))
+				break;
+
+			memcpy(&rfc, (void *)val, olen);
 
 			if (test_bit(CONF_STATE2_DEVICE, &chan->conf_state) &&
 							rfc.mode != chan->mode)
--- net/bluetooth/l2cap_sock.c	2012-09-27 23:19:12.000000000 +0000
+++ net/bluetooth/l2cap_sock.c	2012-10-15 17:30:59.826924531 +0000
@@ -467,7 +467,8 @@ static int l2cap_sock_setsockopt_old(str
 	struct sock *sk = sock->sk;
 	struct l2cap_chan *chan = l2cap_pi(sk)->chan;
 	struct l2cap_options opts;
-	int len, err = 0;
+	int err = 0;
+	size_t len = optlen;
 	u32 opt;
 
 	BT_DBG("sk %p", sk);
@@ -489,7 +490,7 @@ static int l2cap_sock_setsockopt_old(str
 		opts.max_tx   = chan->max_tx;
 		opts.txwin_size = chan->tx_win;
 
-		len = min_t(unsigned int, sizeof(opts), optlen);
+		len = min(sizeof(opts), len);
 		if (copy_from_user((char *) &opts, optval, len)) {
 			err = -EFAULT;
 			break;
@@ -574,7 +575,8 @@ static int l2cap_sock_setsockopt(struct
 	struct bt_security sec;
 	struct bt_power pwr;
 	struct l2cap_conn *conn;
-	int len, err = 0;
+	int err = 0;
+	size_t len = optlen;
 	u32 opt;
 
 	BT_DBG("sk %p", sk);
@@ -597,7 +599,7 @@ static int l2cap_sock_setsockopt(struct
 
 		sec.level = BT_SECURITY_LOW;
 
-		len = min_t(unsigned int, sizeof(sec), optlen);
+		len = min(sizeof(sec), len);
 		if (copy_from_user((char *) &sec, optval, len)) {
 			err = -EFAULT;
 			break;
@@ -694,7 +696,7 @@ static int l2cap_sock_setsockopt(struct
 
 		pwr.force_active = BT_POWER_FORCE_ACTIVE_ON;
 
-		len = min_t(unsigned int, sizeof(pwr), optlen);
+		len = min(sizeof(pwr), len);
 		if (copy_from_user((char *) &pwr, optval, len)) {
 			err = -EFAULT;
 			break;
--- net/bluetooth/rfcomm/sock.c	2012-09-27 23:19:12.000000000 +0000
+++ net/bluetooth/rfcomm/sock.c	2012-10-15 17:30:59.826924531 +0000
@@ -676,7 +676,7 @@ static int rfcomm_sock_setsockopt(struct
 	struct sock *sk = sock->sk;
 	struct bt_security sec;
 	int err = 0;
-	size_t len;
+	size_t len = optlen;
 	u32 opt;
 
 	BT_DBG("sk %p", sk);
@@ -698,7 +698,7 @@ static int rfcomm_sock_setsockopt(struct
 
 		sec.level = BT_SECURITY_LOW;
 
-		len = min_t(unsigned int, sizeof(sec), optlen);
+		len = min(sizeof(sec), len);
 		if (copy_from_user((char *) &sec, optval, len)) {
 			err = -EFAULT;
 			break;
--- net/bluetooth/rfcomm/tty.c	2012-09-27 23:19:12.000000000 +0000
+++ net/bluetooth/rfcomm/tty.c	2012-10-15 17:30:59.826924531 +0000
@@ -309,7 +309,7 @@ static void rfcomm_dev_del(struct rfcomm
 	BUG_ON(test_and_set_bit(RFCOMM_TTY_RELEASED, &dev->flags));
 
 	spin_lock_irqsave(&dev->port.lock, flags);
-	if (dev->port.count > 0) {
+	if (atomic_read(&dev->port.count) > 0) {
 		spin_unlock_irqrestore(&dev->port.lock, flags);
 		return;
 	}
@@ -664,10 +664,10 @@ static int rfcomm_tty_open(struct tty_st
 		return -ENODEV;
 
 	BT_DBG("dev %p dst %s channel %d opened %d", dev, batostr(&dev->dst),
-				dev->channel, dev->port.count);
+				dev->channel, atomic_read(&dev->port.count));
 
 	spin_lock_irqsave(&dev->port.lock, flags);
-	if (++dev->port.count > 1) {
+	if (atomic_inc_return(&dev->port.count) > 1) {
 		spin_unlock_irqrestore(&dev->port.lock, flags);
 		return 0;
 	}
@@ -736,10 +736,10 @@ static void rfcomm_tty_close(struct tty_
 		return;
 
 	BT_DBG("tty %p dev %p dlc %p opened %d", tty, dev, dev->dlc,
-						dev->port.count);
+						atomic_read(&dev->port.count));
 
 	spin_lock_irqsave(&dev->port.lock, flags);
-	if (!--dev->port.count) {
+	if (!atomic_dec_return(&dev->port.count)) {
 		spin_unlock_irqrestore(&dev->port.lock, flags);
 		if (dev->tty_dev->parent)
 #if (LINUX_VERSION_CODE > KERNEL_VERSION(2,6,29))
--- net/mac80211/ieee80211_i.h	2012-09-27 23:19:12.000000000 +0000
+++ net/mac80211/ieee80211_i.h	2012-10-15 17:30:59.827924531 +0000
@@ -28,6 +28,7 @@
 #include <net/ieee80211_radiotap.h>
 #include <net/cfg80211.h>
 #include <net/mac80211.h>
+#include <asm/local.h>
 #include "key.h"
 #include "sta_info.h"
 #include "debug.h"
@@ -840,7 +841,7 @@ struct ieee80211_local {
 	/* also used to protect ampdu_ac_queue and amdpu_ac_stop_refcnt */
 	spinlock_t queue_stop_reason_lock;
 
-	int open_count;
+	local_t open_count;
 	int monitors, cooked_mntrs;
 	/* number of interfaces with corresponding FIF_ flags */
 	int fif_fcsfail, fif_plcpfail, fif_control, fif_other_bss, fif_pspoll,
--- net/mac80211/iface.c	2012-09-27 23:19:12.000000000 +0000
+++ net/mac80211/iface.c	2012-10-15 17:30:59.827924531 +0000
@@ -454,7 +454,7 @@ static int ieee80211_do_open(struct net_
 		break;
 	}
 
-	if (local->open_count == 0) {
+	if (local_read(&local->open_count) == 0) {
 		res = drv_start(local);
 		if (res)
 			goto err_del_bss;
@@ -497,7 +497,7 @@ static int ieee80211_do_open(struct net_
 			break;
 		}
 
-		if (local->monitors == 0 && local->open_count == 0) {
+		if (local->monitors == 0 && local_read(&local->open_count) == 0) {
 			res = ieee80211_add_virtual_monitor(local);
 			if (res)
 				goto err_stop;
@@ -594,7 +594,7 @@ static int ieee80211_do_open(struct net_
 	mutex_unlock(&local->mtx);
 
 	if (coming_up)
-		local->open_count++;
+		local_inc(&local->open_count);
 
 	if (hw_reconf_flags)
 		ieee80211_hw_config(local, hw_reconf_flags);
@@ -607,7 +607,7 @@ static int ieee80211_do_open(struct net_
  err_del_interface:
 	drv_remove_interface(local, sdata);
  err_stop:
-	if (!local->open_count)
+	if (!local_read(&local->open_count))
 		drv_stop(local);
  err_del_bss:
 	sdata->bss = NULL;
@@ -741,7 +741,7 @@ static void ieee80211_do_stop(struct iee
 	}
 
 	if (going_down)
-		local->open_count--;
+		local_dec(&local->open_count);
 
 	switch (sdata->vif.type) {
 	case NL80211_IFTYPE_AP_VLAN:
@@ -801,7 +801,7 @@ static void ieee80211_do_stop(struct iee
 
 	ieee80211_recalc_ps(local, -1);
 
-	if (local->open_count == 0) {
+	if (local_read(&local->open_count) == 0) {
 		if (local->ops->napi_poll)
 			napi_disable(&local->napi);
 		ieee80211_clear_tx_pending(local);
@@ -833,7 +833,7 @@ static void ieee80211_do_stop(struct iee
 	}
 	spin_unlock_irqrestore(&local->queue_stop_reason_lock, flags);
 
-	if (local->monitors == local->open_count && local->monitors > 0)
+	if (local->monitors == local_read(&local->open_count) && local->monitors > 0)
 		ieee80211_add_virtual_monitor(local);
 }
 
--- net/mac80211/main.c	2012-09-27 23:19:12.000000000 +0000
+++ net/mac80211/main.c	2012-10-15 17:30:59.827924531 +0000
@@ -170,7 +170,7 @@ int ieee80211_hw_config(struct ieee80211
 		local->hw.conf.power_level = power;
 	}
 
-	if (changed && local->open_count) {
+	if (changed && local_read(&local->open_count)) {
 		ret = drv_config(local, changed);
 		/*
 		 * Goal:
--- net/mac80211/pm.c	2012-09-27 23:19:11.000000000 +0000
+++ net/mac80211/pm.c	2012-10-15 17:30:59.828924531 +0000
@@ -34,7 +34,7 @@ int __ieee80211_suspend(struct ieee80211
 	struct ieee80211_sub_if_data *sdata;
 	struct sta_info *sta;
 
-	if (!local->open_count)
+	if (!local_read(&local->open_count))
 		goto suspend;
 
 	ieee80211_scan_cancel(local);
@@ -72,7 +72,7 @@ int __ieee80211_suspend(struct ieee80211
 	cancel_work_sync(&local->dynamic_ps_enable_work);
 	del_timer_sync(&local->dynamic_ps_timer);
 
-	local->wowlan = wowlan && local->open_count;
+	local->wowlan = wowlan && local_read(&local->open_count);
 	if (local->wowlan) {
 		int err = drv_suspend(local, wowlan);
 		if (err < 0) {
@@ -143,7 +143,7 @@ int __ieee80211_suspend(struct ieee80211
 		drv_remove_interface(local, sdata);
 
 	/* stop hardware - this must stop RX */
-	if (local->open_count)
+	if (local_read(&local->open_count))
 		ieee80211_stop_device(local);
 
  suspend:
--- net/mac80211/rate.c	2012-09-27 23:19:12.000000000 +0000
+++ net/mac80211/rate.c	2012-10-15 17:30:59.828924531 +0000
@@ -494,7 +494,7 @@ int ieee80211_init_rate_ctrl_alg(struct
 
 	ASSERT_RTNL();
 
-	if (local->open_count)
+	if (local_read(&local->open_count))
 		return -EBUSY;
 
 	if (local->hw.flags & IEEE80211_HW_HAS_RATE_CONTROL) {
--- net/mac80211/rc80211_pid_debugfs.c	2012-09-27 23:19:11.000000000 +0000
+++ net/mac80211/rc80211_pid_debugfs.c	2012-10-15 17:30:59.828924531 +0000
@@ -193,7 +193,7 @@ static ssize_t rate_control_pid_events_r
 
 	spin_unlock_irqrestore(&events->lock, status);
 
-	if (copy_to_user(buf, pb, p))
+	if (p > sizeof(pb) || copy_to_user(buf, pb, p))
 		return -EFAULT;
 
 	return p;
--- net/mac80211/util.c	2012-09-27 23:19:11.000000000 +0000
+++ net/mac80211/util.c	2012-10-15 17:30:59.828924531 +0000
@@ -1251,7 +1251,7 @@ int ieee80211_reconfig(struct ieee80211_
 	}
 #endif
 	/* everything else happens only if HW was up & running */
-	if (!local->open_count)
+	if (!local_read(&local->open_count))
 		goto wake_up;
 
 	/*
--- net/wireless/core.h	2012-09-27 23:19:11.000000000 +0000
+++ net/wireless/core.h	2012-10-15 17:30:59.829924531 +0000
@@ -28,7 +28,7 @@ struct cfg80211_registered_device {
 	struct mutex mtx;
 
 	/* rfkill support */
-	struct rfkill_ops rfkill_ops;
+	rfkill_ops_no_const rfkill_ops;
 	struct rfkill *rfkill;
 	struct work_struct rfkill_sync;
 
--- net/wireless/wext-core.c	2012-09-27 23:19:12.000000000 +0000
+++ net/wireless/wext-core.c	2012-10-15 17:30:59.829924531 +0000
@@ -792,8 +792,7 @@ static int ioctl_standard_iw_point(struc
 		 */
 
 		/* Support for very large requests */
-		if ((descr->flags & IW_DESCR_FLAG_NOMAX) &&
-		    (user_length > descr->max_tokens)) {
+		if (user_length > descr->max_tokens) {
 			/* Allow userspace to GET more than max so
 			 * we can support any size GET requests.
 			 * There is still a limit : -ENOMEM.
@@ -832,22 +831,6 @@ static int ioctl_standard_iw_point(struc
 		}
 	}
 
-	if (IW_IS_GET(cmd) && !(descr->flags & IW_DESCR_FLAG_NOMAX)) {
-		/*
-		 * If this is a GET, but not NOMAX, it means that the extra
-		 * data is not bounded by userspace, but by max_tokens. Thus
-		 * set the length to max_tokens. This matches the extra data
-		 * allocation.
-		 * The driver should fill it with the number of tokens it
-		 * provided, and it may check iwp->length rather than having
-		 * knowledge of max_tokens. If the driver doesn't change the
-		 * iwp->length, this ioctl just copies back max_token tokens
-		 * filled with zeroes. Hopefully the driver isn't claiming
-		 * them to be valid data.
-		 */
-		iwp->length = descr->max_tokens;
-	}
-
 	err = handler(dev, info, (union iwreq_data *) iwp, extra);
 
 	iwp->length += essid_compat;
--- scripts/gcc-plugin.sh	1970-01-01 00:00:00.000000000 +0000
+++ scripts/gcc-plugin.sh	2012-10-15 17:30:59.829924531 +0000
@@ -0,0 +1,17 @@
+#!/bin/bash
+plugincc=`$1 -x c -shared - -o /dev/null -I\`$3 -print-file-name=plugin\`/include 2>&1 <<EOF
+#include "gcc-plugin.h"
+#include "tree.h"
+#include "tm.h"
+#include "rtl.h"
+#ifdef ENABLE_BUILD_WITH_CXX
+#warning $2
+#else
+#warning $1
+#endif
+EOF`
+if [ $? -eq 0 ]
+then
+	[[ "$plugincc" =~ "$1" ]] && echo "$1"
+	[[ "$plugincc" =~ "$2" ]] && echo "$2"
+fi
--- tools/gcc/checker_plugin.c	1970-01-01 00:00:00.000000000 +0000
+++ tools/gcc/checker_plugin.c	2012-10-15 17:30:59.830924531 +0000
@@ -0,0 +1,171 @@
+/*
+ * Copyright 2011 by the PaX Team <pageexec@freemail.hu>
+ * Licensed under the GPL v2
+ *
+ * Note: the choice of the license means that the compilation process is
+ *       NOT 'eligible' as defined by gcc's library exception to the GPL v3,
+ *       but for the kernel it doesn't matter since it doesn't link against
+ *       any of the gcc libraries
+ *
+ * gcc plugin to implement various sparse (source code checker) features
+ *
+ * TODO:
+ * - define separate __iomem, __percpu and __rcu address spaces (lots of code to patch)
+ *
+ * BUGS:
+ * - none known
+ */
+#include "gcc-plugin.h"
+#include "config.h"
+#include "system.h"
+#include "coretypes.h"
+#include "tree.h"
+#include "tree-pass.h"
+#include "flags.h"
+#include "intl.h"
+#include "toplev.h"
+#include "plugin.h"
+//#include "expr.h" where are you...
+#include "diagnostic.h"
+#include "plugin-version.h"
+#include "tm.h"
+#include "function.h"
+#include "basic-block.h"
+#include "gimple.h"
+#include "rtl.h"
+#include "emit-rtl.h"
+#include "tree-flow.h"
+#include "target.h"
+
+extern void c_register_addr_space (const char *str, addr_space_t as);
+extern enum machine_mode default_addr_space_pointer_mode (addr_space_t);
+extern enum machine_mode default_addr_space_address_mode (addr_space_t);
+extern bool default_addr_space_valid_pointer_mode(enum machine_mode mode, addr_space_t as);
+extern bool default_addr_space_legitimate_address_p(enum machine_mode mode, rtx mem, bool strict, addr_space_t as);
+extern rtx default_addr_space_legitimize_address(rtx x, rtx oldx, enum machine_mode mode, addr_space_t as);
+
+extern void print_gimple_stmt(FILE *, gimple, int, int);
+extern rtx emit_move_insn(rtx x, rtx y);
+
+int plugin_is_GPL_compatible;
+
+static struct plugin_info checker_plugin_info = {
+	.version	= "201111150100",
+};
+
+#define ADDR_SPACE_KERNEL		0
+#define ADDR_SPACE_FORCE_KERNEL		1
+#define ADDR_SPACE_USER			2
+#define ADDR_SPACE_FORCE_USER		3
+#define ADDR_SPACE_IOMEM		0
+#define ADDR_SPACE_FORCE_IOMEM		0
+#define ADDR_SPACE_PERCPU		0
+#define ADDR_SPACE_FORCE_PERCPU		0
+#define ADDR_SPACE_RCU			0
+#define ADDR_SPACE_FORCE_RCU		0
+
+static enum machine_mode checker_addr_space_pointer_mode(addr_space_t addrspace)
+{
+	return default_addr_space_pointer_mode(ADDR_SPACE_GENERIC);
+}
+
+static enum machine_mode checker_addr_space_address_mode(addr_space_t addrspace)
+{
+	return default_addr_space_address_mode(ADDR_SPACE_GENERIC);
+}
+
+static bool checker_addr_space_valid_pointer_mode(enum machine_mode mode, addr_space_t as)
+{
+	return default_addr_space_valid_pointer_mode(mode, as);
+}
+
+static bool checker_addr_space_legitimate_address_p(enum machine_mode mode, rtx mem, bool strict, addr_space_t as)
+{
+	return default_addr_space_legitimate_address_p(mode, mem, strict, ADDR_SPACE_GENERIC);
+}
+
+static rtx checker_addr_space_legitimize_address(rtx x, rtx oldx, enum machine_mode mode, addr_space_t as)
+{
+	return default_addr_space_legitimize_address(x, oldx, mode, as);
+}
+
+static bool checker_addr_space_subset_p(addr_space_t subset, addr_space_t superset)
+{
+	if (subset == ADDR_SPACE_FORCE_KERNEL && superset == ADDR_SPACE_KERNEL)
+		return true;
+
+	if (subset == ADDR_SPACE_FORCE_USER && superset == ADDR_SPACE_USER)
+		return true;
+
+	if (subset == ADDR_SPACE_FORCE_IOMEM && superset == ADDR_SPACE_IOMEM)
+		return true;
+
+	if (subset == ADDR_SPACE_KERNEL && superset == ADDR_SPACE_FORCE_USER)
+		return true;
+
+	if (subset == ADDR_SPACE_KERNEL && superset == ADDR_SPACE_FORCE_IOMEM)
+		return true;
+
+	if (subset == ADDR_SPACE_USER && superset == ADDR_SPACE_FORCE_KERNEL)
+		return true;
+
+	if (subset == ADDR_SPACE_IOMEM && superset == ADDR_SPACE_FORCE_KERNEL)
+		return true;
+
+	return subset == superset;
+}
+
+static rtx checker_addr_space_convert(rtx op, tree from_type, tree to_type)
+{
+//	addr_space_t from_as = TYPE_ADDR_SPACE(TREE_TYPE(from_type));
+//	addr_space_t to_as = TYPE_ADDR_SPACE(TREE_TYPE(to_type));
+
+	return op;
+}
+
+static void register_checker_address_spaces(void *event_data, void *data)
+{
+	c_register_addr_space("__kernel", ADDR_SPACE_KERNEL);
+	c_register_addr_space("__force_kernel", ADDR_SPACE_FORCE_KERNEL);
+	c_register_addr_space("__user", ADDR_SPACE_USER);
+	c_register_addr_space("__force_user", ADDR_SPACE_FORCE_USER);
+//	c_register_addr_space("__iomem", ADDR_SPACE_IOMEM);
+//	c_register_addr_space("__force_iomem", ADDR_SPACE_FORCE_IOMEM);
+//	c_register_addr_space("__percpu", ADDR_SPACE_PERCPU);
+//	c_register_addr_space("__force_percpu", ADDR_SPACE_FORCE_PERCPU);
+//	c_register_addr_space("__rcu", ADDR_SPACE_RCU);
+//	c_register_addr_space("__force_rcu", ADDR_SPACE_FORCE_RCU);
+
+	targetm.addr_space.pointer_mode		= checker_addr_space_pointer_mode;
+	targetm.addr_space.address_mode		= checker_addr_space_address_mode;
+	targetm.addr_space.valid_pointer_mode	= checker_addr_space_valid_pointer_mode;
+	targetm.addr_space.legitimate_address_p	= checker_addr_space_legitimate_address_p;
+//	targetm.addr_space.legitimize_address	= checker_addr_space_legitimize_address;
+	targetm.addr_space.subset_p		= checker_addr_space_subset_p;
+	targetm.addr_space.convert		= checker_addr_space_convert;
+}
+
+int plugin_init(struct plugin_name_args *plugin_info, struct plugin_gcc_version *version)
+{
+	const char * const plugin_name = plugin_info->base_name;
+	const int argc = plugin_info->argc;
+	const struct plugin_argument * const argv = plugin_info->argv;
+	int i;
+
+	if (!plugin_default_version_check(version, &gcc_version)) {
+		error(G_("incompatible gcc/plugin versions"));
+		return 1;
+	}
+
+	register_callback(plugin_name, PLUGIN_INFO, NULL, &checker_plugin_info);
+
+	for (i = 0; i < argc; ++i)
+		error(G_("unkown option '-fplugin-arg-%s-%s'"), plugin_name, argv[i].key);
+
+	if (TARGET_64BIT == 0)
+		return 0;
+
+	register_callback(plugin_name, PLUGIN_PRAGMAS, register_checker_address_spaces, NULL);
+
+	return 0;
+}
--- tools/gcc/colorize_plugin.c	1970-01-01 00:00:00.000000000 +0000
+++ tools/gcc/colorize_plugin.c	2012-10-15 17:30:59.830924531 +0000
@@ -0,0 +1,148 @@
+/*
+ * Copyright 2012 by PaX Team <pageexec@freemail.hu>
+ * Licensed under the GPL v2
+ *
+ * Note: the choice of the license means that the compilation process is
+ *       NOT 'eligible' as defined by gcc's library exception to the GPL v3,
+ *       but for the kernel it doesn't matter since it doesn't link against
+ *       any of the gcc libraries
+ *
+ * gcc plugin to colorize diagnostic output
+ *
+ */
+
+#include "gcc-plugin.h"
+#include "config.h"
+#include "system.h"
+#include "coretypes.h"
+#include "tree.h"
+#include "tree-pass.h"
+#include "flags.h"
+#include "intl.h"
+#include "toplev.h"
+#include "plugin.h"
+#include "diagnostic.h"
+#include "plugin-version.h"
+#include "tm.h"
+
+int plugin_is_GPL_compatible;
+
+static struct plugin_info colorize_plugin_info = {
+	.version	= "201203092200",
+	.help		= NULL,
+};
+
+#define GREEN		"\033[32m\033[2m"
+#define LIGHTGREEN	"\033[32m\033[1m"
+#define YELLOW		"\033[33m\033[2m"
+#define LIGHTYELLOW	"\033[33m\033[1m"
+#define RED		"\033[31m\033[2m"
+#define LIGHTRED	"\033[31m\033[1m"
+#define BLUE		"\033[34m\033[2m"
+#define LIGHTBLUE	"\033[34m\033[1m"
+#define BRIGHT		"\033[m\033[1m"
+#define NORMAL		"\033[m"
+
+static diagnostic_starter_fn old_starter;
+static diagnostic_finalizer_fn old_finalizer;
+
+static void start_colorize(diagnostic_context *context, diagnostic_info *diagnostic)
+{
+	const char *color;
+	char *newprefix;
+
+	switch (diagnostic->kind) {
+	case DK_NOTE:
+		color = LIGHTBLUE;
+		break;
+
+	case DK_PEDWARN:
+	case DK_WARNING:
+		color = LIGHTYELLOW;
+		break;
+
+	case DK_ERROR:
+	case DK_FATAL:
+	case DK_ICE:
+	case DK_PERMERROR:
+	case DK_SORRY:
+		color = LIGHTRED;
+		break;
+
+	default:
+		color = NORMAL;
+	}
+
+	old_starter(context, diagnostic);
+	if (-1 == asprintf(&newprefix, "%s%s" NORMAL, color, context->printer->prefix))
+		return;
+	pp_destroy_prefix(context->printer);
+	pp_set_prefix(context->printer, newprefix);
+}
+
+static void finalize_colorize(diagnostic_context *context, diagnostic_info *diagnostic)
+{
+	old_finalizer(context, diagnostic);
+}
+
+static void colorize_arm(void)
+{
+	old_starter = diagnostic_starter(global_dc);
+	old_finalizer = diagnostic_finalizer(global_dc);
+
+	diagnostic_starter(global_dc) = start_colorize;
+	diagnostic_finalizer(global_dc) = finalize_colorize;
+}
+
+static unsigned int execute_colorize_rearm(void)
+{
+	if (diagnostic_starter(global_dc) == start_colorize)
+		return 0;
+
+	colorize_arm();
+	return 0;
+}
+
+struct simple_ipa_opt_pass pass_ipa_colorize_rearm = {
+	.pass = {
+		.type			= SIMPLE_IPA_PASS,
+		.name			= "colorize_rearm",
+		.gate			= NULL,
+		.execute		= execute_colorize_rearm,
+		.sub			= NULL,
+		.next			= NULL,
+		.static_pass_number	= 0,
+		.tv_id			= TV_NONE,
+		.properties_required	= 0,
+		.properties_provided	= 0,
+		.properties_destroyed	= 0,
+		.todo_flags_start	= 0,
+		.todo_flags_finish	= 0
+	}
+};
+
+static void colorize_start_unit(void *gcc_data, void *user_data)
+{
+	colorize_arm();
+}
+
+int plugin_init(struct plugin_name_args *plugin_info, struct plugin_gcc_version *version)
+{
+	const char * const plugin_name = plugin_info->base_name;
+	struct register_pass_info colorize_rearm_pass_info = {
+		.pass				= &pass_ipa_colorize_rearm.pass,
+		.reference_pass_name		= "*free_lang_data",
+		.ref_pass_instance_number	= 1,
+		.pos_op 			= PASS_POS_INSERT_AFTER
+	};
+
+	if (!plugin_default_version_check(version, &gcc_version)) {
+		error(G_("incompatible gcc/plugin versions"));
+		return 1;
+	}
+
+	register_callback(plugin_name, PLUGIN_INFO, NULL, &colorize_plugin_info);
+	register_callback(plugin_name, PLUGIN_START_UNIT, &colorize_start_unit, NULL);
+	register_callback(plugin_name, PLUGIN_PASS_MANAGER_SETUP, NULL, &colorize_rearm_pass_info);
+	return 0;
+}
--- tools/gcc/constify_plugin.c	1970-01-01 00:00:00.000000000 +0000
+++ tools/gcc/constify_plugin.c	2012-10-15 17:30:59.830924531 +0000
@@ -0,0 +1,331 @@
+/*
+ * Copyright 2011 by Emese Revfy <re.emese@gmail.com>
+ * Copyright 2011 by PaX Team <pageexec@freemail.hu>
+ * Licensed under the GPL v2, or (at your option) v3
+ *
+ * This gcc plugin constifies all structures which contain only function pointers or are explicitly marked for constification.
+ *
+ * Homepage:
+ * http://www.grsecurity.net/~ephox/const_plugin/
+ *
+ * Usage:
+ * $ gcc -I`gcc -print-file-name=plugin`/include -fPIC -shared -O2 -o constify_plugin.so constify_plugin.c
+ * $ gcc -fplugin=constify_plugin.so test.c -O2
+ */
+
+#include "gcc-plugin.h"
+#include "config.h"
+#include "system.h"
+#include "coretypes.h"
+#include "tree.h"
+#include "tree-pass.h"
+#include "flags.h"
+#include "intl.h"
+#include "toplev.h"
+#include "plugin.h"
+#include "diagnostic.h"
+#include "plugin-version.h"
+#include "tm.h"
+#include "function.h"
+#include "basic-block.h"
+#include "gimple.h"
+#include "rtl.h"
+#include "emit-rtl.h"
+#include "tree-flow.h"
+
+#define C_TYPE_FIELDS_READONLY(TYPE) TREE_LANG_FLAG_1(TYPE)
+
+int plugin_is_GPL_compatible;
+
+static struct plugin_info const_plugin_info = {
+	.version	= "201205300030",
+	.help		= "no-constify\tturn off constification\n",
+};
+
+static void deconstify_tree(tree node);
+
+static void deconstify_type(tree type)
+{
+	tree field;
+
+	for (field = TYPE_FIELDS(type); field; field = TREE_CHAIN(field)) {
+		tree type = TREE_TYPE(field);
+
+		if (TREE_CODE(type) != RECORD_TYPE && TREE_CODE(type) != UNION_TYPE)
+			continue;
+		if (!TYPE_READONLY(type))
+			continue;
+
+		deconstify_tree(field);
+	}
+	TYPE_READONLY(type) = 0;
+	C_TYPE_FIELDS_READONLY(type) = 0;
+}
+
+static void deconstify_tree(tree node)
+{
+	tree old_type, new_type, field;
+
+	old_type = TREE_TYPE(node);
+
+	gcc_assert(TYPE_READONLY(old_type) && (TYPE_QUALS(old_type) & TYPE_QUAL_CONST));
+
+	new_type = build_qualified_type(old_type, TYPE_QUALS(old_type) & ~TYPE_QUAL_CONST);
+	TYPE_FIELDS(new_type) = copy_list(TYPE_FIELDS(new_type));
+	for (field = TYPE_FIELDS(new_type); field; field = TREE_CHAIN(field))
+		DECL_FIELD_CONTEXT(field) = new_type;
+
+	deconstify_type(new_type);
+
+	TREE_READONLY(node) = 0;
+	TREE_TYPE(node) = new_type;
+}
+
+static tree handle_no_const_attribute(tree *node, tree name, tree args, int flags, bool *no_add_attrs)
+{
+	tree type;
+
+	*no_add_attrs = true;
+	if (TREE_CODE(*node) == FUNCTION_DECL) {
+		error("%qE attribute does not apply to functions", name);
+		return NULL_TREE;
+	}
+
+	if (TREE_CODE(*node) == VAR_DECL) {
+		error("%qE attribute does not apply to variables", name);
+		return NULL_TREE;
+	}
+
+	if (TYPE_P(*node)) {
+		if (TREE_CODE(*node) == RECORD_TYPE || TREE_CODE(*node) == UNION_TYPE)
+			*no_add_attrs = false;
+		else
+			error("%qE attribute applies to struct and union types only", name);
+		return NULL_TREE;
+	}
+
+	type = TREE_TYPE(*node);
+
+	if (TREE_CODE(type) != RECORD_TYPE && TREE_CODE(type) != UNION_TYPE) {
+		error("%qE attribute applies to struct and union types only", name);
+		return NULL_TREE;
+	}
+
+	if (lookup_attribute(IDENTIFIER_POINTER(name), TYPE_ATTRIBUTES(type))) {
+		error("%qE attribute is already applied to the type", name);
+		return NULL_TREE;
+	}
+
+	if (TREE_CODE(*node) == TYPE_DECL && !TYPE_READONLY(type)) {
+		error("%qE attribute used on type that is not constified", name);
+		return NULL_TREE;
+	}
+
+	if (TREE_CODE(*node) == TYPE_DECL) {
+		deconstify_tree(*node);
+		return NULL_TREE;
+	}
+
+	return NULL_TREE;
+}
+
+static void constify_type(tree type)
+{
+	TYPE_READONLY(type) = 1;
+	C_TYPE_FIELDS_READONLY(type) = 1;
+}
+
+static tree handle_do_const_attribute(tree *node, tree name, tree args, int flags, bool *no_add_attrs)
+{
+	*no_add_attrs = true;
+	if (!TYPE_P(*node)) {
+		error("%qE attribute applies to types only", name);
+		return NULL_TREE;
+	}
+
+	if (TREE_CODE(*node) != RECORD_TYPE && TREE_CODE(*node) != UNION_TYPE) {
+		error("%qE attribute applies to struct and union types only", name);
+		return NULL_TREE;
+	}
+
+	*no_add_attrs = false;
+	constify_type(*node);
+	return NULL_TREE;
+}
+
+static struct attribute_spec no_const_attr = {
+	.name			= "no_const",
+	.min_length		= 0,
+	.max_length		= 0,
+	.decl_required		= false,
+	.type_required		= false,
+	.function_type_required	= false,
+	.handler		= handle_no_const_attribute,
+#if BUILDING_GCC_VERSION >= 4007
+	.affects_type_identity	= true
+#endif
+};
+
+static struct attribute_spec do_const_attr = {
+	.name			= "do_const",
+	.min_length		= 0,
+	.max_length		= 0,
+	.decl_required		= false,
+	.type_required		= false,
+	.function_type_required	= false,
+	.handler		= handle_do_const_attribute,
+#if BUILDING_GCC_VERSION >= 4007
+	.affects_type_identity	= true
+#endif
+};
+
+static void register_attributes(void *event_data, void *data)
+{
+	register_attribute(&no_const_attr);
+	register_attribute(&do_const_attr);
+}
+
+static bool is_fptr(tree field)
+{
+	tree ptr = TREE_TYPE(field);
+
+	if (TREE_CODE(ptr) != POINTER_TYPE)
+		return false;
+
+	return TREE_CODE(TREE_TYPE(ptr)) == FUNCTION_TYPE;
+}
+
+static bool walk_struct(tree node)
+{
+	tree field;
+
+	if (TYPE_FIELDS(node) == NULL_TREE)
+		return false;
+
+	if (lookup_attribute("no_const", TYPE_ATTRIBUTES(node))) {
+		gcc_assert(!TYPE_READONLY(node));
+		deconstify_type(node);
+		return false;
+	}
+
+	for (field = TYPE_FIELDS(node); field; field = TREE_CHAIN(field)) {
+		tree type = TREE_TYPE(field);
+		enum tree_code code = TREE_CODE(type);
+
+		if (node == type)
+			return false;
+		if (code == RECORD_TYPE || code == UNION_TYPE) {
+			if (!(walk_struct(type)))
+				return false;
+		} else if (!is_fptr(field) && !TREE_READONLY(field))
+			return false;
+	}
+	return true;
+}
+
+static void finish_type(void *event_data, void *data)
+{
+	tree type = (tree)event_data;
+
+	if (type == NULL_TREE || type == error_mark_node)
+		return;
+
+	if (TYPE_READONLY(type))
+		return;
+
+	if (walk_struct(type))
+		constify_type(type);
+}
+
+static unsigned int check_local_variables(void);
+
+struct gimple_opt_pass pass_local_variable = {
+	{
+		.type			= GIMPLE_PASS,
+		.name			= "check_local_variables",
+		.gate			= NULL,
+		.execute		= check_local_variables,
+		.sub			= NULL,
+		.next			= NULL,
+		.static_pass_number	= 0,
+		.tv_id			= TV_NONE,
+		.properties_required	= 0,
+		.properties_provided	= 0,
+		.properties_destroyed	= 0,
+		.todo_flags_start	= 0,
+		.todo_flags_finish	= 0
+	}
+};
+
+static unsigned int check_local_variables(void)
+{
+	tree var;
+	referenced_var_iterator rvi;
+
+#if BUILDING_GCC_VERSION == 4005
+	FOR_EACH_REFERENCED_VAR(var, rvi) {
+#else
+	FOR_EACH_REFERENCED_VAR(cfun, var, rvi) {
+#endif
+		tree type = TREE_TYPE(var);
+
+		if (!DECL_P(var) || TREE_STATIC(var) || DECL_EXTERNAL(var))
+			continue;
+
+		if (TREE_CODE(type) != RECORD_TYPE && TREE_CODE(type) != UNION_TYPE)
+			continue;
+
+		if (!TYPE_READONLY(type))
+			continue;
+
+//		if (lookup_attribute("no_const", DECL_ATTRIBUTES(var)))
+//			continue;
+
+//		if (lookup_attribute("no_const", TYPE_ATTRIBUTES(type)))
+//			continue;
+
+		if (walk_struct(type)) {
+			error_at(DECL_SOURCE_LOCATION(var), "constified variable %qE cannot be local", var);
+			return 1;
+		}
+	}
+	return 0;
+}
+
+int plugin_init(struct plugin_name_args *plugin_info, struct plugin_gcc_version *version)
+{
+	const char * const plugin_name = plugin_info->base_name;
+	const int argc = plugin_info->argc;
+	const struct plugin_argument * const argv = plugin_info->argv;
+	int i;
+	bool constify = true;
+
+	struct register_pass_info local_variable_pass_info = {
+		.pass				= &pass_local_variable.pass,
+		.reference_pass_name		= "*referenced_vars",
+		.ref_pass_instance_number	= 1,
+		.pos_op				= PASS_POS_INSERT_AFTER
+	};
+
+	if (!plugin_default_version_check(version, &gcc_version)) {
+		error(G_("incompatible gcc/plugin versions"));
+		return 1;
+	}
+
+	for (i = 0; i < argc; ++i) {
+		if (!(strcmp(argv[i].key, "no-constify"))) {
+			constify = false;
+			continue;
+		}
+		error(G_("unkown option '-fplugin-arg-%s-%s'"), plugin_name, argv[i].key);
+	}
+
+	register_callback(plugin_name, PLUGIN_INFO, NULL, &const_plugin_info);
+	if (constify) {
+		register_callback(plugin_name, PLUGIN_FINISH_TYPE, finish_type, NULL);
+		register_callback(plugin_name, PLUGIN_PASS_MANAGER_SETUP, NULL, &local_variable_pass_info);
+	}
+	register_callback(plugin_name, PLUGIN_ATTRIBUTES, register_attributes, NULL);
+
+	return 0;
+}
--- tools/gcc/generate_size_overflow_hash.sh	1970-01-01 00:00:00.000000000 +0000
+++ tools/gcc/generate_size_overflow_hash.sh	2012-10-15 17:30:59.830924531 +0000
@@ -0,0 +1,94 @@
+#!/bin/bash
+
+# This script generates the hash table (size_overflow_hash.h) for the size_overflow gcc plugin (size_overflow_plugin.c).
+
+header1="size_overflow_hash.h"
+database="size_overflow_hash.data"
+n=65536
+
+usage() {
+cat <<EOF
+usage: $0 options
+OPTIONS:
+        -h|--help               help
+	-o			header file
+	-d			database file
+	-n			hash array size
+EOF
+    return 0
+}
+
+while true
+do
+    case "$1" in
+    -h|--help)	usage && exit 0;;
+    -n)		n=$2; shift 2;;
+    -o)		header1="$2"; shift 2;;
+    -d)		database="$2"; shift 2;;
+    --)		shift 1; break ;;
+     *)		break ;;
+    esac
+done
+
+create_defines() {
+	for i in `seq 1 32`
+	do
+		echo -e "#define PARAM"$i" (1U << "$i")" >> "$header1"
+	done
+	echo >> "$header1"
+}
+
+create_structs () {
+	rm -f "$header1"
+
+	create_defines
+
+	cat "$database" | while read data
+	do
+		data_array=($data)
+		struct_hash_name="${data_array[0]}"
+		funcn="${data_array[1]}"
+		params="${data_array[2]}"
+		next="${data_array[5]}"
+
+		echo "const struct size_overflow_hash $struct_hash_name = {" >> "$header1"
+
+		echo -e "\t.next\t= $next,\n\t.name\t= \"$funcn\"," >> "$header1"
+		echo -en "\t.param\t= " >> "$header1"
+		line=
+		for param_num in ${params//-/ };
+		do
+			line="${line}PARAM"$param_num"|"
+		done
+
+		echo -e "${line%?},\n};\n" >> "$header1"
+	done
+}
+
+create_headers () {
+	echo "const struct size_overflow_hash * const size_overflow_hash[$n] = {" >> "$header1"
+}
+
+create_array_elements () {
+	index=0
+	grep -v "nohasharray" $database | sort -n -k 4 | while read data
+	do
+		data_array=($data)
+		i="${data_array[3]}"
+		hash="${data_array[4]}"
+		while [[ $index -lt $i ]]
+		do
+			echo -e "\t["$index"]\t= NULL," >> "$header1"
+			index=$(($index + 1))
+		done
+		index=$(($index + 1))
+		echo -e "\t["$i"]\t= &"$hash"," >> "$header1"
+	done
+	echo '};' >> $header1
+}
+
+create_structs
+create_headers
+create_array_elements
+
+exit 0
--- tools/gcc/kallocstat_plugin.c	1970-01-01 00:00:00.000000000 +0000
+++ tools/gcc/kallocstat_plugin.c	2012-10-15 17:30:59.831924531 +0000
@@ -0,0 +1,167 @@
+/*
+ * Copyright 2011 by the PaX Team <pageexec@freemail.hu>
+ * Licensed under the GPL v2
+ *
+ * Note: the choice of the license means that the compilation process is
+ *       NOT 'eligible' as defined by gcc's library exception to the GPL v3,
+ *       but for the kernel it doesn't matter since it doesn't link against
+ *       any of the gcc libraries
+ *
+ * gcc plugin to find the distribution of k*alloc sizes
+ *
+ * TODO:
+ *
+ * BUGS:
+ * - none known
+ */
+#include "gcc-plugin.h"
+#include "config.h"
+#include "system.h"
+#include "coretypes.h"
+#include "tree.h"
+#include "tree-pass.h"
+#include "flags.h"
+#include "intl.h"
+#include "toplev.h"
+#include "plugin.h"
+//#include "expr.h" where are you...
+#include "diagnostic.h"
+#include "plugin-version.h"
+#include "tm.h"
+#include "function.h"
+#include "basic-block.h"
+#include "gimple.h"
+#include "rtl.h"
+#include "emit-rtl.h"
+
+extern void print_gimple_stmt(FILE *, gimple, int, int);
+
+int plugin_is_GPL_compatible;
+
+static const char * const kalloc_functions[] = {
+	"__kmalloc",
+	"kmalloc",
+	"kmalloc_large",
+	"kmalloc_node",
+	"kmalloc_order",
+	"kmalloc_order_trace",
+	"kmalloc_slab",
+	"kzalloc",
+	"kzalloc_node",
+};
+
+static struct plugin_info kallocstat_plugin_info = {
+	.version	= "201111150100",
+};
+
+static unsigned int execute_kallocstat(void);
+
+static struct gimple_opt_pass kallocstat_pass = {
+	.pass = {
+		.type			= GIMPLE_PASS,
+		.name			= "kallocstat",
+		.gate			= NULL,
+		.execute		= execute_kallocstat,
+		.sub			= NULL,
+		.next			= NULL,
+		.static_pass_number	= 0,
+		.tv_id			= TV_NONE,
+		.properties_required	= 0,
+		.properties_provided	= 0,
+		.properties_destroyed	= 0,
+		.todo_flags_start	= 0,
+		.todo_flags_finish	= 0
+	}
+};
+
+static bool is_kalloc(const char *fnname)
+{
+	size_t i;
+
+	for (i = 0; i < ARRAY_SIZE(kalloc_functions); i++)
+		if (!strcmp(fnname, kalloc_functions[i]))
+			return true;
+	return false;
+}
+
+static unsigned int execute_kallocstat(void)
+{
+	basic_block bb;
+
+	// 1. loop through BBs and GIMPLE statements
+	FOR_EACH_BB(bb) {
+		gimple_stmt_iterator gsi;
+		for (gsi = gsi_start_bb(bb); !gsi_end_p(gsi); gsi_next(&gsi)) {
+			// gimple match: 
+			tree fndecl, size;
+			gimple call_stmt;
+			const char *fnname;
+
+			// is it a call
+			call_stmt = gsi_stmt(gsi);
+			if (!is_gimple_call(call_stmt))
+				continue;
+			fndecl = gimple_call_fndecl(call_stmt);
+			if (fndecl == NULL_TREE)
+				continue;
+			if (TREE_CODE(fndecl) != FUNCTION_DECL)
+				continue;
+
+			// is it a call to k*alloc
+			fnname = IDENTIFIER_POINTER(DECL_NAME(fndecl));
+			if (!is_kalloc(fnname))
+				continue;
+
+			// is the size arg the result of a simple const assignment
+			size = gimple_call_arg(call_stmt, 0);
+			while (true) {
+				gimple def_stmt;
+				expanded_location xloc;
+				size_t size_val;
+
+				if (TREE_CODE(size) != SSA_NAME)
+					break;
+				def_stmt = SSA_NAME_DEF_STMT(size);
+				if (!def_stmt || !is_gimple_assign(def_stmt))
+					break;
+				if (gimple_num_ops(def_stmt) != 2)
+					break;
+				size = gimple_assign_rhs1(def_stmt);
+				if (!TREE_CONSTANT(size))
+					continue;
+				xloc = expand_location(gimple_location(def_stmt));
+				if (!xloc.file)
+					xloc = expand_location(DECL_SOURCE_LOCATION(current_function_decl));
+				size_val = TREE_INT_CST_LOW(size);
+				fprintf(stderr, "kallocsize: %8zu %8zx %s %s:%u\n", size_val, size_val, fnname, xloc.file, xloc.line);
+				break;
+			}
+//print_gimple_stmt(stderr, call_stmt, 0, TDF_LINENO);
+//debug_tree(gimple_call_fn(call_stmt));
+//print_node(stderr, "pax", fndecl, 4);
+		}
+	}
+
+	return 0;
+}
+
+int plugin_init(struct plugin_name_args *plugin_info, struct plugin_gcc_version *version)
+{
+	const char * const plugin_name = plugin_info->base_name;
+	struct register_pass_info kallocstat_pass_info = {
+		.pass				= &kallocstat_pass.pass,
+		.reference_pass_name		= "ssa",
+		.ref_pass_instance_number	= 1,
+		.pos_op 			= PASS_POS_INSERT_AFTER
+	};
+
+	if (!plugin_default_version_check(version, &gcc_version)) {
+		error(G_("incompatible gcc/plugin versions"));
+		return 1;
+	}
+
+	register_callback(plugin_name, PLUGIN_INFO, NULL, &kallocstat_plugin_info);
+	register_callback(plugin_name, PLUGIN_PASS_MANAGER_SETUP, NULL, &kallocstat_pass_info);
+
+	return 0;
+}
--- tools/gcc/kernexec_plugin.c	1970-01-01 00:00:00.000000000 +0000
+++ tools/gcc/kernexec_plugin.c	2012-10-15 17:30:59.831924531 +0000
@@ -0,0 +1,427 @@
+/*
+ * Copyright 2011 by the PaX Team <pageexec@freemail.hu>
+ * Licensed under the GPL v2
+ *
+ * Note: the choice of the license means that the compilation process is
+ *       NOT 'eligible' as defined by gcc's library exception to the GPL v3,
+ *       but for the kernel it doesn't matter since it doesn't link against
+ *       any of the gcc libraries
+ *
+ * gcc plugin to make KERNEXEC/amd64 almost as good as it is on i386
+ *
+ * TODO:
+ *
+ * BUGS:
+ * - none known
+ */
+#include "gcc-plugin.h"
+#include "config.h"
+#include "system.h"
+#include "coretypes.h"
+#include "tree.h"
+#include "tree-pass.h"
+#include "flags.h"
+#include "intl.h"
+#include "toplev.h"
+#include "plugin.h"
+//#include "expr.h" where are you...
+#include "diagnostic.h"
+#include "plugin-version.h"
+#include "tm.h"
+#include "function.h"
+#include "basic-block.h"
+#include "gimple.h"
+#include "rtl.h"
+#include "emit-rtl.h"
+#include "tree-flow.h"
+
+extern void print_gimple_stmt(FILE *, gimple, int, int);
+extern rtx emit_move_insn(rtx x, rtx y);
+
+int plugin_is_GPL_compatible;
+
+static struct plugin_info kernexec_plugin_info = {
+	.version	= "201111291120",
+	.help		= "method=[bts|or]\tinstrumentation method\n"
+};
+
+static unsigned int execute_kernexec_reload(void);
+static unsigned int execute_kernexec_fptr(void);
+static unsigned int execute_kernexec_retaddr(void);
+static bool kernexec_cmodel_check(void);
+
+static void (*kernexec_instrument_fptr)(gimple_stmt_iterator *);
+static void (*kernexec_instrument_retaddr)(rtx);
+
+static struct gimple_opt_pass kernexec_reload_pass = {
+	.pass = {
+		.type			= GIMPLE_PASS,
+		.name			= "kernexec_reload",
+		.gate			= kernexec_cmodel_check,
+		.execute		= execute_kernexec_reload,
+		.sub			= NULL,
+		.next			= NULL,
+		.static_pass_number	= 0,
+		.tv_id			= TV_NONE,
+		.properties_required	= 0,
+		.properties_provided	= 0,
+		.properties_destroyed	= 0,
+		.todo_flags_start	= 0,
+		.todo_flags_finish	= TODO_verify_ssa | TODO_verify_stmts | TODO_dump_func | TODO_remove_unused_locals | TODO_update_ssa_no_phi
+	}
+};
+
+static struct gimple_opt_pass kernexec_fptr_pass = {
+	.pass = {
+		.type			= GIMPLE_PASS,
+		.name			= "kernexec_fptr",
+		.gate			= kernexec_cmodel_check,
+		.execute		= execute_kernexec_fptr,
+		.sub			= NULL,
+		.next			= NULL,
+		.static_pass_number	= 0,
+		.tv_id			= TV_NONE,
+		.properties_required	= 0,
+		.properties_provided	= 0,
+		.properties_destroyed	= 0,
+		.todo_flags_start	= 0,
+		.todo_flags_finish	= TODO_verify_ssa | TODO_verify_stmts | TODO_dump_func | TODO_remove_unused_locals | TODO_update_ssa_no_phi
+	}
+};
+
+static struct rtl_opt_pass kernexec_retaddr_pass = {
+	.pass = {
+		.type			= RTL_PASS,
+		.name			= "kernexec_retaddr",
+		.gate			= kernexec_cmodel_check,
+		.execute		= execute_kernexec_retaddr,
+		.sub			= NULL,
+		.next			= NULL,
+		.static_pass_number	= 0,
+		.tv_id			= TV_NONE,
+		.properties_required	= 0,
+		.properties_provided	= 0,
+		.properties_destroyed	= 0,
+		.todo_flags_start	= 0,
+		.todo_flags_finish	= TODO_dump_func | TODO_ggc_collect
+	}
+};
+
+static bool kernexec_cmodel_check(void)
+{
+	tree section;
+
+	if (ix86_cmodel != CM_KERNEL)
+		return false;
+
+	section = lookup_attribute("section", DECL_ATTRIBUTES(current_function_decl));
+	if (!section || !TREE_VALUE(section))
+		return true;
+
+	section = TREE_VALUE(TREE_VALUE(section));
+	if (strncmp(TREE_STRING_POINTER(section), ".vsyscall_", 10))
+		return true;
+
+	return false;
+}
+
+/*
+ * add special KERNEXEC instrumentation: reload %r10 after it has been clobbered
+ */
+static void kernexec_reload_fptr_mask(gimple_stmt_iterator *gsi)
+{
+	gimple asm_movabs_stmt;
+
+	// build asm volatile("movabs $0x8000000000000000, %%r10\n\t" : : : );
+	asm_movabs_stmt = gimple_build_asm_vec("movabs $0x8000000000000000, %%r10\n\t", NULL, NULL, NULL, NULL);
+	gimple_asm_set_volatile(asm_movabs_stmt, true);
+	gsi_insert_after(gsi, asm_movabs_stmt, GSI_CONTINUE_LINKING);
+	update_stmt(asm_movabs_stmt);
+}
+
+/*
+ * find all asm() stmts that clobber r10 and add a reload of r10
+ */
+static unsigned int execute_kernexec_reload(void)
+{
+	basic_block bb;
+
+	// 1. loop through BBs and GIMPLE statements
+	FOR_EACH_BB(bb) {
+		gimple_stmt_iterator gsi;
+
+		for (gsi = gsi_start_bb(bb); !gsi_end_p(gsi); gsi_next(&gsi)) {
+			// gimple match: __asm__ ("" :  :  : "r10");
+			gimple asm_stmt;
+			size_t nclobbers;
+
+			// is it an asm ...
+			asm_stmt = gsi_stmt(gsi);
+			if (gimple_code(asm_stmt) != GIMPLE_ASM)
+				continue;
+
+			// ... clobbering r10
+			nclobbers = gimple_asm_nclobbers(asm_stmt);
+			while (nclobbers--) {
+				tree op = gimple_asm_clobber_op(asm_stmt, nclobbers);
+				if (strcmp(TREE_STRING_POINTER(TREE_VALUE(op)), "r10"))
+					continue;
+				kernexec_reload_fptr_mask(&gsi);
+//print_gimple_stmt(stderr, asm_stmt, 0, TDF_LINENO);
+				break;
+			}
+		}
+	}
+
+	return 0;
+}
+
+/*
+ * add special KERNEXEC instrumentation: force MSB of fptr to 1, which will produce
+ * a non-canonical address from a userland ptr and will just trigger a GPF on dereference
+ */
+static void kernexec_instrument_fptr_bts(gimple_stmt_iterator *gsi)
+{
+	gimple assign_intptr, assign_new_fptr, call_stmt;
+	tree intptr, old_fptr, new_fptr, kernexec_mask;
+
+	call_stmt = gsi_stmt(*gsi);
+	old_fptr = gimple_call_fn(call_stmt);
+
+	// create temporary unsigned long variable used for bitops and cast fptr to it
+	intptr = create_tmp_var(long_unsigned_type_node, "kernexec_bts");
+	add_referenced_var(intptr);
+	mark_sym_for_renaming(intptr);
+	assign_intptr = gimple_build_assign(intptr, fold_convert(long_unsigned_type_node, old_fptr));
+	gsi_insert_before(gsi, assign_intptr, GSI_SAME_STMT);
+	update_stmt(assign_intptr);
+
+	// apply logical or to temporary unsigned long and bitmask
+	kernexec_mask = build_int_cstu(long_long_unsigned_type_node, 0x8000000000000000LL);
+//	kernexec_mask = build_int_cstu(long_long_unsigned_type_node, 0xffffffff80000000LL);
+	assign_intptr = gimple_build_assign(intptr, fold_build2(BIT_IOR_EXPR, long_long_unsigned_type_node, intptr, kernexec_mask));
+	gsi_insert_before(gsi, assign_intptr, GSI_SAME_STMT);
+	update_stmt(assign_intptr);
+
+	// cast temporary unsigned long back to a temporary fptr variable
+	new_fptr = create_tmp_var(TREE_TYPE(old_fptr), "kernexec_fptr");
+	add_referenced_var(new_fptr);
+	mark_sym_for_renaming(new_fptr);
+	assign_new_fptr = gimple_build_assign(new_fptr, fold_convert(TREE_TYPE(old_fptr), intptr));
+	gsi_insert_before(gsi, assign_new_fptr, GSI_SAME_STMT);
+	update_stmt(assign_new_fptr);
+
+	// replace call stmt fn with the new fptr
+	gimple_call_set_fn(call_stmt, new_fptr);
+	update_stmt(call_stmt);
+}
+
+static void kernexec_instrument_fptr_or(gimple_stmt_iterator *gsi)
+{
+	gimple asm_or_stmt, call_stmt;
+	tree old_fptr, new_fptr, input, output;
+	VEC(tree, gc) *inputs = NULL;
+	VEC(tree, gc) *outputs = NULL;
+
+	call_stmt = gsi_stmt(*gsi);
+	old_fptr = gimple_call_fn(call_stmt);
+
+	// create temporary fptr variable
+	new_fptr = create_tmp_var(TREE_TYPE(old_fptr), "kernexec_or");
+	add_referenced_var(new_fptr);
+	mark_sym_for_renaming(new_fptr);
+
+	// build asm volatile("orq %%r10, %0\n\t" : "=r"(new_fptr) : "0"(old_fptr));
+	input = build_tree_list(NULL_TREE, build_string(2, "0"));
+	input = chainon(NULL_TREE, build_tree_list(input, old_fptr));
+	output = build_tree_list(NULL_TREE, build_string(3, "=r"));
+	output = chainon(NULL_TREE, build_tree_list(output, new_fptr));
+	VEC_safe_push(tree, gc, inputs, input);
+	VEC_safe_push(tree, gc, outputs, output);
+	asm_or_stmt = gimple_build_asm_vec("orq %%r10, %0\n\t", inputs, outputs, NULL, NULL);
+	gimple_asm_set_volatile(asm_or_stmt, true);
+	gsi_insert_before(gsi, asm_or_stmt, GSI_SAME_STMT);
+	update_stmt(asm_or_stmt);
+
+	// replace call stmt fn with the new fptr
+	gimple_call_set_fn(call_stmt, new_fptr);
+	update_stmt(call_stmt);
+}
+
+/*
+ * find all C level function pointer dereferences and forcibly set the highest bit of the pointer
+ */
+static unsigned int execute_kernexec_fptr(void)
+{
+	basic_block bb;
+
+	// 1. loop through BBs and GIMPLE statements
+	FOR_EACH_BB(bb) {
+		gimple_stmt_iterator gsi;
+
+		for (gsi = gsi_start_bb(bb); !gsi_end_p(gsi); gsi_next(&gsi)) {
+			// gimple match: h_1 = get_fptr (); D.2709_3 = h_1 (x_2(D));
+			tree fn;
+			gimple call_stmt;
+
+			// is it a call ...
+			call_stmt = gsi_stmt(gsi);
+			if (!is_gimple_call(call_stmt))
+				continue;
+			fn = gimple_call_fn(call_stmt);
+			if (TREE_CODE(fn) == ADDR_EXPR)
+				continue;
+			if (TREE_CODE(fn) != SSA_NAME)
+				gcc_unreachable();
+
+			// ... through a function pointer
+			fn = SSA_NAME_VAR(fn);
+			if (TREE_CODE(fn) != VAR_DECL && TREE_CODE(fn) != PARM_DECL)
+				continue;
+			fn = TREE_TYPE(fn);
+			if (TREE_CODE(fn) != POINTER_TYPE)
+				continue;
+			fn = TREE_TYPE(fn);
+			if (TREE_CODE(fn) != FUNCTION_TYPE)
+				continue;
+
+			kernexec_instrument_fptr(&gsi);
+
+//debug_tree(gimple_call_fn(call_stmt));
+//print_gimple_stmt(stderr, call_stmt, 0, TDF_LINENO);
+		}
+	}
+
+	return 0;
+}
+
+// add special KERNEXEC instrumentation: btsq $63,(%rsp) just before retn
+static void kernexec_instrument_retaddr_bts(rtx insn)
+{
+	rtx btsq;
+	rtvec argvec, constraintvec, labelvec;
+	int line;
+
+	// create asm volatile("btsq $63,(%%rsp)":::)
+	argvec = rtvec_alloc(0);
+	constraintvec = rtvec_alloc(0);
+	labelvec = rtvec_alloc(0);
+	line = expand_location(RTL_LOCATION(insn)).line;
+	btsq = gen_rtx_ASM_OPERANDS(VOIDmode, "btsq $63,(%%rsp)", empty_string, 0, argvec, constraintvec, labelvec, line);
+	MEM_VOLATILE_P(btsq) = 1;
+//	RTX_FRAME_RELATED_P(btsq) = 1; // not for ASM_OPERANDS
+	emit_insn_before(btsq, insn);
+}
+
+// add special KERNEXEC instrumentation: orq %r10,(%rsp) just before retn
+static void kernexec_instrument_retaddr_or(rtx insn)
+{
+	rtx orq;
+	rtvec argvec, constraintvec, labelvec;
+	int line;
+
+	// create asm volatile("orq %%r10,(%%rsp)":::)
+	argvec = rtvec_alloc(0);
+	constraintvec = rtvec_alloc(0);
+	labelvec = rtvec_alloc(0);
+	line = expand_location(RTL_LOCATION(insn)).line;
+	orq = gen_rtx_ASM_OPERANDS(VOIDmode, "orq %%r10,(%%rsp)", empty_string, 0, argvec, constraintvec, labelvec, line);
+	MEM_VOLATILE_P(orq) = 1;
+//	RTX_FRAME_RELATED_P(orq) = 1; // not for ASM_OPERANDS
+	emit_insn_before(orq, insn);
+}
+
+/*
+ * find all asm level function returns and forcibly set the highest bit of the return address
+ */
+static unsigned int execute_kernexec_retaddr(void)
+{
+	rtx insn;
+
+	// 1. find function returns
+	for (insn = get_insns(); insn; insn = NEXT_INSN(insn)) {
+		// rtl match: (jump_insn 41 40 42 2 (return) fptr.c:42 634 {return_internal} (nil))
+		//            (jump_insn 12 9 11 2 (parallel [ (return) (unspec [ (0) ] UNSPEC_REP) ]) fptr.c:46 635 {return_internal_long} (nil))
+		rtx body;
+
+		// is it a retn
+		if (!JUMP_P(insn))
+			continue;
+		body = PATTERN(insn);
+		if (GET_CODE(body) == PARALLEL)
+			body = XVECEXP(body, 0, 0);
+		if (GET_CODE(body) != RETURN)
+			continue;
+		kernexec_instrument_retaddr(insn);
+	}
+
+//	print_simple_rtl(stderr, get_insns());
+//	print_rtl(stderr, get_insns());
+
+	return 0;
+}
+
+int plugin_init(struct plugin_name_args *plugin_info, struct plugin_gcc_version *version)
+{
+	const char * const plugin_name = plugin_info->base_name;
+	const int argc = plugin_info->argc;
+	const struct plugin_argument * const argv = plugin_info->argv;
+	int i;
+	struct register_pass_info kernexec_reload_pass_info = {
+		.pass				= &kernexec_reload_pass.pass,
+		.reference_pass_name		= "ssa",
+		.ref_pass_instance_number	= 1,
+		.pos_op 			= PASS_POS_INSERT_AFTER
+	};
+	struct register_pass_info kernexec_fptr_pass_info = {
+		.pass				= &kernexec_fptr_pass.pass,
+		.reference_pass_name		= "ssa",
+		.ref_pass_instance_number	= 1,
+		.pos_op 			= PASS_POS_INSERT_AFTER
+	};
+	struct register_pass_info kernexec_retaddr_pass_info = {
+		.pass				= &kernexec_retaddr_pass.pass,
+		.reference_pass_name		= "pro_and_epilogue",
+		.ref_pass_instance_number	= 1,
+		.pos_op 			= PASS_POS_INSERT_AFTER
+	};
+
+	if (!plugin_default_version_check(version, &gcc_version)) {
+		error(G_("incompatible gcc/plugin versions"));
+		return 1;
+	}
+
+	register_callback(plugin_name, PLUGIN_INFO, NULL, &kernexec_plugin_info);
+
+	if (TARGET_64BIT == 0)
+		return 0;
+
+	for (i = 0; i < argc; ++i) {
+		if (!strcmp(argv[i].key, "method")) {
+			if (!argv[i].value) {
+				error(G_("no value supplied for option '-fplugin-arg-%s-%s'"), plugin_name, argv[i].key);
+				continue;
+			}
+			if (!strcmp(argv[i].value, "bts")) {
+				kernexec_instrument_fptr = kernexec_instrument_fptr_bts;
+				kernexec_instrument_retaddr = kernexec_instrument_retaddr_bts;
+			} else if (!strcmp(argv[i].value, "or")) {
+				kernexec_instrument_fptr = kernexec_instrument_fptr_or;
+				kernexec_instrument_retaddr = kernexec_instrument_retaddr_or;
+				fix_register("r10", 1, 1);
+			} else
+				error(G_("invalid option argument '-fplugin-arg-%s-%s=%s'"), plugin_name, argv[i].key, argv[i].value);
+			continue;
+		}
+		error(G_("unkown option '-fplugin-arg-%s-%s'"), plugin_name, argv[i].key);
+	}
+	if (!kernexec_instrument_fptr || !kernexec_instrument_retaddr)
+		error(G_("no instrumentation method was selected via '-fplugin-arg-%s-method'"), plugin_name);
+
+	if (kernexec_instrument_fptr == kernexec_instrument_fptr_or)
+		register_callback(plugin_name, PLUGIN_PASS_MANAGER_SETUP, NULL, &kernexec_reload_pass_info);
+	register_callback(plugin_name, PLUGIN_PASS_MANAGER_SETUP, NULL, &kernexec_fptr_pass_info);
+	register_callback(plugin_name, PLUGIN_PASS_MANAGER_SETUP, NULL, &kernexec_retaddr_pass_info);
+
+	return 0;
+}
--- tools/gcc/latent_entropy_plugin.c	1970-01-01 00:00:00.000000000 +0000
+++ tools/gcc/latent_entropy_plugin.c	2012-10-15 17:30:59.831924531 +0000
@@ -0,0 +1,295 @@
+/*
+ * Copyright 2012 by the PaX Team <pageexec@freemail.hu>
+ * Licensed under the GPL v2
+ *
+ * Note: the choice of the license means that the compilation process is
+ *       NOT 'eligible' as defined by gcc's library exception to the GPL v3,
+ *       but for the kernel it doesn't matter since it doesn't link against
+ *       any of the gcc libraries
+ *
+ * gcc plugin to help generate a little bit of entropy from program state,
+ * used during boot in the kernel
+ *
+ * TODO:
+ * - add ipa pass to identify not explicitly marked candidate functions
+ * - mix in more program state (function arguments/return values, loop variables, etc)
+ * - more instrumentation control via attribute parameters
+ *
+ * BUGS:
+ * - LTO needs -flto-partition=none for now
+ */
+#include "gcc-plugin.h"
+#include "config.h"
+#include "system.h"
+#include "coretypes.h"
+#include "tree.h"
+#include "tree-pass.h"
+#include "flags.h"
+#include "intl.h"
+#include "toplev.h"
+#include "plugin.h"
+//#include "expr.h" where are you...
+#include "diagnostic.h"
+#include "plugin-version.h"
+#include "tm.h"
+#include "function.h"
+#include "basic-block.h"
+#include "gimple.h"
+#include "rtl.h"
+#include "emit-rtl.h"
+#include "tree-flow.h"
+
+int plugin_is_GPL_compatible;
+
+static tree latent_entropy_decl;
+
+static struct plugin_info latent_entropy_plugin_info = {
+	.version	= "201207271820",
+	.help		= NULL
+};
+
+static unsigned int execute_latent_entropy(void);
+static bool gate_latent_entropy(void);
+
+static struct gimple_opt_pass latent_entropy_pass = {
+	.pass = {
+		.type			= GIMPLE_PASS,
+		.name			= "latent_entropy",
+		.gate			= gate_latent_entropy,
+		.execute		= execute_latent_entropy,
+		.sub			= NULL,
+		.next			= NULL,
+		.static_pass_number	= 0,
+		.tv_id			= TV_NONE,
+		.properties_required	= PROP_gimple_leh | PROP_cfg,
+		.properties_provided	= 0,
+		.properties_destroyed	= 0,
+		.todo_flags_start	= 0, //TODO_verify_ssa | TODO_verify_flow | TODO_verify_stmts,
+		.todo_flags_finish	= TODO_verify_ssa | TODO_verify_stmts | TODO_dump_func | TODO_update_ssa
+	}
+};
+
+static tree handle_latent_entropy_attribute(tree *node, tree name, tree args, int flags, bool *no_add_attrs)
+{
+	if (TREE_CODE(*node) != FUNCTION_DECL) {
+		*no_add_attrs = true;
+		error("%qE attribute only applies to functions", name);
+	}
+	return NULL_TREE;
+}
+
+static struct attribute_spec latent_entropy_attr = {
+	.name				= "latent_entropy",
+	.min_length			= 0,
+	.max_length			= 0,
+	.decl_required			= true,
+	.type_required			= false,
+	.function_type_required		= false,
+	.handler			= handle_latent_entropy_attribute,
+#if BUILDING_GCC_VERSION >= 4007
+	.affects_type_identity		= false
+#endif
+};
+
+static void register_attributes(void *event_data, void *data)
+{
+	register_attribute(&latent_entropy_attr);
+}
+
+static bool gate_latent_entropy(void)
+{
+	tree latent_entropy_attr;
+
+	latent_entropy_attr = lookup_attribute("latent_entropy", DECL_ATTRIBUTES(current_function_decl));
+	return latent_entropy_attr != NULL_TREE;
+}
+
+static unsigned HOST_WIDE_INT seed;
+static unsigned HOST_WIDE_INT get_random_const(void)
+{
+	seed = (seed >> 1U) ^ (-(seed & 1ULL) & 0xD800000000000000ULL);
+	return seed;
+}
+
+static enum tree_code get_op(tree *rhs)
+{
+	static enum tree_code op;
+	unsigned HOST_WIDE_INT random_const;
+
+	random_const = get_random_const();
+
+	switch (op) {
+	case BIT_XOR_EXPR:
+		op = PLUS_EXPR;
+		break;
+
+	case PLUS_EXPR:
+		if (rhs) {
+			op = LROTATE_EXPR;
+			random_const &= HOST_BITS_PER_WIDE_INT - 1;
+			break;
+		}
+
+	case LROTATE_EXPR:
+	default:
+		op = BIT_XOR_EXPR;
+		break;
+	}
+	if (rhs)
+		*rhs = build_int_cstu(unsigned_intDI_type_node, random_const);
+	return op;
+}
+
+static void perturb_local_entropy(basic_block bb, tree local_entropy)
+{
+	gimple_stmt_iterator gsi;
+	gimple assign;
+	tree addxorrol, rhs;
+	enum tree_code op;
+
+	op = get_op(&rhs);
+	addxorrol = fold_build2_loc(UNKNOWN_LOCATION, op, unsigned_intDI_type_node, local_entropy, rhs);
+	assign = gimple_build_assign(local_entropy, addxorrol);
+	find_referenced_vars_in(assign);
+//debug_bb(bb);
+	gsi = gsi_after_labels(bb);
+	gsi_insert_before(&gsi, assign, GSI_NEW_STMT);
+	update_stmt(assign);
+}
+
+static void perturb_latent_entropy(basic_block bb, tree rhs)
+{
+	gimple_stmt_iterator gsi;
+	gimple assign;
+	tree addxorrol, temp;
+
+	// 1. create temporary copy of latent_entropy
+	temp = create_tmp_var(unsigned_intDI_type_node, "temp_latent_entropy");
+	add_referenced_var(temp);
+	mark_sym_for_renaming(temp);
+
+	// 2. read...
+	assign = gimple_build_assign(temp, latent_entropy_decl);
+	find_referenced_vars_in(assign);
+	gsi = gsi_after_labels(bb);
+	gsi_insert_after(&gsi, assign, GSI_NEW_STMT);
+	update_stmt(assign);
+
+	// 3. ...modify...
+	addxorrol = fold_build2_loc(UNKNOWN_LOCATION, get_op(NULL), unsigned_intDI_type_node, temp, rhs);
+	assign = gimple_build_assign(temp, addxorrol);
+	find_referenced_vars_in(assign);
+	gsi_insert_after(&gsi, assign, GSI_NEW_STMT);
+	update_stmt(assign);
+
+	// 4. ...write latent_entropy
+	assign = gimple_build_assign(latent_entropy_decl, temp);
+	find_referenced_vars_in(assign);
+	gsi_insert_after(&gsi, assign, GSI_NEW_STMT);
+	update_stmt(assign);
+}
+
+static unsigned int execute_latent_entropy(void)
+{
+	basic_block bb;
+	gimple assign;
+	gimple_stmt_iterator gsi;
+	tree local_entropy;
+
+	if (!latent_entropy_decl) {
+		struct varpool_node *node;
+
+		for (node = varpool_nodes; node; node = node->next) {
+			tree var = node->decl;
+			if (strcmp(IDENTIFIER_POINTER(DECL_NAME(var)), "latent_entropy"))
+				continue;
+			latent_entropy_decl = var;
+//			debug_tree(var);
+			break;
+		}
+		if (!latent_entropy_decl) {
+//			debug_tree(current_function_decl);
+			return 0;
+		}
+	}
+
+//fprintf(stderr, "latent_entropy: %s\n", IDENTIFIER_POINTER(DECL_NAME(current_function_decl)));
+
+	// 1. create local entropy variable
+	local_entropy = create_tmp_var(unsigned_intDI_type_node, "local_entropy");
+	add_referenced_var(local_entropy);
+	mark_sym_for_renaming(local_entropy);
+
+	// 2. initialize local entropy variable
+	bb = split_block_after_labels(ENTRY_BLOCK_PTR)->dest;
+	if (dom_info_available_p(CDI_DOMINATORS))
+		set_immediate_dominator(CDI_DOMINATORS, bb, ENTRY_BLOCK_PTR);
+	gsi = gsi_start_bb(bb);
+
+	assign = gimple_build_assign(local_entropy, build_int_cstu(unsigned_intDI_type_node, get_random_const()));
+//	gimple_set_location(assign, loc);
+	find_referenced_vars_in(assign);
+	gsi_insert_after(&gsi, assign, GSI_NEW_STMT);
+	update_stmt(assign);
+	bb = bb->next_bb;
+
+	// 3. instrument each BB with an operation on the local entropy variable
+	while (bb != EXIT_BLOCK_PTR) {
+		perturb_local_entropy(bb, local_entropy);
+		bb = bb->next_bb;
+	};
+
+	// 4. mix local entropy into the global entropy variable
+	perturb_latent_entropy(EXIT_BLOCK_PTR->prev_bb, local_entropy);
+	return 0;
+}
+
+static void start_unit_callback(void *gcc_data, void *user_data)
+{
+#if BUILDING_GCC_VERSION >= 4007
+	seed = get_random_seed(false);
+#else
+	sscanf(get_random_seed(false), "%" HOST_WIDE_INT_PRINT "x", &seed);
+	seed *= seed;
+#endif
+
+	if (in_lto_p)
+		return;
+
+	// extern u64 latent_entropy
+	latent_entropy_decl = build_decl(UNKNOWN_LOCATION, VAR_DECL, get_identifier("latent_entropy"), unsigned_intDI_type_node);
+
+	TREE_STATIC(latent_entropy_decl) = 1;
+	TREE_PUBLIC(latent_entropy_decl) = 1;
+	TREE_USED(latent_entropy_decl) = 1;
+	TREE_THIS_VOLATILE(latent_entropy_decl) = 1;
+	DECL_EXTERNAL(latent_entropy_decl) = 1;
+	DECL_ARTIFICIAL(latent_entropy_decl) = 0;
+	DECL_INITIAL(latent_entropy_decl) = NULL;
+//	DECL_ASSEMBLER_NAME(latent_entropy_decl);
+//	varpool_finalize_decl(latent_entropy_decl);
+//	varpool_mark_needed_node(latent_entropy_decl);
+}
+
+int plugin_init(struct plugin_name_args *plugin_info, struct plugin_gcc_version *version)
+{
+	const char * const plugin_name = plugin_info->base_name;
+	struct register_pass_info latent_entropy_pass_info = {
+		.pass				= &latent_entropy_pass.pass,
+		.reference_pass_name		= "optimized",
+		.ref_pass_instance_number	= 1,
+		.pos_op 			= PASS_POS_INSERT_BEFORE
+	};
+
+	if (!plugin_default_version_check(version, &gcc_version)) {
+		error(G_("incompatible gcc/plugin versions"));
+		return 1;
+	}
+
+	register_callback(plugin_name, PLUGIN_INFO, NULL, &latent_entropy_plugin_info);
+	register_callback ("start_unit", PLUGIN_START_UNIT, &start_unit_callback, NULL);
+	register_callback(plugin_name, PLUGIN_PASS_MANAGER_SETUP, NULL, &latent_entropy_pass_info);
+	register_callback(plugin_name, PLUGIN_ATTRIBUTES, register_attributes, NULL);
+
+	return 0;
+}
--- tools/gcc/size_overflow_hash.data	1970-01-01 00:00:00.000000000 +0000
+++ tools/gcc/size_overflow_hash.data	2012-10-15 17:30:59.834924531 +0000
@@ -0,0 +1,3597 @@
+_000001_hash alloc_dr 2 65495 _000001_hash NULL
+_000002_hash __copy_from_user 3 10918 _000002_hash NULL
+_000003_hash copy_from_user 3 17559 _000003_hash NULL
+_000004_hash __copy_from_user_inatomic 3 4365 _000004_hash NULL
+_000005_hash __copy_from_user_nocache 3 39351 _000005_hash NULL
+_000006_hash __copy_to_user_inatomic 3 19214 _000006_hash NULL
+_000007_hash do_xip_mapping_read 5 60297 _000007_hash NULL
+_000008_hash hugetlbfs_read 3 11268 _000008_hash NULL
+_000009_hash kmalloc 1 60432 _003302_hash NULL nohasharray
+_000010_hash kmalloc_array 1-2 9444 _000010_hash NULL
+_000012_hash __kmalloc_reserve 1 17080 _000012_hash NULL
+_000013_hash kmalloc_slab 1 11917 _000013_hash NULL
+_000014_hash kmemdup 2 64015 _000014_hash NULL
+_000015_hash __krealloc 2 14857 _000340_hash NULL nohasharray
+_000016_hash memdup_user 2 59590 _000016_hash NULL
+_000017_hash module_alloc 1 63630 _000017_hash NULL
+_000018_hash read_default_ldt 2 14302 _000018_hash NULL
+_000019_hash read_kcore 3 63488 _000019_hash NULL
+_000020_hash read_ldt 2 47570 _000020_hash NULL
+_000021_hash read_zero 3 19366 _000021_hash NULL
+_000022_hash __vmalloc_node 1 39308 _000022_hash NULL
+_000023_hash aac_convert_sgraw2 4 51598 _000023_hash NULL
+_000024_hash aa_simple_write_to_buffer 4-3 49683 _000024_hash NULL
+_000025_hash ablkcipher_copy_iv 3 64140 _000025_hash NULL
+_000026_hash ablkcipher_next_slow 3-4 47274 _000026_hash NULL
+_000028_hash acpi_battery_write_alarm 3 1240 _000028_hash NULL
+_000029_hash acpi_os_allocate 1 14892 _000029_hash NULL
+_000030_hash acpi_system_write_wakeup_device 3 34853 _000030_hash NULL
+_000031_hash adu_write 3 30487 _000031_hash NULL
+_000032_hash aer_inject_write 3 52399 _000032_hash NULL
+_000033_hash afs_alloc_flat_call 2-3 36399 _000033_hash NULL
+_000035_hash afs_proc_cells_write 3 61139 _000035_hash NULL
+_000036_hash afs_proc_rootcell_write 3 15822 _000036_hash NULL
+_000037_hash agp_3_5_isochronous_node_enable 3 49465 _000037_hash NULL
+_000038_hash agp_alloc_page_array 1 22554 _000038_hash NULL
+_000039_hash ah_alloc_tmp 2-3 54378 _000039_hash NULL
+_000041_hash ahash_setkey_unaligned 3 33521 _000041_hash NULL
+_000042_hash alg_setkey 3 31485 _000042_hash NULL
+_000043_hash aligned_kmalloc 1 3628 _000043_hash NULL
+_000044_hash alloc_context 1 3194 _000044_hash NULL
+_000045_hash alloc_ep_req 2 54860 _000045_hash NULL
+_000046_hash alloc_fdmem 1 27083 _000046_hash NULL
+_000047_hash alloc_flex_gd 1 57259 _000047_hash NULL
+_000048_hash alloc_sglist 1-3-2 22960 _000048_hash NULL
+_000049_hash __alloc_skb 1 23940 _000049_hash NULL
+_000050_hash aoedev_flush 2 44398 _000050_hash NULL
+_000051_hash append_to_buffer 3 63550 _000051_hash NULL
+_000052_hash asix_read_cmd 5 13245 _000052_hash NULL
+_000053_hash asix_write_cmd 5 58192 _000053_hash NULL
+_000054_hash at76_set_card_command 4 4471 _000054_hash NULL
+_000055_hash ath6kl_add_bss_if_needed 6 24317 _000055_hash NULL
+_000056_hash ath6kl_debug_roam_tbl_event 3 5224 _000056_hash NULL
+_000057_hash ath6kl_mgmt_powersave_ap 6 13791 _000057_hash NULL
+_000058_hash ath6kl_send_go_probe_resp 3 21113 _000058_hash NULL
+_000059_hash ath6kl_set_ap_probe_resp_ies 3 50539 _000059_hash NULL
+_000060_hash ath6kl_set_assoc_req_ies 3 43185 _000060_hash NULL
+_000061_hash ath6kl_wmi_bssinfo_event_rx 3 2275 _000061_hash NULL
+_000062_hash ath6kl_wmi_send_action_cmd 7 58860 _000062_hash NULL
+_000063_hash __ath6kl_wmi_send_mgmt_cmd 7 38971 _000063_hash NULL
+_000064_hash attach_hdlc_protocol 3 19986 _000064_hash NULL
+_000065_hash audio_write 4 54261 _001782_hash NULL nohasharray
+_000066_hash audit_unpack_string 3 13748 _000066_hash NULL
+_000067_hash ax25_setsockopt 5 42740 _000067_hash NULL
+_000068_hash b43_debugfs_write 3 34838 _000068_hash NULL
+_000069_hash b43legacy_debugfs_write 3 28556 _000069_hash NULL
+_000070_hash batadv_hash_new 1 40491 _000070_hash NULL
+_000071_hash batadv_orig_node_add_if 2 18433 _000071_hash NULL
+_000072_hash batadv_orig_node_del_if 2 4 _000072_hash NULL
+_000073_hash batadv_tt_changes_fill_buff 4 40323 _000073_hash NULL
+_000074_hash batadv_tt_realloc_packet_buff 4 49960 _000074_hash NULL
+_000075_hash bch_alloc 1 4593 _000075_hash NULL
+_000076_hash befs_nls2utf 3 17163 _000076_hash NULL
+_000077_hash befs_utf2nls 3 25628 _000077_hash NULL
+_000078_hash bfad_debugfs_write_regrd 3 15218 _000078_hash NULL
+_000079_hash bfad_debugfs_write_regwr 3 61841 _000079_hash NULL
+_000080_hash bio_alloc_map_data 1-2 50782 _000080_hash NULL
+_000082_hash bio_kmalloc 2 54672 _000082_hash NULL
+_000083_hash bitmap_storage_alloc 2 55077 _000083_hash NULL
+_000084_hash blkcipher_copy_iv 3 24075 _000084_hash NULL
+_000085_hash blkcipher_next_slow 3-4 52733 _000085_hash NULL
+_000087_hash bl_pipe_downcall 3 34264 _000087_hash NULL
+_000088_hash bnad_debugfs_write_regrd 3 6706 _000088_hash NULL
+_000089_hash bnad_debugfs_write_regwr 3 57500 _000089_hash NULL
+_000090_hash bnx2fc_cmd_mgr_alloc 2-3 24873 _000090_hash NULL
+_000092_hash bnx2fc_process_unsol_compl 2 15576 _000092_hash NULL
+_000093_hash bnx2_nvram_write 2-4 7790 _000093_hash NULL
+_000095_hash btmrvl_gpiogap_write 3 35053 _000095_hash NULL
+_000096_hash btmrvl_hscfgcmd_write 3 27143 _000096_hash NULL
+_000097_hash btmrvl_hscmd_write 3 27089 _000097_hash NULL
+_000098_hash btmrvl_hsmode_write 3 42252 _000098_hash NULL
+_000099_hash btmrvl_pscmd_write 3 29504 _000099_hash NULL
+_000100_hash btmrvl_psmode_write 3 3703 _000100_hash NULL
+_000101_hash btrfs_alloc_delayed_item 1 11678 _000101_hash NULL
+_000102_hash c4iw_id_table_alloc 3 48163 _000102_hash NULL
+_000103_hash cache_do_downcall 3 6926 _000103_hash NULL
+_000104_hash cachefiles_cook_key 2 33274 _000104_hash NULL
+_000105_hash cachefiles_daemon_write 3 43535 _000105_hash NULL
+_000106_hash capi_write 3 35104 _003607_hash NULL nohasharray
+_000107_hash carl9170_debugfs_write 3 50857 _000107_hash NULL
+_000108_hash cciss_allocate_sg_chain_blocks 2-3 5368 _000108_hash NULL
+_000110_hash cciss_proc_write 3 10259 _000110_hash NULL
+_000111_hash cdrom_read_cdda_old 4 27664 _000111_hash NULL
+_000112_hash ceph_alloc_page_vector 1 18710 _000112_hash NULL
+_000113_hash ceph_buffer_new 1 35974 _000113_hash NULL
+_000114_hash ceph_copy_user_to_page_vector 3-4 656 _000114_hash NULL
+_000116_hash ceph_get_direct_page_vector 2 41917 _000116_hash NULL
+_000117_hash ceph_msg_new 2 5846 _000117_hash NULL
+_000118_hash ceph_setxattr 4 18913 _000118_hash NULL
+_000119_hash cfi_read_pri 3 24366 _000119_hash NULL
+_000120_hash cgroup_write_string 5 10900 _000120_hash NULL
+_000121_hash cgroup_write_X64 5 54514 _000121_hash NULL
+_000122_hash change_xattr 5 61390 _000122_hash NULL
+_000123_hash check_load_and_stores 2 2143 _000123_hash NULL
+_000124_hash cifs_idmap_key_instantiate 3 54503 _000124_hash NULL
+_000125_hash cifs_security_flags_proc_write 3 5484 _000125_hash NULL
+_000126_hash cifs_setxattr 4 23957 _000126_hash NULL
+_000127_hash cifs_spnego_key_instantiate 3 23588 _000127_hash NULL
+_000128_hash cld_pipe_downcall 3 15058 _000128_hash NULL
+_000129_hash clear_refs_write 3 61904 _000129_hash NULL
+_000130_hash clusterip_proc_write 3 44729 _000130_hash NULL
+_000131_hash cm4040_write 3 58079 _000131_hash NULL
+_000132_hash cm_copy_private_data 2 3649 _000132_hash NULL
+_000133_hash cmm_write 3 2896 _000133_hash NULL
+_000134_hash cm_write 3 36858 _000134_hash NULL
+_000135_hash coda_psdev_write 3 1711 _000135_hash NULL
+_000136_hash codec_reg_read_file 3 36280 _000136_hash NULL
+_000137_hash command_file_write 3 31318 _000137_hash NULL
+_000138_hash command_write 3 58841 _000138_hash NULL
+_000139_hash comm_write 3 44537 _001714_hash NULL nohasharray
+_000140_hash concat_writev 3 21451 _000140_hash NULL
+_000141_hash copy_and_check 3 19089 _000141_hash NULL
+_000142_hash copy_from_user_toio 3 31966 _000142_hash NULL
+_000143_hash copy_items 6 50140 _000143_hash NULL
+_000144_hash copy_macs 4 45534 _000144_hash NULL
+_000145_hash __copy_to_user 3 17551 _000145_hash NULL
+_000146_hash copy_vm86_regs_from_user 3 45340 _000146_hash NULL
+_000147_hash core_sys_select 1 47494 _000147_hash NULL
+_000148_hash cosa_write 3 1774 _000148_hash NULL
+_000149_hash cp210x_set_config 4 46447 _000149_hash NULL
+_000150_hash create_entry 2 33479 _000150_hash NULL
+_000151_hash create_queues 2-3 9088 _000151_hash NULL
+_000153_hash create_xattr 5 54106 _000153_hash NULL
+_000154_hash create_xattr_datum 5 33356 _003443_hash NULL nohasharray
+_000155_hash csum_partial_copy_fromiovecend 3-4 9957 _000155_hash NULL
+_000157_hash ctrl_out 3-5 8712 _000157_hash NULL
+_000159_hash cxacru_cm_get_array 4 4412 _000159_hash NULL
+_000160_hash cxgbi_alloc_big_mem 1 4707 _000160_hash NULL
+_000161_hash dac960_user_command_proc_write 3 3071 _000161_hash NULL
+_000162_hash datablob_format 2 39571 _002490_hash NULL nohasharray
+_000163_hash dccp_feat_clone_sp_val 3 11942 _000163_hash NULL
+_000164_hash dccp_setsockopt_ccid 4 30701 _000164_hash NULL
+_000165_hash dccp_setsockopt_cscov 2 37766 _000165_hash NULL
+_000166_hash dccp_setsockopt_service 4 65336 _000166_hash NULL
+_000167_hash ddebug_proc_write 3 18055 _000167_hash NULL
+_000168_hash dev_config 3 8506 _000168_hash NULL
+_000169_hash device_write 3 45156 _000169_hash NULL
+_000170_hash devm_kzalloc 2 4966 _000170_hash NULL
+_000171_hash devres_alloc 2 551 _000171_hash NULL
+_000172_hash dfs_file_write 3 41196 _000172_hash NULL
+_000173_hash direct_entry 3 38836 _000173_hash NULL
+_000174_hash dispatch_ioctl 2 32357 _000174_hash NULL
+_000175_hash dispatch_proc_write 3 44320 _000175_hash NULL
+_000176_hash diva_os_copy_from_user 4 7792 _000176_hash NULL
+_000177_hash dlm_alloc_pagevec 1 54296 _000177_hash NULL
+_000178_hash dlmfs_file_read 3 28385 _000178_hash NULL
+_000179_hash dlmfs_file_write 3 6892 _000179_hash NULL
+_000180_hash dm_read 3 15674 _000180_hash NULL
+_000181_hash dm_write 3 2513 _000181_hash NULL
+_000182_hash __dn_setsockopt 5 13060 _000182_hash NULL
+_000183_hash dns_query 3 9676 _000183_hash NULL
+_000184_hash dns_resolver_instantiate 3 63314 _000184_hash NULL
+_000185_hash do_add_counters 3 3992 _000185_hash NULL
+_000186_hash __do_config_autodelink 3 58763 _000186_hash NULL
+_000187_hash do_ip_setsockopt 5 41852 _000187_hash NULL
+_000188_hash do_ipv6_setsockopt 5 18215 _000188_hash NULL
+_000189_hash do_ip_vs_set_ctl 4 48641 _000189_hash NULL
+_000190_hash do_kimage_alloc 3 64827 _000190_hash NULL
+_000191_hash do_register_entry 4 29478 _000191_hash NULL
+_000192_hash do_tty_write 5 44896 _000192_hash NULL
+_000193_hash do_update_counters 4 2259 _000193_hash NULL
+_000194_hash dsp_write 2 46218 _000194_hash NULL
+_000195_hash dup_to_netobj 3 26363 _000195_hash NULL
+_000196_hash dwc3_link_state_write 3 12641 _000196_hash NULL
+_000197_hash dwc3_mode_write 3 51997 _000197_hash NULL
+_000198_hash dwc3_testmode_write 3 30516 _000198_hash NULL
+_000199_hash ecryptfs_copy_filename 4 11868 _000199_hash NULL
+_000200_hash ecryptfs_miscdev_write 3 26847 _000200_hash NULL
+_000201_hash ecryptfs_send_miscdev 2 64816 _000201_hash NULL
+_000202_hash efx_tsoh_heap_alloc 2 58545 _000202_hash NULL
+_000203_hash emi26_writememory 4 57908 _000203_hash NULL
+_000204_hash emi62_writememory 4 29731 _000204_hash NULL
+_000205_hash encrypted_instantiate 3 3168 _000205_hash NULL
+_000206_hash encrypted_update 3 13414 _000206_hash NULL
+_000207_hash ep0_write 3 14536 _001422_hash NULL nohasharray
+_000208_hash ep_read 3 58813 _000208_hash NULL
+_000209_hash ep_write 3 59008 _000209_hash NULL
+_000210_hash erst_dbg_write 3 46715 _000210_hash NULL
+_000211_hash esp_alloc_tmp 2-3 40558 _000211_hash NULL
+_000213_hash evdev_do_ioctl 2 24459 _000213_hash NULL
+_000214_hash exofs_read_lookup_dev_table 3 17733 _000214_hash NULL
+_000215_hash ext4_kvmalloc 1 14796 _000215_hash NULL
+_000216_hash ezusb_writememory 4 45976 _000216_hash NULL
+_000217_hash fanotify_write 3 64623 _000217_hash NULL
+_000218_hash fd_copyin 3 56247 _000218_hash NULL
+_000219_hash ffs_epfile_io 3 64886 _000219_hash NULL
+_000220_hash ffs_prepare_buffer 2 59892 _000220_hash NULL
+_000221_hash f_hidg_write 3 7932 _000221_hash NULL
+_000222_hash file_read_actor 4 1401 _000222_hash NULL
+_000223_hash fill_write_buffer 3 3142 _000223_hash NULL
+_000224_hash __find_xattr 6 2117 _002425_hash NULL nohasharray
+_000225_hash fl_create 5 56435 _000225_hash NULL
+_000226_hash fs_path_ensure_buf 2 59445 _000226_hash NULL
+_000227_hash ftdi_elan_write 3 57309 _000227_hash NULL
+_000228_hash fw_iso_buffer_alloc 2 13704 _000228_hash NULL
+_000229_hash garmin_write_bulk 3 58191 _000229_hash NULL
+_000230_hash garp_attr_create 3 3883 _000230_hash NULL
+_000231_hash get_arg 3 5694 _000231_hash NULL
+_000232_hash getdqbuf 1 62908 _000232_hash NULL
+_000233_hash get_fdb_entries 3 41916 _000233_hash NULL
+_000234_hash get_fd_set 1 3866 _000234_hash NULL
+_000235_hash get_indirect_ea 4 51869 _000235_hash NULL
+_000236_hash get_registers 3 26187 _000236_hash NULL
+_000237_hash get_scq 2 10897 _000237_hash NULL
+_000238_hash get_server_iovec 2 16804 _000238_hash NULL
+_000239_hash get_ucode_user 3 38202 _000239_hash NULL
+_000240_hash get_user_cpu_mask 2 14861 _000240_hash NULL
+_000241_hash gfs2_alloc_sort_buffer 1 18275 _000241_hash NULL
+_000242_hash gfs2_glock_nq_m 1 20347 _000242_hash NULL
+_000243_hash gigaset_initcs 2 43753 _000243_hash NULL
+_000244_hash gigaset_initdriver 2 1060 _000244_hash NULL
+_000245_hash groups_alloc 1 7614 _000245_hash NULL
+_000246_hash gs_alloc_req 2 58883 _000246_hash NULL
+_000247_hash gs_buf_alloc 2 25067 _000247_hash NULL
+_000248_hash gsm_data_alloc 3 42437 _000248_hash NULL
+_000249_hash gss_pipe_downcall 3 23182 _000249_hash NULL
+_000250_hash handle_request 9 10024 _000250_hash NULL
+_000251_hash hashtab_create 3 33769 _000251_hash NULL
+_000252_hash hcd_buffer_alloc 2 27495 _000252_hash NULL
+_000253_hash hci_sock_setsockopt 5 28993 _000253_hash NULL
+_000254_hash heap_init 2 49617 _000254_hash NULL
+_000255_hash hest_ghes_dev_register 1 46766 _000255_hash NULL
+_000256_hash hidg_alloc_ep_req 2 10159 _000256_hash NULL
+_000257_hash hid_parse_report 3 51737 _000257_hash NULL
+_000258_hash hidraw_get_report 3 45609 _000258_hash NULL
+_000259_hash hidraw_report_event 3 20503 _000259_hash NULL
+_000260_hash hidraw_send_report 3 23449 _000260_hash NULL
+_000261_hash hpfs_translate_name 3 41497 _000261_hash NULL
+_000262_hash hysdn_conf_write 3 52145 _000262_hash NULL
+_000263_hash __i2400mu_send_barker 3 23652 _000263_hash NULL
+_000264_hash i2cdev_read 3 1206 _000264_hash NULL
+_000265_hash i2cdev_write 3 23310 _000265_hash NULL
+_000266_hash i2o_parm_field_get 5 34477 _000266_hash NULL
+_000267_hash i2o_parm_table_get 6 61635 _000267_hash NULL
+_000268_hash ib_copy_from_udata 3 59502 _000268_hash NULL
+_000269_hash ib_ucm_alloc_data 3 36885 _000269_hash NULL
+_000270_hash ib_umad_write 3 47993 _000270_hash NULL
+_000271_hash ib_uverbs_unmarshall_recv 5 12251 _000271_hash NULL
+_000272_hash icn_writecmd 2 38629 _000272_hash NULL
+_000273_hash ide_driver_proc_write 3 32493 _000273_hash NULL
+_000274_hash ide_settings_proc_write 3 35110 _000274_hash NULL
+_000275_hash idetape_chrdev_write 3 53976 _000275_hash NULL
+_000276_hash idmap_pipe_downcall 3 14591 _000276_hash NULL
+_000277_hash ieee80211_build_probe_req 7-5 27660 _000277_hash NULL
+_000278_hash ieee80211_if_write 3 34894 _000278_hash NULL
+_000279_hash if_write 3 51756 _000279_hash NULL
+_000280_hash ilo_write 3 64378 _000280_hash NULL
+_000281_hash ima_write_policy 3 40548 _000281_hash NULL
+_000282_hash init_data_container 1 60709 _000282_hash NULL
+_000283_hash init_send_hfcd 1 34586 _000283_hash NULL
+_000284_hash insert_dent 7 65034 _000284_hash NULL
+_000285_hash interpret_user_input 2 19393 _000285_hash NULL
+_000286_hash int_proc_write 3 39542 _000286_hash NULL
+_000287_hash ioctl_private_iw_point 7 1273 _000287_hash NULL
+_000288_hash iov_iter_copy_from_user 4 31942 _000288_hash NULL
+_000289_hash iov_iter_copy_from_user_atomic 4 56368 _000289_hash NULL
+_000290_hash iowarrior_write 3 18604 _000290_hash NULL
+_000291_hash ipc_alloc 1 1192 _000291_hash NULL
+_000292_hash ipc_rcu_alloc 1 21208 _000292_hash NULL
+_000293_hash ip_options_get_from_user 4 64958 _000293_hash NULL
+_000294_hash ipv6_renew_option 3 38813 _000294_hash NULL
+_000295_hash ip_vs_conn_fill_param_sync 6 29771 _001898_hash NULL nohasharray
+_000296_hash ip_vs_create_timeout_table 2 64478 _000296_hash NULL
+_000297_hash ipw_queue_tx_init 3 49161 _000297_hash NULL
+_000298_hash irda_setsockopt 5 19824 _000298_hash NULL
+_000299_hash irias_new_octseq_value 2 13596 _003821_hash NULL nohasharray
+_000300_hash irnet_ctrl_write 3 24139 _000300_hash NULL
+_000301_hash isdn_add_channels 3 40905 _000301_hash NULL
+_000302_hash isdn_ppp_fill_rq 2 41428 _000302_hash NULL
+_000303_hash isdn_ppp_write 4 29109 _000303_hash NULL
+_000304_hash isdn_read 3 50021 _000304_hash NULL
+_000305_hash isdn_v110_open 3 2418 _000305_hash NULL
+_000306_hash isdn_writebuf_stub 4 52383 _000306_hash NULL
+_000307_hash islpci_mgt_transmit 5 34133 _000307_hash NULL
+_000308_hash iso_callback 3 43208 _000308_hash NULL
+_000309_hash iso_packets_buffer_init 3-4 29061 _000309_hash NULL
+_000310_hash it821x_firmware_command 3 8628 _000310_hash NULL
+_000311_hash iwch_alloc_fastreg_pbl 2 40153 _000311_hash NULL
+_000312_hash iwl_calib_set 3 34400 _003754_hash NULL nohasharray
+_000313_hash jbd2_journal_init_revoke_table 1 36336 _000313_hash NULL
+_000314_hash jffs2_alloc_full_dirent 1 60179 _001158_hash NULL nohasharray
+_000315_hash journal_init_revoke_table 1 56331 _000315_hash NULL
+_000316_hash kcalloc 1-2 27770 _000316_hash NULL
+_000318_hash keyctl_instantiate_key_common 4 47889 _000318_hash NULL
+_000319_hash keyctl_update_key 3 26061 _000319_hash NULL
+_000320_hash __kfifo_alloc 2-3 22173 _000320_hash NULL
+_000322_hash kfifo_copy_from_user 3 5091 _000322_hash NULL
+_000323_hash kmalloc_node 1 50163 _003818_hash NULL nohasharray
+_000324_hash kmalloc_parameter 1 65279 _000324_hash NULL
+_000325_hash kmem_alloc 1 31920 _000325_hash NULL
+_000326_hash kobj_map 2-3 9566 _000326_hash NULL
+_000328_hash kone_receive 4 4690 _000328_hash NULL
+_000329_hash kone_send 4 63435 _000329_hash NULL
+_000330_hash krealloc 2 14908 _000330_hash NULL
+_000331_hash kvmalloc 1 32646 _000331_hash NULL
+_000332_hash kvm_read_guest_atomic 4 10765 _000332_hash NULL
+_000333_hash kvm_read_guest_cached 4 39666 _000333_hash NULL
+_000334_hash kvm_read_guest_page 5 18074 _000334_hash NULL
+_000335_hash kzalloc 1 54740 _000335_hash NULL
+_000336_hash l2cap_sock_setsockopt 5 50207 _000336_hash NULL
+_000337_hash l2cap_sock_setsockopt_old 4 29346 _000337_hash NULL
+_000338_hash lane2_associate_req 4 45398 _000338_hash NULL
+_000339_hash lbs_debugfs_write 3 48413 _000339_hash NULL
+_000340_hash lcd_write 3 14857 _000340_hash &_000015_hash
+_000341_hash ldm_frag_add 2 5611 _000341_hash NULL
+_000342_hash __lgread 4 31668 _000342_hash NULL
+_000343_hash libipw_alloc_txb 1-3-2 27579 _000343_hash NULL
+_000344_hash link_send_sections_long 4 46556 _000344_hash NULL
+_000345_hash listxattr 3 12769 _000345_hash NULL
+_000346_hash load_msg 2 95 _000346_hash NULL
+_000347_hash lpfc_debugfs_dif_err_write 3 17424 _000347_hash NULL
+_000348_hash lp_write 3 9511 _000348_hash NULL
+_000349_hash mb_cache_create 2 17307 _000349_hash NULL
+_000350_hash mce_write 3 26201 _000350_hash NULL
+_000351_hash mcs7830_get_reg 3 33308 _000351_hash NULL
+_000352_hash mcs7830_set_reg 3 31413 _000352_hash NULL
+_000353_hash memcpy_fromiovec 3 55247 _000353_hash NULL
+_000354_hash memcpy_fromiovecend 3-4 2707 _000354_hash NULL
+_000356_hash mempool_resize 2 47983 _002039_hash NULL nohasharray
+_000357_hash mem_rw 3 22085 _000357_hash NULL
+_000358_hash mgmt_control 3 7349 _000358_hash NULL
+_000359_hash mgmt_pending_add 5 46976 _000359_hash NULL
+_000360_hash mlx4_ib_alloc_fast_reg_page_list 2 46119 _000360_hash NULL
+_000361_hash mmc_alloc_sg 1 21504 _000361_hash NULL
+_000362_hash mmc_send_bus_test 4 18285 _000362_hash NULL
+_000363_hash mmc_send_cxd_data 5 38655 _000363_hash NULL
+_000364_hash module_alloc_update_bounds 1 47205 _000364_hash NULL
+_000365_hash move_addr_to_kernel 2 32673 _000365_hash NULL
+_000366_hash mpi_alloc_limb_space 1 23190 _000366_hash NULL
+_000367_hash mpi_resize 2 44674 _000367_hash NULL
+_000368_hash mptctl_getiocinfo 2 28545 _000368_hash NULL
+_000369_hash mtdchar_readoob 4 31200 _000369_hash NULL
+_000370_hash mtdchar_write 3 56831 _002122_hash NULL nohasharray
+_000371_hash mtdchar_writeoob 4 3393 _000371_hash NULL
+_000372_hash mtd_device_parse_register 5 5024 _000372_hash NULL
+_000373_hash mtf_test_write 3 18844 _000373_hash NULL
+_000374_hash mthca_alloc_icm_table 3-4 38268 _002459_hash NULL nohasharray
+_000376_hash mthca_alloc_init 2 21754 _000376_hash NULL
+_000377_hash mthca_array_init 2 39987 _000377_hash NULL
+_000378_hash mthca_buf_alloc 2 35861 _000378_hash NULL
+_000379_hash mtrr_write 3 59622 _000379_hash NULL
+_000380_hash musb_test_mode_write 3 33518 _000380_hash NULL
+_000381_hash mwifiex_get_common_rates 3 17131 _000381_hash NULL
+_000382_hash __mxt_write_reg 3 57326 _000382_hash NULL
+_000383_hash nand_bch_init 2-3 16280 _001439_hash NULL nohasharray
+_000385_hash ncp_file_write 3 3813 _000385_hash NULL
+_000386_hash ncp__vol2io 5 4804 _000386_hash NULL
+_000387_hash nes_alloc_fast_reg_page_list 2 33523 _000387_hash NULL
+_000388_hash nfc_targets_found 3 29886 _000388_hash NULL
+_000389_hash __nf_ct_ext_add_length 3 12364 _000389_hash NULL
+_000390_hash nfs4_acl_new 1 49806 _000390_hash NULL
+_000391_hash nfs4_write_cached_acl 4 15070 _000391_hash NULL
+_000392_hash nfsd_symlink 6 63442 _000392_hash NULL
+_000393_hash nfs_idmap_get_desc 2-4 42990 _000393_hash NULL
+_000395_hash nfs_readdir_make_qstr 3 12509 _000395_hash NULL
+_000396_hash note_last_dentry 3 12285 _000396_hash NULL
+_000397_hash ntfs_copy_from_user 3-5 15072 _000397_hash NULL
+_000399_hash __ntfs_copy_from_user_iovec_inatomic 3-4 38153 _000399_hash NULL
+_000401_hash ntfs_ucstonls 3-5 23097 _000401_hash NULL
+_000403_hash nvme_alloc_iod 1 56027 _000403_hash NULL
+_000404_hash nvram_write 3 3894 _000404_hash NULL
+_000405_hash o2hb_debug_create 4 18744 _000405_hash NULL
+_000406_hash o2net_send_message_vec 4 879 _002013_hash NULL nohasharray
+_000407_hash ocfs2_control_cfu 2 37750 _000407_hash NULL
+_000408_hash oom_adjust_write 3 41116 _000408_hash NULL
+_000409_hash oom_score_adj_write 3 42594 _000409_hash NULL
+_000410_hash oprofilefs_ulong_from_user 3 57251 _000410_hash NULL
+_000411_hash opticon_write 4 60775 _000411_hash NULL
+_000412_hash p9_check_zc_errors 4 15534 _000412_hash NULL
+_000413_hash packet_buffer_init 2 1607 _000413_hash NULL
+_000414_hash packet_setsockopt 5 17662 _000414_hash NULL
+_000415_hash parse_command 2 37079 _000415_hash NULL
+_000416_hash pcbit_writecmd 2 12332 _000416_hash NULL
+_000417_hash pcmcia_replace_cis 3 57066 _000417_hash NULL
+_000418_hash pgctrl_write 3 50453 _000418_hash NULL
+_000419_hash pg_write 3 40766 _000419_hash NULL
+_000420_hash pidlist_allocate 1 64404 _000420_hash NULL
+_000421_hash pipe_iov_copy_from_user 3 23102 _000421_hash NULL
+_000422_hash pipe_iov_copy_to_user 3 3447 _000422_hash NULL
+_000423_hash pkt_add 3 39897 _000423_hash NULL
+_000424_hash pktgen_if_write 3 55628 _000424_hash NULL
+_000425_hash platform_device_add_data 3 310 _000425_hash NULL
+_000426_hash platform_device_add_resources 3 13289 _000426_hash NULL
+_000427_hash pmcraid_copy_sglist 3 38431 _000427_hash NULL
+_000428_hash pm_qos_power_write 3 52513 _000428_hash NULL
+_000429_hash pnpbios_proc_write 3 19758 _000429_hash NULL
+_000430_hash pool_allocate 3 42012 _000430_hash NULL
+_000431_hash posix_acl_alloc 1 48063 _000431_hash NULL
+_000432_hash ppp_cp_parse_cr 4 5214 _000432_hash NULL
+_000433_hash ppp_write 3 34034 _000433_hash NULL
+_000434_hash pp_read 3 33210 _000434_hash NULL
+_000435_hash pp_write 3 39554 _000435_hash NULL
+_000436_hash printer_req_alloc 2 62687 _000436_hash NULL
+_000437_hash printer_write 3 60276 _000437_hash NULL
+_000438_hash prism2_info_scanresults 3 59729 _000438_hash NULL
+_000439_hash prism2_set_genericelement 3 29277 _000439_hash NULL
+_000440_hash __probe_kernel_read 3 61119 _000440_hash NULL
+_000441_hash __probe_kernel_write 3 29842 _000441_hash NULL
+_000442_hash proc_coredump_filter_write 3 25625 _000442_hash NULL
+_000443_hash _proc_do_string 2 6376 _000443_hash NULL
+_000444_hash process_vm_rw_pages 5-6 15954 _000444_hash NULL
+_000446_hash proc_loginuid_write 3 63648 _000446_hash NULL
+_000447_hash proc_pid_attr_write 3 63845 _000447_hash NULL
+_000448_hash proc_scsi_devinfo_write 3 32064 _000448_hash NULL
+_000449_hash proc_scsi_write 3 29142 _000449_hash NULL
+_000450_hash proc_scsi_write_proc 3 267 _000450_hash NULL
+_000451_hash pskb_expand_head 2-3 42881 _000451_hash NULL
+_000453_hash pstore_mkfile 5 50830 _000453_hash NULL
+_000454_hash pti_char_write 3 60960 _000454_hash NULL
+_000455_hash ptrace_writedata 4 45021 _000455_hash NULL
+_000456_hash pt_write 3 40159 _000456_hash NULL
+_000457_hash qdisc_class_hash_alloc 1 18262 _000457_hash NULL
+_000458_hash r3964_write 4 57662 _000458_hash NULL
+_000459_hash raw_seticmpfilter 3 6888 _000459_hash NULL
+_000460_hash raw_setsockopt 5 45800 _000460_hash NULL
+_000461_hash rawv6_seticmpfilter 5 12137 _000461_hash NULL
+_000462_hash ray_cs_essid_proc_write 3 17875 _000462_hash NULL
+_000463_hash rbd_add 3 16366 _000463_hash NULL
+_000464_hash rbd_snap_add 4 19678 _000464_hash NULL
+_000465_hash rdma_set_ib_paths 3 45592 _000465_hash NULL
+_000466_hash rds_page_copy_user 4 35691 _000466_hash NULL
+_000467_hash read 3 9397 _000467_hash NULL
+_000468_hash read_buf 2 20469 _000468_hash NULL
+_000469_hash read_cis_cache 4 29735 _000469_hash NULL
+_000470_hash realloc_buffer 2 25816 _000470_hash NULL
+_000471_hash receive_DataRequest 3 9904 _000471_hash NULL
+_000472_hash recent_mt_proc_write 3 8206 _000472_hash NULL
+_000473_hash regmap_access_read_file 3 37223 _000473_hash NULL
+_000474_hash regmap_bulk_write 4 59049 _000474_hash NULL
+_000475_hash regmap_map_read_file 3 37685 _000475_hash NULL
+_000476_hash regset_tls_set 4 18459 _000476_hash NULL
+_000477_hash reiserfs_add_entry 4 23062 _002792_hash NULL nohasharray
+_000478_hash remote_settings_file_write 3 22987 _000478_hash NULL
+_000479_hash request_key_auth_new 3 38092 _000479_hash NULL
+_000480_hash restore_i387_fxsave 2 17528 _000480_hash NULL
+_000481_hash revalidate 2 19043 _000481_hash NULL
+_000482_hash rfcomm_sock_setsockopt 5 18254 _000482_hash NULL
+_000483_hash rndis_add_response 2 58544 _000483_hash NULL
+_000484_hash rndis_set_oid 4 6547 _000484_hash NULL
+_000485_hash rngapi_reset 3 34366 _002137_hash NULL nohasharray
+_000486_hash roccat_common2_receive 4 50369 _000486_hash NULL
+_000487_hash roccat_common2_send 4 2422 _000487_hash NULL
+_000488_hash rpc_malloc 2 43573 _000488_hash NULL
+_000489_hash rt2x00debug_write_bbp 3 8212 _000489_hash NULL
+_000490_hash rt2x00debug_write_csr 3 64753 _000490_hash NULL
+_000491_hash rt2x00debug_write_eeprom 3 23091 _000491_hash NULL
+_000492_hash rt2x00debug_write_rf 3 38195 _000492_hash NULL
+_000493_hash rt2x00debug_write_rfcsr 3 41473 _000493_hash NULL
+_000494_hash rts51x_read_mem 4 26577 _002730_hash NULL nohasharray
+_000495_hash rts51x_read_status 4 11830 _000495_hash NULL
+_000496_hash rts51x_write_mem 4 17598 _000496_hash NULL
+_000497_hash rw_copy_check_uvector 3 45748 _003716_hash NULL nohasharray
+_000498_hash rxrpc_request_key 3 27235 _000498_hash NULL
+_000499_hash rxrpc_server_keyring 3 16431 _000499_hash NULL
+_000500_hash savemem 3 58129 _000500_hash NULL
+_000501_hash sb16_copy_from_user 10-7-6 55836 _000501_hash NULL
+_000504_hash sched_autogroup_write 3 10984 _000504_hash NULL
+_000505_hash scsi_mode_select 6 37330 _000505_hash NULL
+_000506_hash scsi_tgt_copy_sense 3 26933 _000506_hash NULL
+_000507_hash sctp_auth_create_key 1 51641 _000507_hash NULL
+_000508_hash sctp_getsockopt_delayed_ack 2 9232 _000508_hash NULL
+_000509_hash sctp_getsockopt_local_addrs 2 25178 _000509_hash NULL
+_000510_hash sctp_make_abort_user 3 29654 _000510_hash NULL
+_000511_hash sctp_setsockopt_active_key 3 43755 _000511_hash NULL
+_000512_hash sctp_setsockopt_adaptation_layer 3 26935 _003246_hash NULL nohasharray
+_000513_hash sctp_setsockopt_associnfo 3 51684 _000513_hash NULL
+_000514_hash sctp_setsockopt_auth_chunk 3 30843 _000514_hash NULL
+_000515_hash sctp_setsockopt_auth_key 3 3793 _000515_hash NULL
+_000516_hash sctp_setsockopt_autoclose 3 5775 _000516_hash NULL
+_000517_hash sctp_setsockopt_bindx 3 49870 _000517_hash NULL
+_000518_hash __sctp_setsockopt_connectx 3 46949 _000518_hash NULL
+_000519_hash sctp_setsockopt_context 3 31091 _000519_hash NULL
+_000520_hash sctp_setsockopt_default_send_param 3 49578 _000520_hash NULL
+_000521_hash sctp_setsockopt_delayed_ack 3 40129 _000521_hash NULL
+_000522_hash sctp_setsockopt_del_key 3 42304 _002709_hash NULL nohasharray
+_000523_hash sctp_setsockopt_events 3 18862 _000523_hash NULL
+_000524_hash sctp_setsockopt_hmac_ident 3 11687 _000524_hash NULL
+_000525_hash sctp_setsockopt_initmsg 3 1383 _000525_hash NULL
+_000526_hash sctp_setsockopt_maxburst 3 28041 _000526_hash NULL
+_000527_hash sctp_setsockopt_maxseg 3 11829 _000527_hash NULL
+_000528_hash sctp_setsockopt_peer_addr_params 3 734 _000528_hash NULL
+_000529_hash sctp_setsockopt_peer_primary_addr 3 13440 _000529_hash NULL
+_000530_hash sctp_setsockopt_rtoinfo 3 30941 _000530_hash NULL
+_000531_hash security_context_to_sid_core 2 29248 _000531_hash NULL
+_000532_hash sel_commit_bools_write 3 46077 _000532_hash NULL
+_000533_hash sel_write_avc_cache_threshold 3 2256 _000533_hash NULL
+_000534_hash sel_write_bool 3 46996 _000534_hash NULL
+_000535_hash sel_write_checkreqprot 3 60774 _000535_hash NULL
+_000536_hash sel_write_disable 3 10511 _000536_hash NULL
+_000537_hash sel_write_enforce 3 48998 _000537_hash NULL
+_000538_hash sel_write_load 3 63830 _000538_hash NULL
+_000539_hash send_bulk_static_data 3 61932 _000539_hash NULL
+_000540_hash set_aoe_iflist 2 42737 _000540_hash NULL
+_000541_hash setkey_unaligned 3 39474 _000541_hash NULL
+_000542_hash set_registers 3 53582 _000542_hash NULL
+_000543_hash setsockopt 5 54539 _000543_hash NULL
+_000544_hash setup_req 3 5848 _000544_hash NULL
+_000545_hash setxattr 4 37006 _000545_hash NULL
+_000546_hash sfq_alloc 1 2861 _000546_hash NULL
+_000547_hash sg_kmalloc 1 50240 _000547_hash NULL
+_000548_hash sgl_map_user_pages 2 30610 _000548_hash NULL
+_000549_hash shash_setkey_unaligned 3 8620 _000549_hash NULL
+_000550_hash shmem_xattr_alloc 2 61190 _000550_hash NULL
+_000551_hash sierra_setup_urb 5 46029 _000551_hash NULL
+_000552_hash simple_transaction_get 3 50633 _000552_hash NULL
+_000553_hash simple_write_to_buffer 2-5 3122 _000553_hash NULL
+_000555_hash sisusb_send_bulk_msg 3 17864 _000555_hash NULL
+_000556_hash skb_add_data 3 48363 _000556_hash NULL
+_000557_hash skb_do_copy_data_nocache 5 12465 _000557_hash NULL
+_000558_hash sl_alloc_bufs 2 50380 _000558_hash NULL
+_000559_hash sl_realloc_bufs 2 64086 _000559_hash NULL
+_000560_hash smk_set_cipso 3 20379 _000560_hash NULL
+_000561_hash smk_write_ambient 3 45691 _000561_hash NULL
+_000562_hash smk_write_direct 3 46363 _000562_hash NULL
+_000563_hash smk_write_doi 3 49621 _000563_hash NULL
+_000564_hash smk_write_logging 3 2618 _000564_hash NULL
+_000565_hash smk_write_mapped 3 13519 _000565_hash NULL
+_000566_hash smk_write_netlbladdr 3 42525 _000566_hash NULL
+_000567_hash smk_write_onlycap 3 14400 _000567_hash NULL
+_000568_hash smk_write_rules_list 3 18565 _000568_hash NULL
+_000569_hash snd_ctl_elem_user_tlv 3 11695 _000569_hash NULL
+_000570_hash snd_emu10k1_fx8010_read 5 9605 _000570_hash NULL
+_000571_hash snd_emu10k1_synth_copy_from_user 3-5 9061 _000571_hash NULL
+_000573_hash snd_gus_dram_poke 4 18525 _000573_hash NULL
+_000574_hash snd_hdsp_playback_copy 5 20676 _000574_hash NULL
+_000575_hash snd_info_entry_write 3 63474 _000575_hash NULL
+_000576_hash snd_korg1212_copy_from 6 36169 _000576_hash NULL
+_000577_hash snd_mem_proc_write 3 9786 _000577_hash NULL
+_000578_hash snd_midi_channel_init_set 1 30092 _000578_hash NULL
+_000579_hash snd_midi_event_new 1 9893 _000764_hash NULL nohasharray
+_000580_hash snd_opl4_mem_proc_write 5 9670 _000580_hash NULL
+_000581_hash snd_pcm_aio_read 3 13900 _000581_hash NULL
+_000582_hash snd_pcm_aio_write 3 28738 _000582_hash NULL
+_000583_hash snd_pcm_oss_write1 3 10872 _000583_hash NULL
+_000584_hash snd_pcm_oss_write2 3 27332 _000584_hash NULL
+_000585_hash snd_rawmidi_kernel_write1 4 56847 _000585_hash NULL
+_000586_hash snd_rme9652_playback_copy 5 20970 _000586_hash NULL
+_000587_hash snd_sb_csp_load_user 3 45190 _000587_hash NULL
+_000588_hash snd_usb_ctl_msg 8 8436 _000588_hash NULL
+_000589_hash sock_bindtodevice 3 50942 _000589_hash NULL
+_000590_hash sock_kmalloc 2 62205 _000590_hash NULL
+_000591_hash spidev_ioctl 2 12846 _000591_hash NULL
+_000592_hash spidev_write 3 44510 _000592_hash NULL
+_000593_hash squashfs_read_table 3 16945 _000593_hash NULL
+_000594_hash srpt_alloc_ioctx 2-3 51042 _000594_hash NULL
+_000596_hash srpt_alloc_ioctx_ring 2-4-3 49330 _000596_hash NULL
+_000597_hash st5481_setup_isocpipes 6-4 61340 _000597_hash NULL
+_000598_hash sta_agg_status_write 3 45164 _000598_hash NULL
+_000599_hash svc_setsockopt 5 36876 _000599_hash NULL
+_000600_hash sys_add_key 4 61288 _000600_hash NULL
+_000601_hash sys_modify_ldt 3 18824 _000601_hash NULL
+_000602_hash sys_semtimedop 3 4486 _000602_hash NULL
+_000603_hash sys_setdomainname 2 4373 _000603_hash NULL
+_000604_hash sys_sethostname 2 42962 _000604_hash NULL
+_000605_hash tomoyo_write_self 3 45161 _000605_hash NULL
+_000606_hash tower_write 3 8580 _000606_hash NULL
+_000607_hash tpm_write 3 50798 _000607_hash NULL
+_000608_hash trusted_instantiate 3 4710 _000608_hash NULL
+_000609_hash trusted_update 3 12664 _000609_hash NULL
+_000610_hash tty_buffer_alloc 2 45437 _000610_hash NULL
+_000611_hash __tun_chr_ioctl 4 22300 _000611_hash NULL
+_000612_hash ubi_more_leb_change_data 4 63534 _000612_hash NULL
+_000613_hash ubi_more_update_data 4 39189 _000613_hash NULL
+_000614_hash ubi_resize_volume 2 50172 _000614_hash NULL
+_000615_hash udf_alloc_i_data 2 35786 _000615_hash NULL
+_000616_hash uea_idma_write 3 64139 _000616_hash NULL
+_000617_hash uea_request 4 47613 _000617_hash NULL
+_000618_hash uea_send_modem_cmd 3 3888 _000618_hash NULL
+_000619_hash uio_write 3 43202 _000619_hash NULL
+_000620_hash um_idi_write 3 18293 _000620_hash NULL
+_000621_hash us122l_ctl_msg 8 13330 _000621_hash NULL
+_000622_hash usb_alloc_urb 1 43436 _000622_hash NULL
+_000623_hash usblp_new_writeurb 2 22894 _000623_hash NULL
+_000624_hash usblp_write 3 23178 _000624_hash NULL
+_000625_hash usbtest_alloc_urb 3-5 34446 _000625_hash NULL
+_000627_hash usbtmc_write 3 64340 _000627_hash NULL
+_000628_hash user_instantiate 3 26131 _000628_hash NULL
+_000629_hash user_update 3 41332 _000629_hash NULL
+_000630_hash uwb_rc_cmd_done 4 35892 _000630_hash NULL
+_000631_hash uwb_rc_neh_grok_event 3 55799 _000631_hash NULL
+_000632_hash v9fs_alloc_rdir_buf 2 42150 _000632_hash NULL
+_000633_hash vc_do_resize 3-4 48842 _000633_hash NULL
+_000635_hash vcs_write 3 3910 _000635_hash NULL
+_000636_hash vga_arb_write 3 36112 _000636_hash NULL
+_000637_hash vga_switcheroo_debugfs_write 3 33984 _000637_hash NULL
+_000638_hash vhci_get_user 3 45039 _000638_hash NULL
+_000639_hash video_proc_write 3 6724 _000639_hash NULL
+_000640_hash vlsi_alloc_ring 3-4 57003 _000640_hash NULL
+_000642_hash __vmalloc 1 61168 _000642_hash NULL
+_000643_hash vmalloc_32 1 1135 _000643_hash NULL
+_000644_hash vmalloc_32_user 1 37519 _000644_hash NULL
+_000645_hash vmalloc_exec 1 36132 _000645_hash NULL
+_000646_hash vmalloc_node 1 58700 _000646_hash NULL
+_000647_hash __vmalloc_node_flags 1 30352 _000647_hash NULL
+_000648_hash vmalloc_user 1 32308 _000648_hash NULL
+_000649_hash vol_cdev_direct_write 3 20751 _000649_hash NULL
+_000650_hash vp_request_msix_vectors 2 28849 _000650_hash NULL
+_000651_hash vring_add_indirect 3-4 20737 _000651_hash NULL
+_000653_hash vring_new_virtqueue 1 9671 _000653_hash NULL
+_000654_hash vxge_os_dma_malloc 2 46184 _000654_hash NULL
+_000655_hash vxge_os_dma_malloc_async 3 56348 _000655_hash NULL
+_000656_hash wdm_write 3 53735 _000656_hash NULL
+_000657_hash wiimote_hid_send 3 48528 _000657_hash NULL
+_000658_hash wlc_phy_loadsampletable_nphy 3 64367 _000658_hash NULL
+_000659_hash write 3 62671 _000659_hash NULL
+_000660_hash write_flush 3 50803 _000660_hash NULL
+_000661_hash write_rio 3 54837 _000661_hash NULL
+_000662_hash x25_asy_change_mtu 2 26928 _000662_hash NULL
+_000663_hash xdi_copy_from_user 4 8395 _000663_hash NULL
+_000664_hash xfrm_dst_alloc_copy 3 3034 _000664_hash NULL
+_000665_hash xfrm_user_policy 4 62573 _000665_hash NULL
+_000666_hash xfs_attrmulti_attr_set 4 59346 _000666_hash NULL
+_000667_hash xfs_handle_to_dentry 3 12135 _000667_hash NULL
+_000668_hash xip_file_read 3 58592 _000668_hash NULL
+_000669_hash __xip_file_write 3-4 2733 _000669_hash NULL
+_000671_hash xprt_rdma_allocate 2 31372 _000671_hash NULL
+_000672_hash zd_usb_iowrite16v_async 3 23984 _000672_hash NULL
+_000673_hash zd_usb_read_fw 4 22049 _000673_hash NULL
+_000674_hash zerocopy_sg_from_iovec 3 11828 _000674_hash NULL
+_000675_hash __a2mp_build 3 60987 _000675_hash NULL
+_000677_hash acpi_ex_allocate_name_string 2-1 7685 _001169_hash NULL nohasharray
+_000678_hash acpi_os_allocate_zeroed 1 37422 _000678_hash NULL
+_000679_hash acpi_ut_initialize_buffer 2 47143 _002830_hash NULL nohasharray
+_000680_hash ad7879_spi_xfer 3 36311 _000680_hash NULL
+_000681_hash add_new_gdb 3 27643 _000681_hash NULL
+_000682_hash add_numbered_child 5 14273 _000682_hash NULL
+_000683_hash add_res_range 4 21310 _000683_hash NULL
+_000684_hash addtgt 3 54703 _000684_hash NULL
+_000685_hash add_uuid 4 49831 _000685_hash NULL
+_000686_hash afs_cell_alloc 2 24052 _000686_hash NULL
+_000687_hash aggr_recv_addba_req_evt 4 38037 _000687_hash NULL
+_000688_hash agp_create_memory 1 1075 _000688_hash NULL
+_000689_hash agp_create_user_memory 1 62955 _000689_hash NULL
+_000690_hash alg_setsockopt 5 20985 _000690_hash NULL
+_000691_hash alloc_async 1 14208 _000691_hash NULL
+_000692_hash ___alloc_bootmem_nopanic 1 53626 _000692_hash NULL
+_000693_hash alloc_buf 1 34532 _000693_hash NULL
+_000694_hash alloc_chunk 1 49575 _000694_hash NULL
+_000695_hash alloc_context 1 41283 _000695_hash NULL
+_000696_hash alloc_ctrl_packet 1 44667 _000696_hash NULL
+_000697_hash alloc_data_packet 1 46698 _000697_hash NULL
+_000698_hash alloc_dca_provider 2 59670 _000698_hash NULL
+_000699_hash __alloc_dev_table 2 54343 _000699_hash NULL
+_000700_hash alloc_ep 1 17269 _000700_hash NULL
+_000701_hash __alloc_extent_buffer 3 15093 _000701_hash NULL
+_000702_hash alloc_group_attrs 2 9194 _000727_hash NULL nohasharray
+_000703_hash alloc_large_system_hash 2 22391 _000703_hash NULL
+_000704_hash alloc_netdev_mqs 1 30030 _000704_hash NULL
+_000705_hash __alloc_objio_seg 1 7203 _000705_hash NULL
+_000706_hash alloc_ring 2-4 15345 _000706_hash NULL
+_000707_hash alloc_ring 2-4 39151 _000707_hash NULL
+_000710_hash alloc_session 1-2 64171 _000710_hash NULL
+_000714_hash alloc_skb 1 55439 _000714_hash NULL
+_000715_hash alloc_skb_fclone 1 3467 _000715_hash NULL
+_000716_hash alloc_smp_req 1 51337 _000716_hash NULL
+_000717_hash alloc_smp_resp 1 3566 _000717_hash NULL
+_000718_hash alloc_ts_config 1 45775 _000718_hash NULL
+_000719_hash alloc_upcall 2 62186 _000719_hash NULL
+_000720_hash altera_drscan 2 48698 _000720_hash NULL
+_000721_hash altera_irscan 2 62396 _000721_hash NULL
+_000722_hash altera_set_dr_post 2 54291 _000722_hash NULL
+_000723_hash altera_set_dr_pre 2 64862 _000723_hash NULL
+_000724_hash altera_set_ir_post 2 20948 _000724_hash NULL
+_000725_hash altera_set_ir_pre 2 54103 _000725_hash NULL
+_000726_hash altera_swap_dr 2 50090 _000726_hash NULL
+_000727_hash altera_swap_ir 2 9194 _000727_hash &_000702_hash
+_000728_hash amd_create_gatt_pages 1 20537 _000728_hash NULL
+_000729_hash aoechr_write 3 62883 _003674_hash NULL nohasharray
+_000730_hash applesmc_create_nodes 2 49392 _000730_hash NULL
+_000731_hash array_zalloc 1-2 7519 _000731_hash NULL
+_000733_hash arvo_sysfs_read 6 31617 _000733_hash NULL
+_000734_hash arvo_sysfs_write 6 3311 _000734_hash NULL
+_000735_hash asd_store_update_bios 4 10165 _000735_hash NULL
+_000736_hash ata_host_alloc 2 46094 _000736_hash NULL
+_000737_hash atalk_sendmsg 4 21677 _000737_hash NULL
+_000738_hash ath6kl_cfg80211_connect_event 7-9-8 13443 _000738_hash NULL
+_000739_hash ath6kl_mgmt_tx 9 21153 _000739_hash NULL
+_000740_hash ath6kl_wmi_proc_events_vif 5 42549 _003190_hash NULL nohasharray
+_000741_hash ath6kl_wmi_roam_tbl_event_rx 3 43440 _000741_hash NULL
+_000742_hash ath6kl_wmi_send_mgmt_cmd 7 17347 _000742_hash NULL
+_000743_hash ath_descdma_setup 5 12257 _000743_hash NULL
+_000744_hash ath_rx_edma_init 2 65483 _000744_hash NULL
+_000745_hash ati_create_gatt_pages 1 4722 _003275_hash NULL nohasharray
+_000746_hash audit_expand 2 2098 _000746_hash NULL
+_000747_hash audit_init_entry 1 38644 _000747_hash NULL
+_000748_hash ax25_sendmsg 4 62770 _000748_hash NULL
+_000749_hash b1_alloc_card 1 36155 _000749_hash NULL
+_000750_hash b43_nphy_load_samples 3 36481 _000750_hash NULL
+_000751_hash batadv_orig_hash_add_if 2 10033 _000751_hash NULL
+_000752_hash batadv_orig_hash_del_if 2 48972 _000752_hash NULL
+_000753_hash batadv_tt_append_diff 4 20588 _000753_hash NULL
+_000754_hash batadv_tt_commit_changes 4 2008 _000754_hash NULL
+_000755_hash batadv_tt_prepare_packet_buff 4 1280 _000755_hash NULL
+_000756_hash bio_copy_user_iov 4 37660 _000756_hash NULL
+_000757_hash __bio_map_kern 3 47379 _000757_hash NULL
+_000758_hash bitmap_resize 2 33054 _000758_hash NULL
+_000759_hash blk_check_plugged 3 50736 _000759_hash NULL
+_000760_hash blk_register_region 1-2 51424 _000760_hash NULL
+_000762_hash bm_entry_write 3 28338 _000762_hash NULL
+_000763_hash bm_realloc_pages 2 9431 _000763_hash NULL
+_000764_hash bm_register_write 3 9893 _000764_hash &_000579_hash
+_000765_hash bm_status_write 3 12964 _000765_hash NULL
+_000766_hash br_mdb_rehash 2 42643 _000766_hash NULL
+_000767_hash btmrvl_sdio_host_to_card 3 12152 _000767_hash NULL
+_000768_hash btrfs_copy_from_user 1-3 43806 _000768_hash NULL
+_000770_hash btrfs_insert_delayed_dir_index 4 63720 _000770_hash NULL
+_000771_hash __btrfs_map_block 3 49839 _000771_hash NULL
+_000772_hash c4iw_init_resource 2-3 30393 _000772_hash NULL
+_000774_hash cache_downcall 3 13666 _000774_hash NULL
+_000775_hash cache_slow_downcall 2 8570 _000775_hash NULL
+_000776_hash caif_seqpkt_sendmsg 4 22961 _000776_hash NULL
+_000777_hash caif_stream_sendmsg 4 9110 _000777_hash NULL
+_000778_hash carl9170_cmd_buf 3 950 _000778_hash NULL
+_000779_hash cdev_add 2-3 38176 _000779_hash NULL
+_000781_hash cdrom_read_cdda 4 50478 _000781_hash NULL
+_000782_hash ceph_dns_resolve_name 2 62488 _000782_hash NULL
+_000783_hash ceph_msgpool_get 2 54258 _000783_hash NULL
+_000784_hash cfg80211_connect_result 4-6 56515 _000784_hash NULL
+_000786_hash cfg80211_disconnected 4 57 _000786_hash NULL
+_000787_hash cfg80211_inform_bss 8 19332 _000787_hash NULL
+_000788_hash cfg80211_inform_bss_frame 4 41078 _000788_hash NULL
+_000789_hash cfg80211_mlme_register_mgmt 5 19852 _000789_hash NULL
+_000790_hash cfg80211_roamed_bss 4-6 50198 _000790_hash NULL
+_000792_hash cgroup_file_write 3 52417 _000792_hash NULL
+_000793_hash cifs_readdata_alloc 1 26360 _000793_hash NULL
+_000794_hash cifs_readv_from_socket 3 19109 _000794_hash NULL
+_000795_hash cifs_writedata_alloc 1 32880 _003097_hash NULL nohasharray
+_000796_hash cnic_alloc_dma 3 34641 _000796_hash NULL
+_000797_hash cnic_init_id_tbl 2 41354 _000797_hash NULL
+_000798_hash configfs_write_file 3 61621 _000798_hash NULL
+_000799_hash construct_key 3 11329 _000799_hash NULL
+_000800_hash context_alloc 3 24645 _000800_hash NULL
+_000801_hash copy_to_user 3 57835 _000801_hash NULL
+_000802_hash cp210x_get_config 4 56229 _000802_hash NULL
+_000803_hash create_attr_set 1 22861 _000803_hash NULL
+_000804_hash create_bounce_buffer 3 39155 _000804_hash NULL
+_000805_hash create_gpadl_header 2 19064 _000805_hash NULL
+_000806_hash _create_sg_bios 4 31244 _000806_hash NULL
+_000807_hash cryptd_alloc_instance 2-3 18048 _000807_hash NULL
+_000809_hash crypto_ahash_setkey 3 55134 _000809_hash NULL
+_000810_hash crypto_alloc_instance2 3 25277 _000810_hash NULL
+_000811_hash crypto_shash_setkey 3 60483 _000811_hash NULL
+_000812_hash cxgb_alloc_mem 1 24007 _000812_hash NULL
+_000813_hash cxgbi_device_portmap_create 3 25747 _000813_hash NULL
+_000814_hash cxgbi_device_register 1-2 36746 _000814_hash NULL
+_000816_hash __cxio_init_resource_fifo 3 23447 _000816_hash NULL
+_000817_hash dccp_sendmsg 4 56058 _000817_hash NULL
+_000818_hash ddp_make_gl 1 12179 _000818_hash NULL
+_000819_hash depth_write 3 3021 _000819_hash NULL
+_000820_hash dev_irnet_write 3 11398 _000820_hash NULL
+_000821_hash dev_set_alias 3 50084 _000821_hash NULL
+_000822_hash dev_write 3 7708 _000822_hash NULL
+_000823_hash dfs_global_file_write 3 6112 _000823_hash NULL
+_000824_hash dgram_sendmsg 4 45679 _000824_hash NULL
+_000825_hash disconnect 4 32521 _000825_hash NULL
+_000826_hash dma_attach 6-7 50831 _000826_hash NULL
+_000828_hash dma_declare_coherent_memory 4-2 14244 _000828_hash NULL
+_000829_hash dn_sendmsg 4 38390 _000829_hash NULL
+_000830_hash dn_setsockopt 5 314 _000830_hash NULL
+_000831_hash do_arpt_set_ctl 4 51053 _000831_hash NULL
+_000832_hash do_dccp_setsockopt 5 54377 _003195_hash NULL nohasharray
+_000833_hash do_ip6t_set_ctl 4 60040 _000833_hash NULL
+_000834_hash do_ipt_set_ctl 4 56238 _000834_hash NULL
+_000835_hash do_jffs2_setxattr 5 25910 _000835_hash NULL
+_000836_hash do_msgsnd 4 1387 _000836_hash NULL
+_000837_hash do_pselect 1 62061 _000837_hash NULL
+_000838_hash do_raw_setsockopt 5 55215 _000838_hash NULL
+_000839_hash do_readv_writev 4 51849 _000839_hash NULL
+_000840_hash do_sync 1 9604 _000840_hash NULL
+_000841_hash dup_array 3 33551 _000841_hash NULL
+_000842_hash ecryptfs_decode_and_decrypt_filename 5 10379 _000842_hash NULL
+_000843_hash ecryptfs_encrypt_and_encode_filename 6 2109 _000843_hash NULL
+_000844_hash ecryptfs_send_message_locked 2 31801 _000844_hash NULL
+_000845_hash edac_device_alloc_ctl_info 1 5941 _000845_hash NULL
+_000846_hash edac_mc_alloc 4 3611 _000846_hash NULL
+_000847_hash edac_pci_alloc_ctl_info 1 63388 _000847_hash NULL
+_000848_hash efivar_create_sysfs_entry 2 19485 _000848_hash NULL
+_000849_hash enable_write 3 30456 _000849_hash NULL
+_000850_hash enclosure_register 3 57412 _000850_hash NULL
+_000851_hash enlarge_skb 2 44248 _002839_hash NULL nohasharray
+_000852_hash evdev_ioctl_handler 2 21705 _000852_hash NULL
+_000853_hash ext4_kvzalloc 1 47605 _000853_hash NULL
+_000854_hash extend_netdev_table 2 21453 _000854_hash NULL
+_000855_hash fcoe_ctlr_device_add 3 1793 _000855_hash NULL
+_000856_hash fd_do_readv 3 51297 _000856_hash NULL
+_000857_hash fd_do_writev 3 29329 _000857_hash NULL
+_000858_hash __feat_register_sp 6 64712 _000858_hash NULL
+_000859_hash __ffs_ep0_read_events 3 48868 _000859_hash NULL
+_000860_hash ffs_ep0_write 3 9438 _000860_hash NULL
+_000861_hash ffs_epfile_read 3 18775 _000861_hash NULL
+_000862_hash ffs_epfile_write 3 48014 _000862_hash NULL
+_000863_hash fib_info_hash_alloc 1 9075 _000863_hash NULL
+_000864_hash fillonedir 3 41746 _000864_hash NULL
+_000865_hash fs_devrw_entry 3 11924 _000865_hash NULL
+_000866_hash fs_path_prepare_for_add 2 61854 _000866_hash NULL
+_000867_hash fuse_fill_write_pages 4 53682 _000867_hash NULL
+_000868_hash fw_device_op_ioctl 2 11595 _000868_hash NULL
+_000869_hash fw_iso_buffer_init 3 54582 _000869_hash NULL
+_000870_hash fw_node_create 2 9559 _000870_hash NULL
+_000871_hash garmin_read_process 3 27509 _000871_hash NULL
+_000872_hash garp_request_join 4 7471 _000872_hash NULL
+_000873_hash generic_perform_write 3 54832 _000873_hash NULL
+_000874_hash gen_pool_add_virt 4 39913 _000874_hash NULL
+_000875_hash get_derived_key 4 61100 _000875_hash NULL
+_000876_hash get_new_cssid 2 51665 _000876_hash NULL
+_000877_hash getxattr 4 24398 _003758_hash NULL nohasharray
+_000878_hash gsm_control_reply 4 53333 _000878_hash NULL
+_000879_hash hcd_alloc_coherent 5 55862 _000879_hash NULL
+_000880_hash hci_sock_sendmsg 4 37420 _000880_hash NULL
+_000881_hash hidraw_ioctl 2 63658 _000881_hash NULL
+_000882_hash hidraw_write 3 31536 _000882_hash NULL
+_000883_hash hid_register_field 2-3 4874 _000883_hash NULL
+_000885_hash hid_report_raw_event 4 2762 _000885_hash NULL
+_000886_hash hpi_alloc_control_cache 1 35351 _000886_hash NULL
+_000887_hash hugetlbfs_read_actor 2-5-4 34547 _000887_hash NULL
+_000890_hash hvc_alloc 4 12579 _000890_hash NULL
+_000891_hash __hwahc_dev_set_key 5 46328 _000891_hash NULL
+_000892_hash i2400m_zrealloc_2x 3 54166 _001549_hash NULL nohasharray
+_000893_hash ib_alloc_device 1 26483 _000893_hash NULL
+_000894_hash ib_create_send_mad 5 1196 _000894_hash NULL
+_000895_hash ibmasm_new_command 2 25714 _000895_hash NULL
+_000896_hash ib_send_cm_drep 3 50186 _000896_hash NULL
+_000897_hash ib_send_cm_mra 4 60202 _003063_hash NULL nohasharray
+_000898_hash ib_send_cm_rtu 3 63138 _000898_hash NULL
+_000899_hash ide_core_cp_entry 3 22636 _000899_hash NULL
+_000900_hash ieee80211_if_write_smps 3 35550 _000900_hash NULL
+_000901_hash ieee80211_if_write_tkip_mic_test 3 58748 _000901_hash NULL
+_000902_hash ieee80211_if_write_tsf 3 36077 _000902_hash NULL
+_000903_hash ieee80211_if_write_uapsd_max_sp_len 3 14233 _000903_hash NULL
+_000904_hash ieee80211_if_write_uapsd_queues 3 51526 _000904_hash NULL
+_000905_hash ieee80211_key_alloc 3 19065 _000905_hash NULL
+_000906_hash ieee80211_send_probe_req 6-4 6924 _000906_hash NULL
+_000907_hash ieee80211_skb_resize 3 50211 _000907_hash NULL
+_000908_hash if_spi_host_to_card 4 62890 _000908_hash NULL
+_000909_hash if_writecmd 2 815 _000909_hash NULL
+_000910_hash init_bch 1-2 64130 _000910_hash NULL
+_000912_hash init_ipath 1 48187 _000912_hash NULL
+_000913_hash init_list_set 2-3 39188 _000913_hash NULL
+_000915_hash init_q 4 132 _000915_hash NULL
+_000916_hash init_state 2 60165 _000916_hash NULL
+_000917_hash init_tag_map 3 57515 _000917_hash NULL
+_000918_hash input_ff_create 2 21240 _000918_hash NULL
+_000919_hash input_mt_init_slots 2 31183 _000919_hash NULL
+_000920_hash interfaces 2 38859 _000920_hash NULL
+_000921_hash int_hardware_entry 3 36833 _000921_hash NULL
+_000922_hash int_hw_irq_en 3 46776 _000922_hash NULL
+_000923_hash int_tasklet_entry 3 52500 _000923_hash NULL
+_000924_hash ioat2_alloc_ring 2 11172 _000924_hash NULL
+_000925_hash ip_generic_getfrag 3-4 12187 _000925_hash NULL
+_000927_hash ip_options_get_alloc 1 7448 _000927_hash NULL
+_000928_hash ipr_alloc_ucode_buffer 1 40199 _000928_hash NULL
+_000929_hash ip_set_alloc 1 57953 _000929_hash NULL
+_000930_hash ip_setsockopt 5 33487 _000930_hash NULL
+_000931_hash ipv6_flowlabel_opt 3 58135 _001179_hash NULL nohasharray
+_000932_hash ipv6_renew_options 5 28867 _000932_hash NULL
+_000933_hash ipv6_setsockopt 5 29871 _000933_hash NULL
+_000934_hash ipxrtr_route_packet 4 54036 _000934_hash NULL
+_000935_hash irda_sendmsg 4 4388 _000935_hash NULL
+_000936_hash irda_sendmsg_dgram 4 38563 _000936_hash NULL
+_000937_hash irda_sendmsg_ultra 4 42047 _000937_hash NULL
+_000938_hash irias_add_octseq_attrib 4 29983 _000938_hash NULL
+_000939_hash irq_alloc_generic_chip 2 26650 _000939_hash NULL
+_000940_hash iscsi_alloc_session 3 49390 _000940_hash NULL
+_000941_hash iscsi_create_conn 2 50425 _000941_hash NULL
+_000942_hash iscsi_create_endpoint 1 15193 _000942_hash NULL
+_000943_hash iscsi_create_iface 5 38510 _000943_hash NULL
+_000944_hash iscsi_decode_text_input 4 58292 _000944_hash NULL
+_000945_hash iscsi_pool_init 2-4 54913 _000945_hash NULL
+_000947_hash iscsit_dump_data_payload 2 38683 _000947_hash NULL
+_000948_hash isdn_write 3 45863 _000948_hash NULL
+_000949_hash isku_receive 4 54130 _000949_hash NULL
+_000950_hash islpci_mgt_transaction 5 23610 _000950_hash NULL
+_000951_hash iso_alloc_urb 4-5 45206 _000951_hash NULL
+_000952_hash iso_sched_alloc 1 13377 _003325_hash NULL nohasharray
+_000953_hash iwl_trans_txq_alloc 3 36147 _000953_hash NULL
+_000954_hash ixgbe_alloc_q_vector 4-6 24439 _000954_hash NULL
+_000956_hash jbd2_journal_init_revoke 2 51088 _000956_hash NULL
+_000957_hash jffs2_write_dirent 5 37311 _000957_hash NULL
+_000958_hash journal_init_revoke 2 56933 _000958_hash NULL
+_000959_hash keyctl_instantiate_key 3 41855 _000959_hash NULL
+_000960_hash keyctl_instantiate_key_iov 3 16969 _000960_hash NULL
+_000961_hash __kfifo_from_user 3 20399 _000961_hash NULL
+_000962_hash kimage_crash_alloc 3 3233 _000962_hash NULL
+_000963_hash kimage_normal_alloc 3 31140 _000963_hash NULL
+_000964_hash kmem_realloc 2 37489 _000964_hash NULL
+_000965_hash kmem_zalloc 1 11510 _000965_hash NULL
+_000966_hash koneplus_sysfs_read 6 42792 _000966_hash NULL
+_000967_hash kvm_kvzalloc 1 52894 _000967_hash NULL
+_000968_hash kvm_read_guest_page_mmu 6 37611 _000968_hash NULL
+_000969_hash kvm_set_irq_routing 3 48704 _000969_hash NULL
+_000970_hash kvm_write_guest_cached 4 11106 _000970_hash NULL
+_000971_hash kvm_write_guest_page 5 63555 _002812_hash NULL nohasharray
+_000972_hash kzalloc_node 1 24352 _000972_hash NULL
+_000973_hash l2cap_skbuff_fromiovec 3-4 35003 _000973_hash NULL
+_000975_hash l2tp_ip_sendmsg 4 50411 _000975_hash NULL
+_000976_hash l2tp_session_create 1 25286 _000976_hash NULL
+_000977_hash lc_create 3 48662 _000977_hash NULL
+_000978_hash leaf_dealloc 3 29566 _000978_hash NULL
+_000979_hash linear_conf 2 23485 _003837_hash NULL nohasharray
+_000980_hash llc_ui_sendmsg 4 24987 _000980_hash NULL
+_000981_hash load_module 2 60056 _003010_hash NULL nohasharray
+_000982_hash lpfc_sli4_queue_alloc 3 62646 _000982_hash NULL
+_000983_hash mdiobus_alloc_size 1 52259 _000983_hash NULL
+_000984_hash mempool_create_node 1 3191 _000984_hash NULL
+_000985_hash mem_read 3 57631 _000985_hash NULL
+_000986_hash memstick_alloc_host 1 142 _000986_hash NULL
+_000987_hash mem_swapout_entry 3 32586 _000987_hash NULL
+_000988_hash mem_write 3 22232 _000988_hash NULL
+_000989_hash mesh_table_alloc 1 22305 _000989_hash NULL
+_000990_hash mfd_add_devices 4 16668 _000990_hash NULL
+_000991_hash mISDN_sock_sendmsg 4 41035 _000991_hash NULL
+_000992_hash mlx4_init_icm_table 4-5 2151 _000992_hash NULL
+_000994_hash mmc_alloc_host 1 48097 _000994_hash NULL
+_000995_hash mmc_test_alloc_mem 2-3 28102 _000995_hash NULL
+_000997_hash mon_bin_ioctl 3 2771 _000997_hash NULL
+_000998_hash mpi_alloc 1 18094 _000998_hash NULL
+_000999_hash mpihelp_mul_karatsuba_case 5-3 23918 _003061_hash NULL nohasharray
+_001000_hash __mptctl_ioctl 2 15875 _001000_hash NULL
+_001001_hash mtd_concat_create 2 14416 _001001_hash NULL
+_001002_hash mthca_alloc_cq_buf 3 46512 _001002_hash NULL
+_001003_hash mvumi_alloc_mem_resource 3 47750 _001003_hash NULL
+_001004_hash mwifiex_11n_create_rx_reorder_tbl 4 63806 _001004_hash NULL
+_001005_hash mwifiex_alloc_sdio_mpa_buffers 2-3 60961 _001005_hash NULL
+_001007_hash mwl8k_cmd_set_beacon 4 23110 _001007_hash NULL
+_001008_hash neigh_hash_alloc 1 17595 _001008_hash NULL
+_001009_hash __netdev_alloc_skb 2 18595 _001009_hash NULL
+_001010_hash __netlink_change_ngroups 2 46156 _001010_hash NULL
+_001011_hash netlink_sendmsg 4 33708 _001236_hash NULL nohasharray
+_001012_hash netxen_alloc_sds_rings 2 13417 _001012_hash NULL
+_001013_hash new_bind_ctl 2 35324 _001013_hash NULL
+_001014_hash new_dir 3 31919 _001014_hash NULL
+_001015_hash new_tape_buffer 2 32866 _001015_hash NULL
+_001016_hash nfc_llcp_build_tlv 3 19536 _001016_hash NULL
+_001017_hash nfc_llcp_send_i_frame 3 59130 _001017_hash NULL
+_001018_hash nf_ct_ext_create 3 51232 _001018_hash NULL
+_001019_hash nfs4_alloc_pages 1 48426 _001019_hash NULL
+_001020_hash nfs4_alloc_slots 1 2454 _003345_hash NULL nohasharray
+_001021_hash nfsctl_transaction_write 3 64800 _001021_hash NULL
+_001022_hash nfs_fscache_get_super_cookie 3 44355 _001850_hash NULL nohasharray
+_001023_hash nfs_idmap_request_key 3 30208 _001023_hash NULL
+_001024_hash nfs_pgarray_set 2 1085 _001024_hash NULL
+_001025_hash nl_pid_hash_zalloc 1 23314 _001025_hash NULL
+_001026_hash nr_sendmsg 4 53656 _001026_hash NULL
+_001027_hash nsm_create_handle 4 38060 _001027_hash NULL
+_001028_hash ntfs_copy_from_user_iovec 3-6 49829 _001028_hash NULL
+_001030_hash ntfs_file_buffered_write 4-6 41442 _001030_hash NULL
+_001032_hash __ntfs_malloc 1 34022 _001032_hash NULL
+_001033_hash nvme_alloc_queue 3 46865 _001033_hash NULL
+_001034_hash nvme_map_user_pages 3-4 41093 _001639_hash NULL nohasharray
+_001036_hash ocfs2_acl_from_xattr 2 21604 _001036_hash NULL
+_001037_hash ocfs2_control_message 3 19564 _001037_hash NULL
+_001038_hash _ore_get_io_state 3-5-4 2166 _001038_hash NULL
+_001041_hash orinoco_set_key 5-7 17878 _001041_hash NULL
+_001043_hash osdmap_set_max_osd 2 57630 _002267_hash NULL nohasharray
+_001044_hash _osd_realloc_seg 3 54352 _001044_hash NULL
+_001045_hash osst_execute 7-6 17607 _001045_hash NULL
+_001046_hash osst_write 3 31581 _001046_hash NULL
+_001047_hash otp_read 2-5-4 10594 _001047_hash NULL
+_001050_hash ovs_vport_alloc 1 33475 _001050_hash NULL
+_001051_hash p54_parse_rssical 3 64493 _001051_hash NULL
+_001052_hash p9_client_zc_rpc 7 14345 _001052_hash NULL
+_001053_hash packet_sendmsg_spkt 4 28885 _001053_hash NULL
+_001054_hash pair_device 4 61175 _003161_hash NULL nohasharray
+_001055_hash pccard_store_cis 6 18176 _001055_hash NULL
+_001056_hash pci_add_cap_save_buffer 3 3426 _001056_hash NULL
+_001057_hash pcnet32_realloc_rx_ring 3 36598 _001057_hash NULL
+_001058_hash pcnet32_realloc_tx_ring 3 38428 _001058_hash NULL
+_001059_hash pcpu_mem_zalloc 1 22948 _001059_hash NULL
+_001060_hash pep_sendmsg 4 62524 _001060_hash NULL
+_001061_hash pfkey_sendmsg 4 47394 _001061_hash NULL
+_001062_hash pidlist_resize 2 496 _001062_hash NULL
+_001063_hash pin_code_reply 4 46510 _001063_hash NULL
+_001064_hash ping_getfrag 3-4 8360 _001064_hash NULL
+_001066_hash pipe_set_size 2 5204 _001066_hash NULL
+_001067_hash pkt_bio_alloc 1 48284 _001067_hash NULL
+_001068_hash platform_create_bundle 4-6 12785 _001068_hash NULL
+_001070_hash pm8001_store_update_fw 4 55716 _001070_hash NULL
+_001071_hash pmcraid_alloc_sglist 1 9864 _001071_hash NULL
+_001072_hash pn533_dep_link_up 5 22154 _001072_hash NULL
+_001073_hash pn533_init_target_frame 3 65438 _001073_hash NULL
+_001074_hash pnp_alloc 1 24869 _001538_hash NULL nohasharray
+_001075_hash pn_sendmsg 4 12640 _001075_hash NULL
+_001076_hash pppoe_sendmsg 4 48039 _001076_hash NULL
+_001077_hash pppol2tp_sendmsg 4 56420 _001077_hash NULL
+_001078_hash prism2_info_hostscanresults 3 39657 _001078_hash NULL
+_001079_hash process_vm_rw 3-5 47533 _001079_hash NULL
+_001081_hash process_vm_rw_single_vec 1-2 26213 _001081_hash NULL
+_001083_hash proc_write 3 51003 _001083_hash NULL
+_001084_hash profile_load 3 58267 _001084_hash NULL
+_001085_hash profile_remove 3 8556 _001085_hash NULL
+_001086_hash profile_replace 3 14652 _001086_hash NULL
+_001087_hash pscsi_get_bio 1 56103 _001087_hash NULL
+_001088_hash __pskb_copy 2 9038 _001088_hash NULL
+_001089_hash __pskb_pull_tail 2 60287 _001089_hash NULL
+_001090_hash qla4xxx_alloc_work 2 44813 _001090_hash NULL
+_001091_hash qlcnic_alloc_msix_entries 2 46160 _001091_hash NULL
+_001092_hash qlcnic_alloc_sds_rings 2 26795 _001092_hash NULL
+_001093_hash queue_received_packet 5 9657 _001093_hash NULL
+_001094_hash raw_send_hdrinc 4 58803 _001094_hash NULL
+_001095_hash raw_sendmsg 4 23078 _003316_hash NULL nohasharray
+_001096_hash rawsock_sendmsg 4 60010 _001096_hash NULL
+_001097_hash rawv6_send_hdrinc 3 35425 _001097_hash NULL
+_001098_hash rawv6_setsockopt 5 56165 _001098_hash NULL
+_001099_hash rb_alloc 1 3102 _001099_hash NULL
+_001100_hash rbd_alloc_coll 1 33678 _001100_hash NULL
+_001101_hash rbd_create_rw_ops 1 55297 _001101_hash NULL
+_001102_hash rds_ib_inc_copy_to_user 3 55007 _001102_hash NULL
+_001103_hash rds_iw_inc_copy_to_user 3 29214 _001103_hash NULL
+_001104_hash rds_message_alloc 1 10517 _001104_hash NULL
+_001105_hash rds_message_copy_from_user 3 45510 _001105_hash NULL
+_001106_hash rds_message_inc_copy_to_user 3 26540 _001106_hash NULL
+_001107_hash regcache_rbtree_insert_to_block 5 58009 _001107_hash NULL
+_001108_hash _regmap_raw_write 4 42652 _001108_hash NULL
+_001109_hash regmap_register_patch 3 21681 _001109_hash NULL
+_001110_hash relay_alloc_page_array 1 52735 _001110_hash NULL
+_001111_hash remove_uuid 4 64505 _001111_hash NULL
+_001112_hash reshape_ring 2 29147 _001112_hash NULL
+_001113_hash RESIZE_IF_NEEDED 2 56286 _001113_hash NULL
+_001114_hash resize_info_buffer 2 62889 _001114_hash NULL
+_001115_hash resize_stripes 2 61650 _001115_hash NULL
+_001116_hash rfcomm_sock_sendmsg 4 37661 _003661_hash NULL nohasharray
+_001117_hash roccat_common2_send_with_status 4 50343 _001117_hash NULL
+_001118_hash rose_sendmsg 4 20249 _001118_hash NULL
+_001119_hash rsc_mgr_init 3 16299 _001119_hash NULL
+_001120_hash rxrpc_send_data 5 21553 _001120_hash NULL
+_001121_hash rxrpc_setsockopt 5 50286 _001121_hash NULL
+_001122_hash savu_sysfs_read 6 49473 _001122_hash NULL
+_001124_hash sco_send_frame 3 41815 _001124_hash NULL
+_001125_hash scsi_dispatch_cmd_entry 3 49848 _001125_hash NULL
+_001126_hash scsi_host_alloc 2 63041 _001126_hash NULL
+_001127_hash scsi_tgt_kspace_exec 8 9522 _001127_hash NULL
+_001128_hash sctp_sendmsg 4 61919 _001128_hash NULL
+_001129_hash sctp_setsockopt 5 44788 _001129_hash NULL
+_001130_hash sctp_setsockopt_connectx 3 6073 _001130_hash NULL
+_001131_hash sctp_setsockopt_connectx_old 3 22631 _001131_hash NULL
+_001132_hash sctp_tsnmap_grow 2 32784 _001132_hash NULL
+_001133_hash sctp_tsnmap_init 2 36446 _001133_hash NULL
+_001134_hash sctp_user_addto_chunk 2-3 62047 _001134_hash NULL
+_001136_hash security_context_to_sid 2 19839 _001136_hash NULL
+_001137_hash security_context_to_sid_default 2 3492 _003841_hash NULL nohasharray
+_001138_hash security_context_to_sid_force 2 20724 _001138_hash NULL
+_001139_hash self_check_write 5 50856 _001139_hash NULL
+_001140_hash selinux_transaction_write 3 59038 _001140_hash NULL
+_001141_hash sel_write_access 3 51704 _001141_hash NULL
+_001142_hash sel_write_create 3 11353 _001142_hash NULL
+_001143_hash sel_write_member 3 28800 _001143_hash NULL
+_001144_hash sel_write_relabel 3 55195 _001144_hash NULL
+_001145_hash sel_write_user 3 45060 _001145_hash NULL
+_001146_hash __seq_open_private 3 40715 _001146_hash NULL
+_001147_hash serverworks_create_gatt_pages 1 46582 _001147_hash NULL
+_001148_hash set_connectable 4 56458 _001148_hash NULL
+_001149_hash set_dev_class 4 39645 _001921_hash NULL nohasharray
+_001150_hash set_discoverable 4 48141 _001150_hash NULL
+_001151_hash set_fd_set 1 35249 _001151_hash NULL
+_001152_hash setkey 3 14987 _001152_hash NULL
+_001153_hash set_le 4 30581 _001153_hash NULL
+_001154_hash set_link_security 4 4502 _001154_hash NULL
+_001155_hash set_local_name 4 55757 _001155_hash NULL
+_001156_hash set_powered 4 12129 _001156_hash NULL
+_001157_hash set_ssp 4 62411 _001157_hash NULL
+_001158_hash sg_build_sgat 3 60179 _001158_hash &_000314_hash
+_001159_hash sg_read_oxfer 3 51724 _001159_hash NULL
+_001160_hash shmem_xattr_set 4 11843 _001160_hash NULL
+_001161_hash simple_alloc_urb 3 60420 _001161_hash NULL
+_001162_hash sisusb_send_bridge_packet 2 11649 _001162_hash NULL
+_001163_hash sisusb_send_packet 2 20891 _001163_hash NULL
+_001164_hash sisusb_write_mem_bulk 4 29678 _001164_hash NULL
+_001165_hash skb_add_data_nocache 4 4682 _001165_hash NULL
+_001166_hash skb_copy_datagram_from_iovec 2-5-4 52014 _001166_hash NULL
+_001169_hash skb_copy_expand 2-3 7685 _001169_hash &_000677_hash
+_001171_hash skb_copy_to_page_nocache 6 58624 _001171_hash NULL
+_001172_hash __skb_cow 2 39254 _001172_hash NULL
+_001173_hash skb_cow_data 2 11565 _001173_hash NULL
+_001174_hash skb_pad 2 17302 _001174_hash NULL
+_001175_hash skb_realloc_headroom 2 19516 _001175_hash NULL
+_001176_hash sk_chk_filter 2 42095 _001176_hash NULL
+_001177_hash skcipher_sendmsg 4 30290 _001177_hash NULL
+_001178_hash sl_change_mtu 2 7396 _001178_hash NULL
+_001179_hash slhc_init 1-2 58135 _001179_hash &_000931_hash
+_001181_hash sm501_create_subdev 3-4 48668 _001245_hash NULL nohasharray
+_001183_hash smk_user_access 3 24440 _001183_hash NULL
+_001184_hash smk_write_cipso2 3 1021 _001184_hash NULL
+_001185_hash smk_write_cipso 3 17989 _001185_hash NULL
+_001186_hash smk_write_load2 3 52155 _001186_hash NULL
+_001187_hash smk_write_load 3 26829 _001187_hash NULL
+_001188_hash smk_write_load_self2 3 591 _001188_hash NULL
+_001189_hash smk_write_load_self 3 7958 _001189_hash NULL
+_001190_hash snapshot_write 3 28351 _001190_hash NULL
+_001191_hash snd_ac97_pcm_assign 2 30218 _001191_hash NULL
+_001192_hash snd_card_create 4 64418 _001529_hash NULL nohasharray
+_001193_hash snd_emux_create_port 3 42533 _001193_hash NULL
+_001194_hash snd_gus_dram_write 4 38784 _001194_hash NULL
+_001195_hash snd_midi_channel_alloc_set 1 28153 _001195_hash NULL
+_001196_hash _snd_pcm_lib_alloc_vmalloc_buffer 2 17820 _001196_hash NULL
+_001197_hash snd_pcm_oss_sync1 2 45298 _001197_hash NULL
+_001198_hash snd_pcm_oss_write 3 38108 _001198_hash NULL
+_001199_hash snd_pcm_plugin_build 5 25505 _001199_hash NULL
+_001200_hash snd_rawmidi_kernel_write 3 25106 _001200_hash NULL
+_001201_hash snd_rawmidi_write 3 28008 _001201_hash NULL
+_001202_hash snd_rme32_playback_copy 5 43732 _001202_hash NULL
+_001203_hash snd_rme96_playback_copy 5 13111 _001203_hash NULL
+_001204_hash snd_seq_device_new 4 31753 _001204_hash NULL
+_001205_hash snd_seq_oss_readq_new 2 14283 _001205_hash NULL
+_001206_hash snd_vx_create 4 40948 _001206_hash NULL
+_001207_hash sock_setsockopt 5 50088 _001207_hash NULL
+_001208_hash sound_write 3 5102 _001208_hash NULL
+_001209_hash _sp2d_alloc 1-3-2 16944 _001209_hash NULL
+_001212_hash spi_alloc_master 2 45223 _001212_hash NULL
+_001213_hash spidev_message 3 5518 _001213_hash NULL
+_001214_hash spi_register_board_info 2 35651 _001214_hash NULL
+_001215_hash squashfs_cache_init 2 41656 _001215_hash NULL
+_001216_hash squashfs_read_data 6 59440 _001216_hash NULL
+_001217_hash squashfs_read_fragment_index_table 4 2506 _001217_hash NULL
+_001218_hash squashfs_read_id_index_table 4 61961 _001218_hash NULL
+_001219_hash squashfs_read_inode_lookup_table 4 64739 _001219_hash NULL
+_001220_hash srp_alloc_iu 2 44227 _001220_hash NULL
+_001221_hash srp_iu_pool_alloc 2 17920 _001221_hash NULL
+_001222_hash srp_ring_alloc 2 26760 _001222_hash NULL
+_001226_hash start_isoc_chain 2 565 _001226_hash NULL
+_001227_hash st_write 3 16874 _001227_hash NULL
+_001228_hash svc_pool_map_alloc_arrays 2 47181 _001228_hash NULL
+_001229_hash symtab_init 2 61050 _001229_hash NULL
+_001230_hash sys_bind 3 10799 _001230_hash NULL
+_001231_hash sys_connect 3 15291 _003816_hash NULL nohasharray
+_001232_hash sys_flistxattr 3 41407 _001232_hash NULL
+_001233_hash sys_fsetxattr 4 49736 _001233_hash NULL
+_001234_hash sysfs_write_file 3 57116 _001234_hash NULL
+_001235_hash sys_ipc 3 4889 _001235_hash NULL
+_001236_hash sys_keyctl 4 33708 _001236_hash &_001011_hash
+_001237_hash sys_listxattr 3 27833 _001237_hash NULL
+_001238_hash sys_llistxattr 3 4532 _001238_hash NULL
+_001239_hash sys_lsetxattr 4 61177 _001239_hash NULL
+_001240_hash sys_mq_timedsend 3 57661 _001240_hash NULL
+_001241_hash sys_sched_setaffinity 2 32046 _001241_hash NULL
+_001242_hash sys_select 1 38827 _001242_hash NULL
+_001243_hash sys_semop 3 39457 _001243_hash NULL
+_001244_hash sys_sendto 6 20809 _001244_hash NULL
+_001245_hash sys_setgroups 1 48668 _001245_hash &_001181_hash
+_001246_hash sys_setgroups16 1 48882 _001246_hash NULL
+_001247_hash sys_setxattr 4 37880 _001247_hash NULL
+_001248_hash t4_alloc_mem 1 32342 _001248_hash NULL
+_001249_hash tcf_hash_create 4 54360 _001249_hash NULL
+_001250_hash tcp_send_rcvq 3 11316 _001250_hash NULL
+_001251_hash __team_options_register 3 63941 _001251_hash NULL
+_001252_hash test_unaligned_bulk 3 52333 _001252_hash NULL
+_001253_hash tifm_alloc_adapter 1 10903 _001253_hash NULL
+_001254_hash timeout_write 3 50991 _001254_hash NULL
+_001255_hash timeradd_entry 3 49850 _001255_hash NULL
+_001256_hash tipc_link_send_sections_fast 4 37920 _001256_hash NULL
+_001257_hash tipc_subseq_alloc 1 5957 _001257_hash NULL
+_001258_hash tnode_alloc 1 49407 _001258_hash NULL
+_001259_hash tomoyo_commit_ok 2 20167 _001259_hash NULL
+_001260_hash tomoyo_scan_bprm 2-4 15642 _003488_hash NULL nohasharray
+_001262_hash tps6586x_writes 3 58689 _001262_hash NULL
+_001263_hash tty_buffer_find 2 2443 _001263_hash NULL
+_001264_hash tty_write 3 5494 _001264_hash NULL
+_001265_hash ubifs_setxattr 4 59650 _001477_hash NULL nohasharray
+_001266_hash ubi_self_check_all_ff 4 41959 _001266_hash NULL
+_001267_hash udf_sb_alloc_partition_maps 2 62313 _001267_hash NULL
+_001268_hash udplite_getfrag 3-4 14479 _001268_hash NULL
+_001270_hash ulong_write_file 3 26485 _001270_hash NULL
+_001271_hash unix_stream_sendmsg 4 61455 _001271_hash NULL
+_001272_hash unlink_queued 3-4 645 _001272_hash NULL
+_001273_hash update_pmkid 4 2481 _001273_hash NULL
+_001274_hash usb_alloc_coherent 2 65444 _001274_hash NULL
+_001275_hash vc_resize 2-3 3585 _001275_hash NULL
+_001277_hash vhci_write 3 2224 _001277_hash NULL
+_001278_hash __vhost_add_used_n 3 26554 _001278_hash NULL
+_001279_hash virtqueue_add_buf 3-4 59470 _001279_hash NULL
+_001281_hash vmalloc 1 15464 _001281_hash NULL
+_001282_hash vol_cdev_write 3 40915 _001282_hash NULL
+_001283_hash vxge_device_register 4 7752 _001283_hash NULL
+_001284_hash __vxge_hw_blockpool_malloc 2 5786 _001284_hash NULL
+_001285_hash __vxge_hw_channel_allocate 3 55462 _001285_hash NULL
+_001286_hash vzalloc 1 47421 _001286_hash NULL
+_001287_hash vzalloc_node 1 23424 _001287_hash NULL
+_001288_hash wa_nep_queue 2 8858 _001288_hash NULL
+_001289_hash __wa_xfer_setup_segs 2 56725 _001289_hash NULL
+_001290_hash wiphy_new 2 2482 _001290_hash NULL
+_001291_hash wm8350_block_write 3 19727 _001291_hash NULL
+_001292_hash wpan_phy_alloc 1 48056 _001292_hash NULL
+_001293_hash write_flush_pipefs 3 2021 _001293_hash NULL
+_001294_hash write_flush_procfs 3 44011 _001294_hash NULL
+_001295_hash wusb_ccm_mac 7 32199 _001295_hash NULL
+_001296_hash x25_sendmsg 4 12487 _001296_hash NULL
+_001297_hash xfrm_hash_alloc 1 10997 _001297_hash NULL
+_001298_hash _xfs_buf_get_pages 2 46811 _001298_hash NULL
+_001299_hash xfs_da_grow_inode_int 3 21785 _001299_hash NULL
+_001300_hash xfs_dir_cilookup_result 3 64288 _003160_hash NULL nohasharray
+_001301_hash xfs_idata_realloc 2 26199 _001301_hash NULL
+_001302_hash xfs_iext_add_indirect_multi 3 32400 _001302_hash NULL
+_001303_hash xfs_iext_inline_to_direct 2 12384 _001303_hash NULL
+_001304_hash xfs_iformat_local 4 49472 _001304_hash NULL
+_001305_hash xfs_iroot_realloc 2 46826 _001305_hash NULL
+_001306_hash xhci_alloc_stream_info 3 63902 _001306_hash NULL
+_001307_hash xlog_recover_add_to_trans 4 62839 _001307_hash NULL
+_001308_hash xprt_alloc 2 1475 _001308_hash NULL
+_001309_hash xt_alloc_table_info 1 57903 _001309_hash NULL
+_001310_hash _zd_iowrite32v_async_locked 3 39034 _001310_hash NULL
+_001311_hash zd_usb_iowrite16v 3 49744 _001311_hash NULL
+_001312_hash a2mp_send 4 41615 _001312_hash NULL
+_001313_hash acpi_ds_build_internal_package_obj 3 58271 _001313_hash NULL
+_001314_hash acpi_system_read_event 3 55362 _001314_hash NULL
+_001315_hash acpi_ut_create_buffer_object 1 42030 _001315_hash NULL
+_001316_hash acpi_ut_create_package_object 1 17594 _001316_hash NULL
+_001317_hash acpi_ut_create_string_object 1 15360 _001317_hash NULL
+_001318_hash ad7879_spi_multi_read 3 8218 _001318_hash NULL
+_001319_hash add_child 4 45201 _001319_hash NULL
+_001320_hash add_port 2 54941 _001320_hash NULL
+_001321_hash adu_read 3 24177 _001321_hash NULL
+_001322_hash afs_cell_create 2 27346 _001322_hash NULL
+_001323_hash agp_allocate_memory 2 58761 _001323_hash NULL
+_001324_hash agp_generic_alloc_user 1 9470 _001324_hash NULL
+_001325_hash alc_auto_create_extra_outs 2 18975 _001325_hash NULL
+_001326_hash alloc_agpphysmem_i8xx 1 39427 _001326_hash NULL
+_001327_hash allocate_cnodes 1 5329 _001327_hash NULL
+_001328_hash ___alloc_bootmem 1 11410 _001328_hash NULL
+_001329_hash __alloc_bootmem_low_node 2 25726 _001662_hash NULL nohasharray
+_001330_hash __alloc_bootmem_node 2 1992 _001330_hash NULL
+_001331_hash __alloc_bootmem_node_nopanic 2 6432 _001331_hash NULL
+_001332_hash __alloc_bootmem_nopanic 1 65397 _001332_hash NULL
+_001333_hash alloc_candev 1-2 7776 _001333_hash NULL
+_001335_hash _alloc_cdb_cont 2 23609 _001335_hash NULL
+_001336_hash alloc_dummy_extent_buffer 2 56374 _001336_hash NULL
+_001337_hash ____alloc_ei_netdev 1 51475 _001337_hash NULL
+_001338_hash alloc_etherdev_mqs 1 36450 _001338_hash NULL
+_001339_hash alloc_extent_buffer 3 52824 _001339_hash NULL
+_001340_hash alloc_fcdev 1 18780 _001340_hash NULL
+_001341_hash alloc_fddidev 1 15382 _001341_hash NULL
+_001342_hash _alloc_get_attr_desc 2 470 _001342_hash NULL
+_001343_hash alloc_hippi_dev 1 51320 _001343_hash NULL
+_001344_hash alloc_irdadev 1 19140 _001344_hash NULL
+_001345_hash alloc_ldt 2 21972 _001345_hash NULL
+_001346_hash alloc_ltalkdev 1 38071 _001346_hash NULL
+_001347_hash alloc_one_pg_vec_page 1 10747 _001347_hash NULL
+_001348_hash alloc_orinocodev 1 21371 _001348_hash NULL
+_001349_hash alloc_ring 2-4 18278 _001349_hash NULL
+_001351_hash _alloc_set_attr_list 4 48991 _001351_hash NULL
+_001353_hash alloc_tx 2 32143 _001353_hash NULL
+_001354_hash alloc_wr 1-2 24635 _001354_hash NULL
+_001356_hash async_setkey 3 35521 _001356_hash NULL
+_001357_hash ata_host_alloc_pinfo 3 17325 _001357_hash NULL
+_001360_hash ath6kl_connect_event 7-9-8 14267 _001360_hash NULL
+_001361_hash ath6kl_fwlog_block_read 3 49836 _001361_hash NULL
+_001362_hash ath6kl_fwlog_read 3 32101 _001362_hash NULL
+_001363_hash ath9k_wmi_cmd 4 327 _001363_hash NULL
+_001364_hash ath_rx_init 2 43564 _001364_hash NULL
+_001365_hash ath_tx_init 2 60515 _001365_hash NULL
+_001366_hash atm_alloc_charge 2 19517 _001914_hash NULL nohasharray
+_001367_hash atm_get_addr 3 31221 _001367_hash NULL
+_001368_hash audit_log_n_hex 3 45617 _001368_hash NULL
+_001369_hash audit_log_n_string 3 31705 _001369_hash NULL
+_001370_hash ax25_output 2 22736 _001370_hash NULL
+_001371_hash bcsp_prepare_pkt 3 12961 _001371_hash NULL
+_001372_hash bdx_rxdb_create 1 46525 _001372_hash NULL
+_001373_hash bdx_tx_db_init 2 41719 _001373_hash NULL
+_001374_hash bio_map_kern 3 64751 _001374_hash NULL
+_001375_hash bits_to_user 2-3 47733 _001375_hash NULL
+_001377_hash __blk_queue_init_tags 2 9778 _001377_hash NULL
+_001378_hash blk_queue_resize_tags 2 28670 _001378_hash NULL
+_001379_hash blk_rq_map_user_iov 5 16772 _001379_hash NULL
+_001380_hash bm_init 2 13529 _001380_hash NULL
+_001381_hash brcmf_alloc_wdev 1 60347 _001381_hash NULL
+_001382_hash __btrfs_buffered_write 3 35311 _002735_hash NULL nohasharray
+_001383_hash btrfs_insert_dir_item 4 59304 _001383_hash NULL
+_001384_hash btrfs_map_block 3 64379 _001384_hash NULL
+_001385_hash bt_skb_alloc 1 6404 _001385_hash NULL
+_001386_hash c4_add_card 3 54968 _001386_hash NULL
+_001387_hash cache_read 3 24790 _001387_hash NULL
+_001388_hash cache_write 3 13589 _001388_hash NULL
+_001389_hash calc_hmac 3 32010 _001389_hash NULL
+_001390_hash capinc_tty_write 3 28539 _001390_hash NULL
+_001391_hash ccid_getsockopt_builtin_ccids 2 53634 _001391_hash NULL
+_001392_hash ceph_copy_page_vector_to_user 3-4 31270 _001392_hash NULL
+_001394_hash ceph_parse_server_name 2 60318 _001394_hash NULL
+_001395_hash ceph_read_dir 3 17005 _001395_hash NULL
+_001396_hash cfg80211_roamed 5-7 32632 _001396_hash NULL
+_001398_hash cfpkt_add_body 3 44630 _001398_hash NULL
+_001399_hash cfpkt_create_pfx 1-2 23594 _001399_hash NULL
+_001401_hash cmd_complete 6 51629 _001401_hash NULL
+_001402_hash cmtp_add_msgpart 4 9252 _001402_hash NULL
+_001403_hash cmtp_send_interopmsg 7 376 _001403_hash NULL
+_001404_hash coda_psdev_read 3 35029 _001404_hash NULL
+_001405_hash construct_key_and_link 4 8321 _001405_hash NULL
+_001406_hash copy_counters_to_user 5 17027 _001406_hash NULL
+_001407_hash copy_entries_to_user 1 52367 _001407_hash NULL
+_001408_hash copy_from_buf 2-4 27308 _001408_hash NULL
+_001410_hash copy_oldmem_page 3-1 26164 _001410_hash NULL
+_001411_hash copy_to_user_fromio 3 57432 _001411_hash NULL
+_001412_hash cryptd_hash_setkey 3 42781 _001412_hash NULL
+_001413_hash crypto_authenc_esn_setkey 3 6985 _001413_hash NULL
+_001414_hash crypto_authenc_setkey 3 80 _001414_hash NULL
+_001415_hash cxgb3_get_cpl_reply_skb 2 10620 _001415_hash NULL
+_001416_hash cxgbi_ddp_reserve 4 30091 _001416_hash NULL
+_001417_hash cxio_init_resource_fifo 3 28764 _001417_hash NULL
+_001418_hash cxio_init_resource_fifo_random 3 47151 _001418_hash NULL
+_001419_hash datablob_hmac_append 3 40038 _001419_hash NULL
+_001420_hash datablob_hmac_verify 4 24786 _001420_hash NULL
+_001421_hash dataflash_read_fact_otp 3-2 33204 _001421_hash NULL
+_001422_hash dataflash_read_user_otp 3-2 14536 _001422_hash &_000207_hash
+_001423_hash dccp_feat_register_sp 5 17914 _001423_hash NULL
+_001424_hash dccp_setsockopt 5 60367 _001424_hash NULL
+_001425_hash __dev_alloc_skb 1 28681 _001425_hash NULL
+_001426_hash disk_expand_part_tbl 2 30561 _001426_hash NULL
+_001427_hash diva_os_alloc_message_buffer 1 64568 _001427_hash NULL
+_001428_hash diva_os_copy_to_user 4 48508 _001428_hash NULL
+_001429_hash diva_os_malloc 2 16406 _001429_hash NULL
+_001430_hash dmam_declare_coherent_memory 4-2 43679 _001430_hash NULL
+_001431_hash dm_vcalloc 1-2 16814 _001431_hash NULL
+_001433_hash dn_alloc_skb 2 6631 _001433_hash NULL
+_001434_hash do_proc_readlink 3 14096 _001434_hash NULL
+_001435_hash do_readlink 2 43518 _001435_hash NULL
+_001436_hash __do_replace 5 37227 _001436_hash NULL
+_001437_hash do_sigpending 2 9766 _001437_hash NULL
+_001438_hash drbd_bm_resize 2 20522 _001438_hash NULL
+_001439_hash drbd_setsockopt 5 16280 _001439_hash &_000383_hash
+_001440_hash dump_midi 3 51040 _001440_hash NULL
+_001441_hash ecryptfs_filldir 3 6622 _001441_hash NULL
+_001442_hash ecryptfs_send_message 2 18322 _001442_hash NULL
+_001443_hash ep0_read 3 38095 _001443_hash NULL
+_001444_hash evdev_ioctl 2 22371 _001444_hash NULL
+_001445_hash ext4_add_new_descs 3 19509 _001445_hash NULL
+_001446_hash fat_ioctl_filldir 3 36621 _001446_hash NULL
+_001447_hash _fc_frame_alloc 1 43568 _001447_hash NULL
+_001448_hash fc_host_post_vendor_event 3 30903 _001448_hash NULL
+_001449_hash fd_copyout 3 59323 _001449_hash NULL
+_001450_hash f_hidg_read 3 6238 _001450_hash NULL
+_001451_hash filldir 3 55137 _001451_hash NULL
+_001452_hash filldir64 3 46469 _001452_hash NULL
+_001453_hash find_skb 2 20431 _001453_hash NULL
+_001454_hash from_buffer 3 18625 _001454_hash NULL
+_001455_hash fsm_init 2 16134 _001455_hash NULL
+_001456_hash fs_path_add 3 15648 _001456_hash NULL
+_001457_hash fs_path_add_from_extent_buffer 4 27702 _001457_hash NULL
+_001458_hash fuse_perform_write 4 18457 _001458_hash NULL
+_001459_hash gem_alloc_skb 2 51715 _001459_hash NULL
+_001460_hash generic_file_buffered_write 4 25464 _001460_hash NULL
+_001461_hash gen_pool_add 3 21776 _001461_hash NULL
+_001462_hash get_packet 3 41914 _001462_hash NULL
+_001463_hash get_packet 3 5747 _001463_hash NULL
+_001464_hash get_packet_pg 4 28023 _001464_hash NULL
+_001465_hash get_skb 2 63008 _001465_hash NULL
+_001466_hash get_subdir 3 62581 _001466_hash NULL
+_001467_hash gsm_control_message 4 18209 _001467_hash NULL
+_001468_hash gsm_control_modem 3 55303 _001468_hash NULL
+_001469_hash gsm_control_rls 3 3353 _001469_hash NULL
+_001470_hash handle_received_packet 3 22457 _001470_hash NULL
+_001471_hash hash_setkey 3 48310 _001471_hash NULL
+_001472_hash hdlcdrv_register 2 6792 _001472_hash NULL
+_001473_hash hiddev_ioctl 2 36816 _001473_hash NULL
+_001474_hash hid_input_report 4 32458 _001474_hash NULL
+_001475_hash hidp_queue_report 3 1881 _001475_hash NULL
+_001476_hash __hidp_send_ctrl_message 4 28303 _001476_hash NULL
+_001477_hash hidraw_read 3 59650 _001477_hash &_001265_hash
+_001478_hash HiSax_readstatus 2 15752 _001478_hash NULL
+_001480_hash __hwahc_op_set_gtk 4 42038 _001480_hash NULL
+_001481_hash __hwahc_op_set_ptk 5 36510 _001481_hash NULL
+_001482_hash hycapi_rx_capipkt 3 11602 _001482_hash NULL
+_001483_hash i2400m_net_rx 5 27170 _001483_hash NULL
+_001484_hash ib_copy_to_udata 3 27525 _001484_hash NULL
+_001485_hash idetape_chrdev_read 3 2097 _001485_hash NULL
+_001486_hash ieee80211_alloc_hw 1 43829 _001486_hash NULL
+_001487_hash ieee80211_bss_info_update 4 13991 _001487_hash NULL
+_001488_hash igmpv3_newpack 2 35912 _001488_hash NULL
+_001489_hash ilo_read 3 32531 _001489_hash NULL
+_001490_hash init_map_ipmac 3-4 63896 _001490_hash NULL
+_001492_hash init_tid_tabs 2-4-3 13252 _001492_hash NULL
+_001495_hash iowarrior_read 3 53483 _001495_hash NULL
+_001496_hash ip_options_get 4 56538 _001496_hash NULL
+_001497_hash ipv6_getsockopt_sticky 5 56711 _001497_hash NULL
+_001498_hash ipwireless_send_packet 4 8328 _001498_hash NULL
+_001499_hash ipx_sendmsg 4 1362 _001499_hash NULL
+_001500_hash irq_domain_add_linear 2 29236 _001500_hash NULL
+_001501_hash iscsi_conn_setup 2 35159 _001501_hash NULL
+_001502_hash iscsi_create_session 3 51647 _001502_hash NULL
+_001503_hash iscsi_host_alloc 2 36671 _001503_hash NULL
+_001504_hash iscsi_if_send_reply 7 52219 _001504_hash NULL
+_001505_hash iscsi_offload_mesg 5 58425 _001505_hash NULL
+_001506_hash iscsi_ping_comp_event 5 38263 _001506_hash NULL
+_001507_hash iscsi_post_host_event 4 13473 _001507_hash NULL
+_001508_hash iscsi_recv_pdu 4 16755 _001508_hash NULL
+_001509_hash iscsi_session_setup 4-5 196 _001509_hash NULL
+_001511_hash iscsit_find_cmd_from_itt_or_dump 3 17194 _003122_hash NULL nohasharray
+_001512_hash isdn_net_ciscohdlck_alloc_skb 2 55209 _001951_hash NULL nohasharray
+_001513_hash isdn_ppp_ccp_xmit_reset 6 63297 _001513_hash NULL
+_001514_hash isdn_ppp_read 4 50356 _001514_hash NULL
+_001515_hash isdn_ppp_skb_push 2 5236 _001515_hash NULL
+_001516_hash isku_sysfs_read 6 58806 _001516_hash NULL
+_001517_hash isku_sysfs_write 6 49767 _001517_hash NULL
+_001520_hash jbd2_alloc 1 41359 _001520_hash NULL
+_001521_hash jffs2_do_link 6 42048 _001521_hash NULL
+_001522_hash jffs2_do_unlink 4 62020 _001522_hash NULL
+_001523_hash jffs2_security_setxattr 4 62107 _001523_hash NULL
+_001524_hash jffs2_trusted_setxattr 4 17048 _001524_hash NULL
+_001525_hash jffs2_user_setxattr 4 10182 _001525_hash NULL
+_001526_hash joydev_ioctl_common 2 49359 _001526_hash NULL
+_001527_hash kernel_setsockopt 5 35913 _001527_hash NULL
+_001528_hash keyctl_describe_key 3 36853 _001528_hash NULL
+_001529_hash keyctl_get_security 3 64418 _001529_hash &_001192_hash
+_001530_hash keyring_read 3 13438 _001530_hash NULL
+_001531_hash kfifo_copy_to_user 3 20646 _001531_hash NULL
+_001532_hash kmem_zalloc_large 1 56128 _001532_hash NULL
+_001533_hash kmp_init 2 41373 _001533_hash NULL
+_001534_hash koneplus_sysfs_write 6 35993 _001534_hash NULL
+_001535_hash kvm_clear_guest_page 4 2308 _001535_hash NULL
+_001536_hash kvm_read_nested_guest_page 5 13337 _001536_hash NULL
+_001537_hash _l2_alloc_skb 1 11883 _001537_hash NULL
+_001538_hash l2cap_create_basic_pdu 3 24869 _001538_hash &_001074_hash
+_001539_hash l2cap_create_connless_pdu 3 37327 _001539_hash NULL
+_001540_hash l2cap_create_iframe_pdu 3 40055 _001540_hash NULL
+_001541_hash l3_alloc_skb 1 32289 _001541_hash NULL
+_001542_hash __lgwrite 4 57669 _001542_hash NULL
+_001543_hash libfc_host_alloc 2 7917 _001543_hash NULL
+_001544_hash llc_alloc_frame 4 64366 _001544_hash NULL
+_001545_hash llcp_sock_sendmsg 4 1092 _001545_hash NULL
+_001546_hash mac_drv_rx_init 2 48898 _001546_hash NULL
+_001547_hash macvtap_get_user 4 28185 _001547_hash NULL
+_001548_hash mdc800_device_read 3 22896 _001548_hash NULL
+_001549_hash memcpy_toiovec 3 54166 _001549_hash &_000892_hash
+_001550_hash memcpy_toiovecend 3-4 19736 _001550_hash NULL
+_001552_hash mempool_create 1 29437 _001552_hash NULL
+_001553_hash mgmt_event 4 12810 _001553_hash NULL
+_001554_hash mgt_set_varlen 4 60916 _001554_hash NULL
+_001555_hash mI_alloc_skb 1 24770 _001555_hash NULL
+_001556_hash mlx4_en_create_rx_ring 3 62498 _001556_hash NULL
+_001557_hash mlx4_en_create_tx_ring 4 48501 _001557_hash NULL
+_001558_hash mlx4_init_cmpt_table 3 11569 _001558_hash NULL
+_001559_hash mon_bin_get_event 4 52863 _001559_hash NULL
+_001560_hash mousedev_read 3 47123 _001560_hash NULL
+_001561_hash move_addr_to_user 2 2868 _001561_hash NULL
+_001562_hash mpihelp_mul 5-3 27805 _001562_hash NULL
+_001564_hash mpi_set_buffer 3 65294 _001564_hash NULL
+_001565_hash mptctl_ioctl 2 12355 _001565_hash NULL
+_001566_hash msnd_fifo_alloc 2 23179 _001566_hash NULL
+_001567_hash mtdswap_init 2 55719 _001567_hash NULL
+_001568_hash mthca_alloc_resize_buf 3 60394 _001568_hash NULL
+_001569_hash mthca_init_cq 2 60011 _001569_hash NULL
+_001570_hash nci_skb_alloc 2 49757 _001570_hash NULL
+_001571_hash neigh_hash_grow 2 17283 _001571_hash NULL
+_001572_hash netdev_alloc_skb 2 62437 _001572_hash NULL
+_001573_hash __netdev_alloc_skb_ip_align 2 55067 _001573_hash NULL
+_001574_hash netlink_change_ngroups 2 16457 _001574_hash NULL
+_001575_hash new_skb 1 21148 _001575_hash NULL
+_001576_hash nfc_alloc_recv_skb 1 10244 _001576_hash NULL
+_001577_hash nfcwilink_skb_alloc 1 16167 _001577_hash NULL
+_001578_hash __nf_nat_mangle_tcp_packet 5-7 8190 _001578_hash NULL
+_001580_hash nf_nat_mangle_udp_packet 5-7 13321 _001580_hash NULL
+_001582_hash nfqnl_mangle 4-2 36226 _001582_hash NULL
+_001583_hash nfs4_realloc_slot_table 2 22859 _001583_hash NULL
+_001584_hash nfs_idmap_get_key 2 39616 _001584_hash NULL
+_001585_hash nfs_readdata_alloc 2 65015 _001585_hash NULL
+_001586_hash nfs_writedata_alloc 2 12133 _001586_hash NULL
+_001587_hash nfulnl_alloc_skb 2 65207 _001587_hash NULL
+_001588_hash ni65_alloc_mem 3 10664 _001588_hash NULL
+_001589_hash nsm_get_handle 4 52089 _001589_hash NULL
+_001590_hash ntfs_malloc_nofs 1 49572 _001590_hash NULL
+_001591_hash ntfs_malloc_nofs_nofail 1 63631 _001591_hash NULL
+_001592_hash nvme_create_queue 3 170 _001592_hash NULL
+_001593_hash ocfs2_control_write 3 54737 _001593_hash NULL
+_001595_hash orinoco_add_extscan_result 3 18207 _001595_hash NULL
+_001596_hash osd_req_read_sg_kern 5 6378 _001596_hash NULL
+_001597_hash osd_req_write_sg_kern 5 10514 _001597_hash NULL
+_001599_hash override_release 2 52032 _001599_hash NULL
+_001600_hash p9_client_read 5 19750 _001600_hash NULL
+_001601_hash packet_snd 3 13634 _001601_hash NULL
+_001602_hash pcbit_stat 2 27364 _001602_hash NULL
+_001603_hash pcpu_extend_area_map 2 12589 _001603_hash NULL
+_001604_hash pep_alloc_skb 3 46303 _001604_hash NULL
+_001605_hash pg_read 3 17276 _001605_hash NULL
+_001606_hash picolcd_debug_eeprom_read 3 14549 _001606_hash NULL
+_001607_hash pkt_alloc_packet_data 1 37928 _001607_hash NULL
+_001608_hash pmcraid_build_passthrough_ioadls 2 62034 _001608_hash NULL
+_001609_hash pn_raw_send 2 54330 _001609_hash NULL
+_001610_hash posix_clock_register 2 5662 _001610_hash NULL
+_001611_hash printer_read 3 54851 _001611_hash NULL
+_001612_hash __proc_file_read 3 54978 _001612_hash NULL
+_001613_hash pskb_may_pull 2 22546 _001613_hash NULL
+_001614_hash __pskb_pull 2 42602 _001614_hash NULL
+_001615_hash ptp_read 4 63251 _001615_hash NULL
+_001616_hash pt_read 3 49136 _001616_hash NULL
+_001617_hash put_cmsg 4 36589 _001617_hash NULL
+_001618_hash px_raw_event 4 49371 _001618_hash NULL
+_001619_hash qla4xxx_post_aen_work 3 46953 _001619_hash NULL
+_001620_hash qla4xxx_post_ping_evt_work 4 8074 _001819_hash NULL nohasharray
+_001621_hash raid5_resize 2 63306 _001621_hash NULL
+_001622_hash rawv6_sendmsg 4 20080 _001622_hash NULL
+_001623_hash rds_message_map_pages 2 31487 _001623_hash NULL
+_001624_hash rds_sendmsg 4 40976 _001624_hash NULL
+_001625_hash read_flush 3 43851 _001625_hash NULL
+_001626_hash read_profile 3 27859 _001626_hash NULL
+_001627_hash read_vmcore 3 26501 _001627_hash NULL
+_001628_hash redirected_tty_write 3 65297 _001628_hash NULL
+_001629_hash refill_pool 2 19477 _001629_hash NULL
+_001630_hash __register_chrdev 2-3 54223 _001630_hash NULL
+_001632_hash regmap_raw_write 4 53803 _001632_hash NULL
+_001633_hash reiserfs_allocate_list_bitmaps 3 21732 _001633_hash NULL
+_001634_hash reiserfs_resize 2 34377 _001634_hash NULL
+_001635_hash request_key_auth_read 3 24109 _001635_hash NULL
+_001636_hash rfcomm_wmalloc 2 58090 _001636_hash NULL
+_001637_hash rfkill_fop_read 3 54711 _001637_hash NULL
+_001638_hash rng_dev_read 3 41581 _001638_hash NULL
+_001639_hash roccat_read 3 41093 _001639_hash &_001034_hash
+_001640_hash rx 4 57944 _001640_hash NULL
+_001641_hash rxrpc_client_sendmsg 5 23236 _001641_hash NULL
+_001642_hash rxrpc_kernel_send_data 3 60083 _001642_hash NULL
+_001643_hash rxrpc_server_sendmsg 4 37331 _001643_hash NULL
+_001644_hash savu_sysfs_write 6 42273 _001644_hash NULL
+_001645_hash sco_sock_sendmsg 4 62542 _001645_hash NULL
+_001646_hash scsi_nl_send_vendor_msg 5 16394 _001646_hash NULL
+_001647_hash scsi_register 2 49094 _001647_hash NULL
+_001648_hash sctp_datamsg_from_user 4 55342 _001648_hash NULL
+_001649_hash sctp_getsockopt_events 2 3607 _001649_hash NULL
+_001650_hash sctp_getsockopt_maxburst 2 42941 _001650_hash NULL
+_001651_hash sctp_getsockopt_maxseg 2 10737 _001651_hash NULL
+_001652_hash sctp_make_chunk 4 12986 _001652_hash NULL
+_001653_hash sctpprobe_read 3 17741 _001653_hash NULL
+_001654_hash sctp_tsnmap_mark 2 35929 _001654_hash NULL
+_001655_hash sctp_ulpevent_new 1 33377 _001655_hash NULL
+_001656_hash sdhci_alloc_host 2 7509 _001656_hash NULL
+_001657_hash selinux_inode_post_setxattr 4 26037 _001657_hash NULL
+_001658_hash selinux_inode_setsecurity 4 18148 _001658_hash NULL
+_001659_hash selinux_inode_setxattr 4 10708 _001659_hash NULL
+_001660_hash selinux_secctx_to_secid 2 63744 _001660_hash NULL
+_001661_hash selinux_setprocattr 4 55611 _001661_hash NULL
+_001662_hash sel_write_context 3 25726 _001662_hash &_001329_hash
+_001663_hash send_command 4 10832 _001663_hash NULL
+_001664_hash seq_copy_in_user 3 18543 _001664_hash NULL
+_001665_hash seq_open_net 4 8968 _001779_hash NULL nohasharray
+_001666_hash seq_open_private 3 61589 _001666_hash NULL
+_001667_hash set_arg 3 42824 _001667_hash NULL
+_001668_hash sg_read 3 25799 _001668_hash NULL
+_001669_hash shash_async_setkey 3 10720 _003506_hash NULL nohasharray
+_001670_hash shash_compat_setkey 3 12267 _001670_hash NULL
+_001671_hash shmem_setxattr 4 55867 _001671_hash NULL
+_001672_hash simple_read_from_buffer 2-5 55957 _001672_hash NULL
+_001674_hash sisusb_clear_vram 2-3 57466 _001674_hash NULL
+_001676_hash sisusbcon_do_font_op 9 52271 _001676_hash NULL
+_001677_hash sisusb_copy_memory 4 35016 _001677_hash NULL
+_001678_hash sisusb_write 3 44834 _001678_hash NULL
+_001680_hash skb_cow 2 26138 _001680_hash NULL
+_001681_hash skb_cow_head 2 52495 _001681_hash NULL
+_001682_hash skb_make_writable 2 24783 _001682_hash NULL
+_001683_hash skb_padto 2 50759 _001683_hash NULL
+_001684_hash sk_stream_alloc_skb 2 57622 _001684_hash NULL
+_001685_hash smk_write_access2 3 19170 _001685_hash NULL
+_001686_hash smk_write_access 3 49561 _001686_hash NULL
+_001687_hash snd_es1938_capture_copy 5 25930 _001687_hash NULL
+_001688_hash snd_gus_dram_peek 4 9062 _001688_hash NULL
+_001689_hash snd_hdsp_capture_copy 5 4011 _001689_hash NULL
+_001690_hash snd_korg1212_copy_to 6 92 _001690_hash NULL
+_001691_hash snd_opl4_mem_proc_read 5 63774 _001691_hash NULL
+_001692_hash snd_pcm_oss_read1 3 63771 _001692_hash NULL
+_001693_hash snd_pcm_plugin_alloc 2 12580 _001693_hash NULL
+_001694_hash snd_rawmidi_kernel_read1 4 36740 _001694_hash NULL
+_001695_hash snd_rme9652_capture_copy 5 10287 _001695_hash NULL
+_001696_hash sock_alloc_send_pskb 2 21246 _001696_hash NULL
+_001697_hash sock_rmalloc 2 59740 _002491_hash NULL nohasharray
+_001698_hash sock_wmalloc 2 16472 _001698_hash NULL
+_001699_hash solos_param_store 4 34755 _001699_hash NULL
+_001702_hash srp_target_alloc 3 37288 _001702_hash NULL
+_001703_hash store_ifalias 4 35088 _001703_hash NULL
+_001704_hash store_msg 3 56417 _001704_hash NULL
+_001705_hash str_to_user 2 11411 _001705_hash NULL
+_001706_hash subbuf_read_actor 3 2071 _001706_hash NULL
+_001707_hash sys_fgetxattr 4 25166 _001707_hash NULL
+_001708_hash sys_gethostname 2 49698 _001708_hash NULL
+_001709_hash sys_getxattr 4 37418 _001709_hash NULL
+_001710_hash sys_init_module 2 36047 _001710_hash NULL
+_001711_hash sys_kexec_load 2 14222 _001711_hash NULL
+_001712_hash sys_lgetxattr 4 45531 _001712_hash NULL
+_001713_hash syslog_print 2 307 _001713_hash NULL
+_001714_hash sys_msgsnd 3 44537 _001714_hash &_000139_hash
+_001715_hash sys_process_vm_readv 3-5 19090 _003104_hash NULL nohasharray
+_001717_hash sys_process_vm_writev 3-5 4928 _001717_hash NULL
+_001719_hash sys_pselect6 1 57449 _001719_hash NULL
+_001720_hash sys_sched_getaffinity 2 60033 _001720_hash NULL
+_001721_hash sys_setsockopt 5 35320 _001721_hash NULL
+_001722_hash t3_init_l2t 1 8261 _001722_hash NULL
+_001723_hash t4vf_pktgl_to_skb 2 39005 _001723_hash NULL
+_001724_hash tcp_collapse 5-6 63294 _001724_hash NULL
+_001726_hash tcp_sendmsg 4 30296 _001726_hash NULL
+_001727_hash team_options_register 3 20091 _001727_hash NULL
+_001728_hash tipc_buf_acquire 1 60437 _001728_hash NULL
+_001729_hash tipc_cfg_reply_alloc 1 27606 _001729_hash NULL
+_001730_hash tipc_send2name 6 16809 _001730_hash NULL
+_001731_hash tipc_send2port 5 63935 _001731_hash NULL
+_001732_hash tipc_send 4 51238 _001732_hash NULL
+_001733_hash tnode_new 3 44757 _002769_hash NULL nohasharray
+_001734_hash tomoyo_read_self 3 33539 _001734_hash NULL
+_001735_hash tomoyo_update_domain 2 5498 _001735_hash NULL
+_001736_hash tomoyo_update_policy 2 40458 _001736_hash NULL
+_001737_hash tpm_read 3 50344 _001737_hash NULL
+_001738_hash TSS_rawhmac 3 17486 _001738_hash NULL
+_001739_hash __tty_buffer_request_room 2 27700 _001739_hash NULL
+_001740_hash tun_get_user 4 39099 _001740_hash NULL
+_001741_hash ubi_dump_flash 4 46381 _001741_hash NULL
+_001742_hash ubi_io_write 4-5 15870 _003453_hash NULL nohasharray
+_001744_hash udp_setsockopt 5 25985 _001744_hash NULL
+_001745_hash udpv6_setsockopt 5 18487 _001745_hash NULL
+_001746_hash uio_read 3 49300 _001746_hash NULL
+_001747_hash ulog_alloc_skb 1 23427 _001747_hash NULL
+_001748_hash unix_dgram_sendmsg 4 45699 _001748_hash NULL
+_001749_hash unlink1 3 63059 _001749_hash NULL
+_001751_hash usbdev_read 3 45114 _001751_hash NULL
+_001752_hash usblp_ioctl 2 30203 _001752_hash NULL
+_001753_hash usblp_read 3 57342 _003832_hash NULL nohasharray
+_001754_hash usbtmc_read 3 32377 _001754_hash NULL
+_001755_hash _usb_writeN_sync 4 31682 _001755_hash NULL
+_001756_hash user_read 3 51881 _001756_hash NULL
+_001757_hash vcs_read 3 8017 _001757_hash NULL
+_001758_hash vdma_mem_alloc 1 6171 _001758_hash NULL
+_001759_hash venus_create 4 20555 _001759_hash NULL
+_001760_hash venus_link 5 32165 _001760_hash NULL
+_001761_hash venus_lookup 4 8121 _001761_hash NULL
+_001762_hash venus_mkdir 4 8967 _001762_hash NULL
+_001763_hash venus_remove 4 59781 _001763_hash NULL
+_001764_hash venus_rename 4-5 17707 _003784_hash NULL nohasharray
+_001766_hash venus_rmdir 4 45564 _001766_hash NULL
+_001767_hash venus_symlink 4-6 23570 _001767_hash NULL
+_001769_hash vfs_readlink 3 54368 _001769_hash NULL
+_001770_hash vfs_readv 3 38011 _001770_hash NULL
+_001771_hash vfs_writev 3 25278 _001771_hash NULL
+_001772_hash vga_arb_read 3 4886 _001772_hash NULL
+_001773_hash vgacon_adjust_height 2 28124 _001773_hash NULL
+_001774_hash vhci_put_user 4 12604 _001774_hash NULL
+_001775_hash vhost_add_used_n 3 10760 _001775_hash NULL
+_001776_hash virtnet_send_command 5-6 61993 _001776_hash NULL
+_001778_hash vmbus_establish_gpadl 3 4495 _001778_hash NULL
+_001779_hash vol_cdev_read 3 8968 _001779_hash &_001665_hash
+_001780_hash wdm_read 3 6549 _001780_hash NULL
+_001781_hash write_adapter_mem 3 3234 _001781_hash NULL
+_001782_hash wusb_prf 7 54261 _001782_hash &_000065_hash
+_001783_hash xdi_copy_to_user 4 48900 _001783_hash NULL
+_001784_hash xfs_buf_associate_memory 3 17915 _001784_hash NULL
+_001785_hash xfs_buf_get_maps 2 4581 _001785_hash NULL
+_001786_hash xfs_buf_get_uncached 2 51477 _001786_hash NULL
+_001787_hash xfs_buf_item_get_format 2 189 _001787_hash NULL
+_001788_hash xfs_buf_map_from_irec 5 2368 _002641_hash NULL nohasharray
+_001789_hash xfs_dir2_block_to_sf 3 37868 _001789_hash NULL
+_001790_hash xfs_dir2_leaf_getdents 3 23841 _001790_hash NULL
+_001791_hash xfs_dir2_sf_addname_hard 3 54254 _001791_hash NULL
+_001792_hash xfs_efd_init 3 5463 _001792_hash NULL
+_001793_hash xfs_efi_init 2 5476 _001793_hash NULL
+_001794_hash xfs_iext_realloc_direct 2 20521 _001794_hash NULL
+_001795_hash xfs_iext_realloc_indirect 2 59211 _001795_hash NULL
+_001796_hash xfs_inumbers_fmt 3 12817 _001796_hash NULL
+_001797_hash xhci_alloc_streams 5 37586 _001797_hash NULL
+_001798_hash xlog_recover_add_to_cont_trans 4 44102 _001798_hash NULL
+_001799_hash xz_dec_lzma2_create 2 36353 _002713_hash NULL nohasharray
+_001800_hash _zd_iowrite32v_locked 3 44725 _001800_hash NULL
+_001801_hash a2mp_chan_alloc_skb_cb 2 27159 _001801_hash NULL
+_001802_hash aat2870_reg_read_file 3 12221 _001802_hash NULL
+_001803_hash add_partition 2 55588 _001803_hash NULL
+_001804_hash add_sctp_bind_addr 3 12269 _001804_hash NULL
+_001805_hash _add_sg_continuation_descriptor 3 54721 _001805_hash NULL
+_001806_hash afs_cell_lookup 2 8482 _001806_hash NULL
+_001807_hash afs_send_simple_reply 3 63940 _001807_hash NULL
+_001808_hash agp_allocate_memory_wrap 1 16576 _001808_hash NULL
+_001809_hash __alloc_bootmem 1 31498 _001809_hash NULL
+_001810_hash __alloc_bootmem_low 1 43423 _003425_hash NULL nohasharray
+_001811_hash __alloc_bootmem_node_high 2 65076 _001811_hash NULL
+_001812_hash alloc_cc770dev 1 48186 _001812_hash NULL
+_001813_hash __alloc_ei_netdev 1 29338 _001813_hash NULL
+_001814_hash __alloc_eip_netdev 1 51549 _001814_hash NULL
+_001815_hash alloc_libipw 1 22708 _001815_hash NULL
+_001816_hash _alloc_mISDN_skb 3 52232 _001816_hash NULL
+_001817_hash alloc_pg_vec 2 8533 _001817_hash NULL
+_001818_hash alloc_sja1000dev 1 17868 _001818_hash NULL
+_001819_hash alloc_targets 2 8074 _001819_hash &_001620_hash
+_001822_hash ath6kl_disconnect_timeout_read 3 3650 _001822_hash NULL
+_001823_hash ath6kl_endpoint_stats_read 3 41554 _001823_hash NULL
+_001824_hash ath6kl_fwlog_mask_read 3 2050 _001824_hash NULL
+_001825_hash ath6kl_keepalive_read 3 44303 _001825_hash NULL
+_001826_hash ath6kl_listen_int_read 3 10355 _001826_hash NULL
+_001827_hash ath6kl_lrssi_roam_read 3 61022 _001827_hash NULL
+_001828_hash ath6kl_regdump_read 3 14393 _001828_hash NULL
+_001829_hash ath6kl_regread_read 3 25884 _001829_hash NULL
+_001830_hash ath6kl_regwrite_read 3 48747 _001830_hash NULL
+_001831_hash ath6kl_roam_table_read 3 26166 _001831_hash NULL
+_001832_hash ath9k_debugfs_read_buf 3 25316 _001832_hash NULL
+_001833_hash ath9k_multi_regread 4 65056 _001833_hash NULL
+_001834_hash ath_rxbuf_alloc 2 24745 _001834_hash NULL
+_001835_hash atk_debugfs_ggrp_read 3 29522 _001835_hash NULL
+_001836_hash audit_log_n_untrustedstring 3 9548 _001836_hash NULL
+_001837_hash ax25_send_frame 2 19964 _001837_hash NULL
+_001838_hash b43_debugfs_read 3 24425 _001838_hash NULL
+_001839_hash b43legacy_debugfs_read 3 2473 _001839_hash NULL
+_001840_hash batadv_bla_is_backbone_gw 3 58488 _001840_hash NULL
+_001841_hash batadv_check_management_packet 3 52993 _001841_hash NULL
+_001842_hash batadv_check_unicast_packet 2 10866 _001842_hash NULL
+_001843_hash batadv_interface_rx 4 8568 _001843_hash NULL
+_001844_hash batadv_skb_head_push 2 11360 _001844_hash NULL
+_001845_hash bchannel_get_rxbuf 2 37213 _001845_hash NULL
+_001846_hash bcm_recvmsg 4 43992 _001846_hash NULL
+_001847_hash bfad_debugfs_read 3 13119 _001847_hash NULL
+_001848_hash bfad_debugfs_read_regrd 3 57830 _001848_hash NULL
+_001849_hash blk_init_tags 1 30592 _001849_hash NULL
+_001850_hash blk_queue_init_tags 2 44355 _001850_hash &_001022_hash
+_001851_hash blk_rq_map_kern 4 47004 _001851_hash NULL
+_001852_hash bm_entry_read 3 10976 _001852_hash NULL
+_001853_hash bm_status_read 3 19583 _001853_hash NULL
+_001854_hash bnad_debugfs_read 3 50665 _001854_hash NULL
+_001855_hash bnad_debugfs_read_regrd 3 51308 _001855_hash NULL
+_001856_hash bnx2i_send_nl_mesg 4 53353 _001856_hash NULL
+_001857_hash brcmf_debugfs_sdio_counter_read 3 58369 _001857_hash NULL
+_001858_hash brcmf_sdio_assert_info 4 52653 _001858_hash NULL
+_001859_hash brcmf_sdio_dump_console 4 37455 _001859_hash NULL
+_001860_hash brcmf_sdio_trap_info 4 48510 _001860_hash NULL
+_001861_hash btmrvl_curpsmode_read 3 46939 _001861_hash NULL
+_001862_hash btmrvl_gpiogap_read 3 4718 _001862_hash NULL
+_001863_hash btmrvl_hscfgcmd_read 3 56303 _001863_hash NULL
+_001864_hash btmrvl_hscmd_read 3 1614 _001864_hash NULL
+_001865_hash btmrvl_hsmode_read 3 1647 _001865_hash NULL
+_001866_hash btmrvl_hsstate_read 3 920 _001866_hash NULL
+_001867_hash btmrvl_pscmd_read 3 24308 _001867_hash NULL
+_001868_hash btmrvl_psmode_read 3 22395 _001868_hash NULL
+_001869_hash btmrvl_psstate_read 3 50683 _001869_hash NULL
+_001870_hash btmrvl_txdnldready_read 3 413 _001870_hash NULL
+_001871_hash btrfs_add_link 5 9973 _001871_hash NULL
+_001872_hash __btrfs_direct_write 4 22273 _001872_hash NULL
+_001873_hash btrfs_discard_extent 2 38547 _001873_hash NULL
+_001874_hash btrfs_file_aio_write 4 21520 _001874_hash NULL
+_001875_hash btrfs_find_create_tree_block 3 55812 _001875_hash NULL
+_001876_hash btrfsic_map_block 2 56751 _001876_hash NULL
+_001877_hash cache_read_pipefs 3 47615 _001877_hash NULL
+_001878_hash cache_read_procfs 3 52882 _001878_hash NULL
+_001879_hash cache_write_pipefs 3 48270 _001879_hash NULL
+_001880_hash cache_write_procfs 3 22491 _001880_hash NULL
+_001881_hash caif_stream_recvmsg 4 13173 _001881_hash NULL
+_001882_hash carl9170_alloc 1 27 _001882_hash NULL
+_001883_hash carl9170_debugfs_read 3 47738 _001883_hash NULL
+_001884_hash ceph_msgpool_init 4 34599 _001884_hash NULL
+_001885_hash cfpkt_add_trail 3 27260 _001885_hash NULL
+_001886_hash cfpkt_create 1 18197 _001886_hash NULL
+_001887_hash cfpkt_pad_trail 2 55511 _003606_hash NULL nohasharray
+_001888_hash cfpkt_split 2 47541 _001888_hash NULL
+_001889_hash cgroup_read_s64 5 19570 _001889_hash NULL
+_001890_hash cgroup_read_u64 5 45532 _001890_hash NULL
+_001891_hash channel_type_read 3 47308 _001891_hash NULL
+_001892_hash check_header 2 56930 _001892_hash NULL
+_001893_hash codec_list_read_file 3 24910 _001893_hash NULL
+_001894_hash configfs_read_file 3 1683 _001894_hash NULL
+_001895_hash console_store 4 36007 _001895_hash NULL
+_001896_hash cpuset_common_file_read 5 8800 _001896_hash NULL
+_001897_hash create_subvol 4 30836 _001897_hash NULL
+_001898_hash cxio_hal_init_resource 2-7-6 29771 _001898_hash &_000295_hash
+_001901_hash cxio_hal_init_rhdl_resource 1 25104 _001901_hash NULL
+_001902_hash dai_list_read_file 3 25421 _001902_hash NULL
+_001903_hash dapm_bias_read_file 3 64715 _001903_hash NULL
+_001904_hash dapm_widget_power_read_file 3 59950 _001983_hash NULL nohasharray
+_001907_hash dbgfs_frame 3 45917 _001907_hash NULL
+_001908_hash dbgfs_state 3 38894 _001908_hash NULL
+_001909_hash dccp_manip_pkt 2 30229 _001909_hash NULL
+_001910_hash ddp_ppod_write_idata 5 25610 _001910_hash NULL
+_001911_hash debugfs_read 3 62535 _001911_hash NULL
+_001912_hash debug_output 3 18575 _001912_hash NULL
+_001913_hash debug_read 3 19322 _001913_hash NULL
+_001914_hash dev_alloc_skb 1 19517 _001914_hash &_001366_hash
+_001915_hash dfs_file_read 3 18116 _001915_hash NULL
+_001916_hash diva_alloc_dma_map 2 23798 _001916_hash NULL
+_001917_hash diva_xdi_write 4 63975 _001917_hash NULL
+_001918_hash dma_memcpy_pg_to_iovec 6 1725 _001918_hash NULL
+_001919_hash dma_memcpy_to_iovec 5 12173 _001919_hash NULL
+_001920_hash dma_show_regs 3 35266 _001920_hash NULL
+_001921_hash dm_exception_table_init 2 39645 _001921_hash &_001149_hash
+_001922_hash dn_nsp_do_disc 2-6 49474 _001922_hash NULL
+_001924_hash dn_recvmsg 4 17213 _001924_hash NULL
+_001925_hash dns_resolver_read 3 54658 _001925_hash NULL
+_001926_hash do_msgrcv 4 5590 _001926_hash NULL
+_001927_hash do_syslog 3 56807 _001927_hash NULL
+_001928_hash dpcm_state_read_file 3 65489 _001928_hash NULL
+_001929_hash dsp_cmx_send_member 2 15625 _001929_hash NULL
+_001930_hash fallback_on_nodma_alloc 2 35332 _001930_hash NULL
+_001931_hash fc_frame_alloc 2 1596 _001931_hash NULL
+_001932_hash fc_frame_alloc_fill 2 59394 _001932_hash NULL
+_001933_hash filter_read 3 61692 _001933_hash NULL
+_001934_hash __finish_unordered_dir 4 33198 _001934_hash NULL
+_001935_hash format_devstat_counter 3 32550 _001935_hash NULL
+_001936_hash fragmentation_threshold_read 3 61718 _001936_hash NULL
+_001937_hash fuse_conn_limit_read 3 20084 _001937_hash NULL
+_001938_hash fuse_conn_waiting_read 3 49762 _001938_hash NULL
+_001939_hash fuse_file_aio_write 4 46399 _001939_hash NULL
+_001940_hash generic_readlink 3 32654 _001940_hash NULL
+_001941_hash gre_manip_pkt 2 38785 _001941_hash NULL
+_001942_hash handle_eviocgbit 3 44193 _001942_hash NULL
+_001943_hash handle_response 5 55951 _001943_hash NULL
+_001944_hash handle_response_icmp 7 39574 _001944_hash NULL
+_001945_hash hash_recvmsg 4 50924 _001945_hash NULL
+_001946_hash hci_send_cmd 3 43810 _001946_hash NULL
+_001947_hash hci_si_event 3 1404 _001947_hash NULL
+_001948_hash help 4 14971 _001948_hash NULL
+_001949_hash hfcpci_empty_bfifo 4 62323 _001949_hash NULL
+_001950_hash hidp_send_ctrl_message 4 43702 _001950_hash NULL
+_001951_hash ht40allow_map_read 3 55209 _001951_hash &_001512_hash
+_001952_hash hwflags_read 3 52318 _001952_hash NULL
+_001953_hash hysdn_conf_read 3 42324 _001953_hash NULL
+_001954_hash hysdn_sched_rx 3 60533 _001954_hash NULL
+_001955_hash i2400m_rx_stats_read 3 57706 _001955_hash NULL
+_001956_hash i2400m_tx_stats_read 3 28527 _001956_hash NULL
+_001957_hash icmp_manip_pkt 2 48801 _001957_hash NULL
+_001958_hash idmouse_read 3 63374 _001958_hash NULL
+_001959_hash ieee80211_if_read 3 6785 _001959_hash NULL
+_001960_hash ieee80211_rx_bss_info 3 61630 _001960_hash NULL
+_001961_hash ikconfig_read_current 3 1658 _001961_hash NULL
+_001962_hash il3945_sta_dbgfs_stats_table_read 3 48802 _001962_hash NULL
+_001963_hash il3945_ucode_general_stats_read 3 46111 _001963_hash NULL
+_001964_hash il3945_ucode_rx_stats_read 3 3048 _001964_hash NULL
+_001965_hash il3945_ucode_tx_stats_read 3 36016 _001965_hash NULL
+_001966_hash il4965_rs_sta_dbgfs_rate_scale_data_read 3 37792 _001966_hash NULL
+_001967_hash il4965_rs_sta_dbgfs_scale_table_read 3 38564 _001967_hash NULL
+_001968_hash il4965_rs_sta_dbgfs_stats_table_read 3 49206 _001968_hash NULL
+_001969_hash il4965_ucode_general_stats_read 3 56277 _001969_hash NULL
+_001970_hash il4965_ucode_rx_stats_read 3 61948 _001970_hash NULL
+_001971_hash il4965_ucode_tx_stats_read 3 12064 _001971_hash NULL
+_001972_hash il_dbgfs_chain_noise_read 3 38044 _001972_hash NULL
+_001973_hash il_dbgfs_channels_read 3 25005 _001973_hash NULL
+_001974_hash il_dbgfs_disable_ht40_read 3 42386 _001974_hash NULL
+_001975_hash il_dbgfs_fh_reg_read 3 40993 _001975_hash NULL
+_001976_hash il_dbgfs_force_reset_read 3 57517 _001976_hash NULL
+_001977_hash il_dbgfs_interrupt_read 3 3351 _001977_hash NULL
+_001978_hash il_dbgfs_missed_beacon_read 3 59956 _001978_hash NULL
+_001979_hash il_dbgfs_nvm_read 3 12288 _001979_hash NULL
+_001980_hash il_dbgfs_power_save_status_read 3 43165 _001980_hash NULL
+_001981_hash il_dbgfs_qos_read 3 33615 _001981_hash NULL
+_001982_hash il_dbgfs_rxon_filter_flags_read 3 19281 _001982_hash NULL
+_001983_hash il_dbgfs_rxon_flags_read 3 59950 _001983_hash &_001904_hash
+_001984_hash il_dbgfs_rx_queue_read 3 11221 _001984_hash NULL
+_001985_hash il_dbgfs_rx_stats_read 3 15243 _001985_hash NULL
+_001986_hash il_dbgfs_sensitivity_read 3 2370 _001986_hash NULL
+_001987_hash il_dbgfs_sram_read 3 62296 _001987_hash NULL
+_001988_hash il_dbgfs_stations_read 3 21532 _001988_hash NULL
+_001989_hash il_dbgfs_status_read 3 58388 _001989_hash NULL
+_001990_hash il_dbgfs_tx_queue_read 3 55668 _001990_hash NULL
+_001991_hash il_dbgfs_tx_stats_read 3 32913 _001991_hash NULL
+_001992_hash ima_show_htable_value 2 57136 _001992_hash NULL
+_001994_hash intel_fake_agp_alloc_by_type 1 1 _001994_hash NULL
+_001995_hash ip4ip6_err 5 36772 _001995_hash NULL
+_001996_hash ip6_append_data 4-5 36490 _003601_hash NULL nohasharray
+_001997_hash ip6ip6_err 5 18308 _001997_hash NULL
+_001998_hash __ip_append_data 7-8 36191 _001998_hash NULL
+_001999_hash ip_vs_icmp_xmit 4 59624 _001999_hash NULL
+_002000_hash ip_vs_icmp_xmit_v6 4 20464 _002000_hash NULL
+_002001_hash ipw_write 3 59807 _002001_hash NULL
+_002002_hash irda_recvmsg_stream 4 35280 _002002_hash NULL
+_002003_hash irq_domain_add_simple 2 46734 _002003_hash NULL
+_002004_hash __iscsi_complete_pdu 4 10726 _002004_hash NULL
+_002005_hash iscsi_nop_out_rsp 4 51117 _002005_hash NULL
+_002006_hash iscsi_tcp_conn_setup 2 16376 _002006_hash NULL
+_002007_hash iwl_dbgfs_bt_traffic_read 3 35534 _002007_hash NULL
+_002008_hash iwl_dbgfs_calib_disabled_read 3 22649 _002008_hash NULL
+_002009_hash iwl_dbgfs_chain_noise_read 3 46355 _002009_hash NULL
+_002010_hash iwl_dbgfs_channels_read 3 6784 _002010_hash NULL
+_002011_hash iwl_dbgfs_current_sleep_command_read 3 2081 _002011_hash NULL
+_002012_hash iwl_dbgfs_disable_ht40_read 3 35761 _002012_hash NULL
+_002013_hash iwl_dbgfs_fh_reg_read 3 879 _002013_hash &_000406_hash
+_002014_hash iwl_dbgfs_interrupt_read 3 23574 _002014_hash NULL
+_002015_hash iwl_dbgfs_log_event_read 3 2107 _002015_hash NULL
+_002016_hash iwl_dbgfs_missed_beacon_read 3 50584 _002016_hash NULL
+_002017_hash iwl_dbgfs_nvm_read 3 23845 _002017_hash NULL
+_002018_hash iwl_dbgfs_plcp_delta_read 3 55407 _002018_hash NULL
+_002019_hash iwl_dbgfs_power_save_status_read 3 54392 _002019_hash NULL
+_002020_hash iwl_dbgfs_protection_mode_read 3 13943 _002020_hash NULL
+_002021_hash iwl_dbgfs_qos_read 3 11753 _002021_hash NULL
+_002022_hash iwl_dbgfs_reply_tx_error_read 3 19205 _002022_hash NULL
+_002023_hash iwl_dbgfs_rf_reset_read 3 26512 _002023_hash NULL
+_002024_hash iwl_dbgfs_rx_handlers_read 3 18708 _002024_hash NULL
+_002025_hash iwl_dbgfs_rxon_filter_flags_read 3 28832 _002025_hash NULL
+_002026_hash iwl_dbgfs_rxon_flags_read 3 20795 _002026_hash NULL
+_002027_hash iwl_dbgfs_rx_queue_read 3 19943 _002027_hash NULL
+_002028_hash iwl_dbgfs_sensitivity_read 3 63116 _002731_hash NULL nohasharray
+_002029_hash iwl_dbgfs_sleep_level_override_read 3 3038 _002029_hash NULL
+_002030_hash iwl_dbgfs_sram_read 3 44505 _002030_hash NULL
+_002031_hash iwl_dbgfs_stations_read 3 9309 _002031_hash NULL
+_002032_hash iwl_dbgfs_status_read 3 5171 _002032_hash NULL
+_002033_hash iwl_dbgfs_temperature_read 3 29224 _002033_hash NULL
+_002034_hash iwl_dbgfs_thermal_throttling_read 3 38779 _002034_hash NULL
+_002035_hash iwl_dbgfs_tx_queue_read 3 4635 _002035_hash NULL
+_002036_hash iwl_dbgfs_ucode_bt_stats_read 3 42820 _002036_hash NULL
+_002037_hash iwl_dbgfs_ucode_general_stats_read 3 49199 _002037_hash NULL
+_002038_hash iwl_dbgfs_ucode_rx_stats_read 3 58023 _002038_hash NULL
+_002039_hash iwl_dbgfs_ucode_tracing_read 3 47983 _002039_hash &_000356_hash
+_002040_hash iwl_dbgfs_ucode_tx_stats_read 3 31611 _002040_hash NULL
+_002041_hash iwl_dbgfs_wowlan_sram_read 3 540 _002041_hash NULL
+_002042_hash joydev_ioctl 2 33343 _002042_hash NULL
+_002043_hash kernel_readv 3 35617 _002043_hash NULL
+_002044_hash key_algorithm_read 3 57946 _002044_hash NULL
+_002045_hash key_icverrors_read 3 20895 _002045_hash NULL
+_002046_hash key_key_read 3 3241 _002046_hash NULL
+_002047_hash key_replays_read 3 62746 _002047_hash NULL
+_002048_hash key_rx_spec_read 3 12736 _002048_hash NULL
+_002049_hash key_tx_spec_read 3 4862 _002049_hash NULL
+_002050_hash __kfifo_to_user 3 36555 _002568_hash NULL nohasharray
+_002051_hash __kfifo_to_user_r 3 39123 _002051_hash NULL
+_002052_hash kmem_zalloc_greedy 2-3 65268 _002052_hash NULL
+_002054_hash l1oip_socket_recv 6 56537 _002054_hash NULL
+_002055_hash l2cap_build_cmd 4 48676 _002055_hash NULL
+_002056_hash l2cap_chan_send 3 49995 _002056_hash NULL
+_002057_hash l2cap_segment_sdu 4 48772 _002057_hash NULL
+_002058_hash l2down_create 4 21755 _002058_hash NULL
+_002059_hash l2tp_xmit_skb 3 42672 _002059_hash NULL
+_002060_hash l2up_create 3 6430 _002060_hash NULL
+_002061_hash lbs_debugfs_read 3 30721 _002061_hash NULL
+_002062_hash lbs_dev_info 3 51023 _002062_hash NULL
+_002063_hash lbs_host_sleep_read 3 31013 _002063_hash NULL
+_002064_hash lbs_rdbbp_read 3 45805 _002064_hash NULL
+_002065_hash lbs_rdmac_read 3 418 _002065_hash NULL
+_002066_hash lbs_rdrf_read 3 41431 _002066_hash NULL
+_002067_hash lbs_sleepparams_read 3 10840 _002067_hash NULL
+_002068_hash lbs_threshold_read 5 21046 _002068_hash NULL
+_002069_hash ldisc_receive 4 41516 _002069_hash NULL
+_002070_hash libfc_vport_create 2 4415 _002070_hash NULL
+_002073_hash lkdtm_debugfs_read 3 45752 _002073_hash NULL
+_002074_hash llcp_sock_recvmsg 4 13556 _002074_hash NULL
+_002075_hash long_retry_limit_read 3 59766 _002075_hash NULL
+_002076_hash lpfc_debugfs_dif_err_read 3 36303 _002076_hash NULL
+_002077_hash lpfc_debugfs_read 3 16566 _002077_hash NULL
+_002078_hash lpfc_idiag_baracc_read 3 58466 _002972_hash NULL nohasharray
+_002079_hash lpfc_idiag_ctlacc_read 3 33943 _002079_hash NULL
+_002080_hash lpfc_idiag_drbacc_read 3 15948 _002080_hash NULL
+_002081_hash lpfc_idiag_extacc_read 3 48301 _002081_hash NULL
+_002082_hash lpfc_idiag_mbxacc_read 3 28061 _002082_hash NULL
+_002083_hash lpfc_idiag_pcicfg_read 3 50334 _002083_hash NULL
+_002084_hash lpfc_idiag_queacc_read 3 13950 _002084_hash NULL
+_002085_hash lpfc_idiag_queinfo_read 3 55662 _002085_hash NULL
+_002086_hash lro_gen_skb 6 2644 _002086_hash NULL
+_002087_hash mac80211_format_buffer 2 41010 _002087_hash NULL
+_002088_hash macvtap_alloc_skb 2-4-3 50629 _002088_hash NULL
+_002091_hash macvtap_put_user 4 55609 _002091_hash NULL
+_002092_hash macvtap_sendmsg 4 30629 _002092_hash NULL
+_002093_hash mangle_packet 6-8 27864 _002093_hash NULL
+_002095_hash manip_pkt 3 7741 _002095_hash NULL
+_002096_hash mempool_create_kmalloc_pool 1 41650 _002096_hash NULL
+_002097_hash mempool_create_page_pool 1 30189 _002097_hash NULL
+_002098_hash mempool_create_slab_pool 1 62907 _002098_hash NULL
+_002099_hash mgmt_device_found 10 14146 _002099_hash NULL
+_002100_hash minstrel_stats_read 3 17290 _002100_hash NULL
+_002101_hash mmc_ext_csd_read 3 13205 _002101_hash NULL
+_002102_hash mon_bin_read 3 6841 _002102_hash NULL
+_002103_hash mon_stat_read 3 25238 _002103_hash NULL
+_002105_hash mqueue_read_file 3 6228 _002105_hash NULL
+_002106_hash mwifiex_debug_read 3 53074 _002106_hash NULL
+_002107_hash mwifiex_getlog_read 3 54269 _002107_hash NULL
+_002108_hash mwifiex_info_read 3 53447 _002108_hash NULL
+_002109_hash mwifiex_rdeeprom_read 3 51429 _002109_hash NULL
+_002110_hash mwifiex_regrdwr_read 3 34472 _002110_hash NULL
+_002111_hash named_prepare_buf 2 24532 _002111_hash NULL
+_002112_hash nci_send_cmd 3 58206 _002112_hash NULL
+_002113_hash netdev_alloc_skb_ip_align 2 40811 _002113_hash NULL
+_002114_hash netpoll_send_udp 3 58955 _002114_hash NULL
+_002115_hash nfcwilink_send_bts_cmd 3 10802 _002115_hash NULL
+_002116_hash nf_nat_mangle_tcp_packet 5-7 8643 _002116_hash NULL
+_002119_hash nfsd_vfs_read 6 62605 _002616_hash NULL nohasharray
+_002120_hash nfsd_vfs_write 6 54577 _002120_hash NULL
+_002121_hash nfs_idmap_lookup_id 2 10660 _002121_hash NULL
+_002122_hash ntfs_rl_realloc 3 56831 _002122_hash &_000370_hash
+_002123_hash ntfs_rl_realloc_nofail 3 32173 _002123_hash NULL
+_002124_hash o2hb_debug_read 3 37851 _002124_hash NULL
+_002125_hash o2net_debug_read 3 52105 _002125_hash NULL
+_002126_hash ocfs2_control_read 3 56405 _002126_hash NULL
+_002127_hash ocfs2_debug_read 3 14507 _002127_hash NULL
+_002128_hash oom_adjust_read 3 25127 _002128_hash NULL
+_002129_hash oom_score_adj_read 3 39921 _002426_hash NULL nohasharray
+_002130_hash oprofilefs_str_to_user 3 42182 _002130_hash NULL
+_002131_hash oprofilefs_ulong_to_user 3 11582 _002131_hash NULL
+_002132_hash osd_req_add_get_attr_list 3 49278 _002132_hash NULL
+_002133_hash _osd_req_list_objects 6 4204 _002133_hash NULL
+_002134_hash osd_req_read_kern 5 59990 _002134_hash NULL
+_002135_hash osd_req_write_kern 5 53486 _002135_hash NULL
+_002136_hash osst_read 3 40237 _002136_hash NULL
+_002137_hash p54_alloc_skb 3 34366 _002137_hash &_000485_hash
+_002138_hash p54_init_common 1 23850 _002138_hash NULL
+_002139_hash packet_alloc_skb 2-5-4 62602 _002139_hash NULL
+_002142_hash packet_sendmsg 4 24954 _002142_hash NULL
+_002143_hash page_readlink 3 23346 _002143_hash NULL
+_002144_hash pcf50633_write_block 3 2124 _002144_hash NULL
+_002145_hash pcpu_alloc_alloc_info 1-2 45813 _002145_hash NULL
+_002147_hash pep_indicate 5 38611 _002147_hash NULL
+_002148_hash pep_reply 5 50582 _002148_hash NULL
+_002149_hash pipe_handler_request 5 50774 _003582_hash NULL nohasharray
+_002150_hash platform_list_read_file 3 34734 _002150_hash NULL
+_002151_hash pm860x_bulk_write 3 43875 _002151_hash NULL
+_002152_hash pm_qos_power_read 3 55891 _002152_hash NULL
+_002153_hash port_show_regs 3 5904 _002153_hash NULL
+_002154_hash proc_coredump_filter_read 3 39153 _002154_hash NULL
+_002155_hash proc_fdinfo_read 3 62043 _002155_hash NULL
+_002156_hash proc_file_read 3 53905 _002156_hash NULL
+_002157_hash proc_info_read 3 63344 _002157_hash NULL
+_002158_hash proc_loginuid_read 3 15631 _002158_hash NULL
+_002159_hash proc_pid_attr_read 3 10173 _002159_hash NULL
+_002160_hash proc_pid_readlink 3 52186 _002160_hash NULL
+_002161_hash proc_read 3 43614 _002161_hash NULL
+_002162_hash proc_self_readlink 3 38094 _002162_hash NULL
+_002163_hash proc_sessionid_read 3 6911 _002299_hash NULL nohasharray
+_002164_hash provide_user_output 3 41105 _002164_hash NULL
+_002165_hash pskb_network_may_pull 2 35336 _002165_hash NULL
+_002166_hash pskb_pull 2 65005 _002166_hash NULL
+_002167_hash pstore_file_read 3 57288 _002167_hash NULL
+_002168_hash ql_process_mac_rx_page 4 15543 _002168_hash NULL
+_002169_hash ql_process_mac_rx_skb 4 6689 _002169_hash NULL
+_002170_hash queues_read 3 24877 _002170_hash NULL
+_002171_hash raw_recvmsg 4 17277 _002171_hash NULL
+_002172_hash rcname_read 3 25919 _002172_hash NULL
+_002173_hash read_4k_modal_eeprom 3 30212 _002173_hash NULL
+_002174_hash read_9287_modal_eeprom 3 59327 _002174_hash NULL
+_002175_hash reada_find_extent 2 63486 _002175_hash NULL
+_002176_hash read_def_modal_eeprom 3 14041 _002176_hash NULL
+_002177_hash read_enabled_file_bool 3 37744 _002177_hash NULL
+_002178_hash read_file_ani 3 23161 _002178_hash NULL
+_002179_hash read_file_antenna 3 13574 _002179_hash NULL
+_002180_hash read_file_base_eeprom 3 42168 _002180_hash NULL
+_002181_hash read_file_beacon 3 32595 _002181_hash NULL
+_002182_hash read_file_blob 3 57406 _002182_hash NULL
+_002183_hash read_file_bool 3 4180 _002183_hash NULL
+_002184_hash read_file_credit_dist_stats 3 54367 _002184_hash NULL
+_002185_hash read_file_debug 3 58256 _002185_hash NULL
+_002186_hash read_file_disable_ani 3 6536 _002186_hash NULL
+_002187_hash read_file_dma 3 9530 _002187_hash NULL
+_002188_hash read_file_dump_nfcal 3 18766 _002188_hash NULL
+_002189_hash read_file_frameerrors 3 64001 _002189_hash NULL
+_002190_hash read_file_interrupt 3 61742 _002197_hash NULL nohasharray
+_002191_hash read_file_misc 3 9948 _002191_hash NULL
+_002192_hash read_file_modal_eeprom 3 39909 _002192_hash NULL
+_002193_hash read_file_queue 3 40895 _002193_hash NULL
+_002194_hash read_file_rcstat 3 22854 _002194_hash NULL
+_002195_hash read_file_recv 3 48232 _002195_hash NULL
+_002196_hash read_file_regidx 3 33370 _002196_hash NULL
+_002197_hash read_file_regval 3 61742 _002197_hash &_002190_hash
+_002198_hash read_file_reset 3 52310 _002198_hash NULL
+_002199_hash read_file_rx_chainmask 3 41605 _002199_hash NULL
+_002200_hash read_file_slot 3 50111 _002200_hash NULL
+_002201_hash read_file_stations 3 35795 _002201_hash NULL
+_002202_hash read_file_tgt_int_stats 3 20697 _002202_hash NULL
+_002203_hash read_file_tgt_rx_stats 3 33944 _002203_hash NULL
+_002204_hash read_file_tgt_stats 3 8959 _002204_hash NULL
+_002205_hash read_file_tgt_tx_stats 3 51847 _002205_hash NULL
+_002206_hash read_file_tx_chainmask 3 3829 _002206_hash NULL
+_002207_hash read_file_war_stats 3 292 _002207_hash NULL
+_002208_hash read_file_xmit 3 21487 _002208_hash NULL
+_002209_hash read_flush_pipefs 3 20171 _002209_hash NULL
+_002210_hash read_flush_procfs 3 27642 _002210_hash NULL
+_002211_hash read_from_oldmem 2 3337 _002211_hash NULL
+_002212_hash read_oldmem 3 55658 _002212_hash NULL
+_002213_hash receive_packet 2 12367 _002213_hash NULL
+_002214_hash regmap_name_read_file 3 39379 _002214_hash NULL
+_002215_hash repair_io_failure 4 4815 _002215_hash NULL
+_002216_hash request_key_and_link 4 42693 _002216_hash NULL
+_002217_hash res_counter_read 4 33499 _002217_hash NULL
+_002218_hash rfcomm_tty_write 3 51603 _002218_hash NULL
+_002219_hash rs_sta_dbgfs_rate_scale_data_read 3 47165 _002219_hash NULL
+_002220_hash rs_sta_dbgfs_scale_table_read 3 40262 _002220_hash NULL
+_002221_hash rs_sta_dbgfs_stats_table_read 3 56573 _002221_hash NULL
+_002222_hash rts_threshold_read 3 44384 _002222_hash NULL
+_002223_hash rxrpc_sendmsg 4 29049 _002223_hash NULL
+_002224_hash scrub_setup_recheck_block 3-4 56245 _002224_hash NULL
+_002226_hash scsi_adjust_queue_depth 3 12802 _002226_hash NULL
+_002227_hash sctp_make_abort 3 34459 _002227_hash NULL
+_002228_hash sctp_make_asconf 3 4078 _002228_hash NULL
+_002229_hash sctp_make_asconf_ack 3 31726 _002229_hash NULL
+_002230_hash sctp_make_datafrag_empty 3 34737 _002230_hash NULL
+_002231_hash sctp_make_fwdtsn 3 53265 _002231_hash NULL
+_002232_hash sctp_make_heartbeat_ack 4 34411 _002232_hash NULL
+_002233_hash sctp_make_init 4 58401 _002233_hash NULL
+_002234_hash sctp_make_init_ack 4 3335 _002234_hash NULL
+_002235_hash sctp_make_op_error_space 3 5528 _002235_hash NULL
+_002236_hash sctp_manip_pkt 2 40620 _002236_hash NULL
+_002237_hash selinux_inode_notifysecctx 3 36896 _002237_hash NULL
+_002238_hash sel_read_avc_cache_threshold 3 33942 _002238_hash NULL
+_002239_hash sel_read_avc_hash_stats 3 1984 _002239_hash NULL
+_002240_hash sel_read_bool 3 24236 _002240_hash NULL
+_002241_hash sel_read_checkreqprot 3 33068 _002241_hash NULL
+_002242_hash sel_read_class 3 12669 _002960_hash NULL nohasharray
+_002243_hash sel_read_enforce 3 2828 _002243_hash NULL
+_002244_hash sel_read_handle_status 3 56139 _002244_hash NULL
+_002245_hash sel_read_handle_unknown 3 57933 _002245_hash NULL
+_002246_hash sel_read_initcon 3 32362 _002246_hash NULL
+_002247_hash sel_read_mls 3 25369 _002247_hash NULL
+_002248_hash sel_read_perm 3 42302 _002248_hash NULL
+_002249_hash sel_read_policy 3 55947 _002249_hash NULL
+_002250_hash sel_read_policycap 3 28544 _002250_hash NULL
+_002251_hash sel_read_policyvers 3 55 _002827_hash NULL nohasharray
+_002252_hash send_mpa_reject 3 7135 _002252_hash NULL
+_002253_hash send_mpa_reply 3 32372 _002253_hash NULL
+_002254_hash send_msg 4 37323 _002254_hash NULL
+_002255_hash send_packet 4 52960 _002255_hash NULL
+_002256_hash set_rxd_buffer_pointer 8 9950 _002256_hash NULL
+_002257_hash sge_rx 3 50594 _002257_hash NULL
+_002258_hash short_retry_limit_read 3 4687 _002258_hash NULL
+_002259_hash simple_attr_read 3 24738 _002259_hash NULL
+_002260_hash simple_transaction_read 3 17076 _002260_hash NULL
+_002261_hash sisusbcon_bmove 5-7-6 21873 _002261_hash NULL
+_002264_hash sisusbcon_clear 3-5-4 64329 _002264_hash NULL
+_002267_hash sisusbcon_putcs 3 57630 _002267_hash &_001043_hash
+_002268_hash sisusbcon_scroll 5-3-2 31315 _002268_hash NULL
+_002269_hash sisusbcon_scroll_area 3-4 25899 _002269_hash NULL
+_002271_hash skb_copy_datagram_const_iovec 2-5-4 48102 _002271_hash NULL
+_002274_hash skb_copy_datagram_iovec 2-4 5806 _002274_hash NULL
+_002276_hash skb_gro_header_slow 2 34958 _002276_hash NULL
+_002277_hash smk_read_ambient 3 61220 _002277_hash NULL
+_002278_hash smk_read_direct 3 15803 _002278_hash NULL
+_002279_hash smk_read_doi 3 30813 _002279_hash NULL
+_002280_hash smk_read_logging 3 37804 _002280_hash NULL
+_002281_hash smk_read_mapped 3 7562 _002281_hash NULL
+_002282_hash smk_read_onlycap 3 3855 _002282_hash NULL
+_002283_hash smp_build_cmd 3 45853 _002283_hash NULL
+_002284_hash snapshot_read 3 22601 _002284_hash NULL
+_002285_hash snd_cs4281_BA0_read 5 6847 _002285_hash NULL
+_002286_hash snd_cs4281_BA1_read 5 20323 _002286_hash NULL
+_002287_hash snd_cs46xx_io_read 5 45734 _002287_hash NULL
+_002288_hash snd_gus_dram_read 4 56686 _002288_hash NULL
+_002289_hash snd_mixart_BA0_read 5 45069 _002289_hash NULL
+_002290_hash snd_mixart_BA1_read 5 5082 _002290_hash NULL
+_002291_hash snd_pcm_oss_read 3 28317 _002291_hash NULL
+_002292_hash snd_pcm_plug_alloc 2 42339 _002292_hash NULL
+_002293_hash snd_rawmidi_kernel_read 3 4328 _002293_hash NULL
+_002294_hash snd_rawmidi_read 3 56337 _002294_hash NULL
+_002295_hash snd_rme32_capture_copy 5 39653 _002295_hash NULL
+_002296_hash snd_rme96_capture_copy 5 58484 _002296_hash NULL
+_002297_hash snd_soc_hw_bulk_write_raw 4 14245 _002297_hash NULL
+_002298_hash sock_alloc_send_skb 2 23720 _002298_hash NULL
+_002299_hash spi_show_regs 3 6911 _002299_hash &_002163_hash
+_002300_hash sta_agg_status_read 3 14058 _002300_hash NULL
+_002301_hash sta_connected_time_read 3 17435 _002301_hash NULL
+_002302_hash sta_flags_read 3 56710 _002302_hash NULL
+_002303_hash sta_ht_capa_read 3 10366 _002303_hash NULL
+_002304_hash sta_last_seq_ctrl_read 3 19106 _002304_hash NULL
+_002305_hash sta_num_ps_buf_frames_read 3 1488 _002305_hash NULL
+_002306_hash st_read 3 51251 _002306_hash NULL
+_002307_hash supply_map_read_file 3 10608 _002307_hash NULL
+_002308_hash sysfs_read_file 3 42113 _002308_hash NULL
+_002309_hash sys_preadv 3 17100 _002309_hash NULL
+_002310_hash sys_pwritev 3 41722 _002310_hash NULL
+_002311_hash sys_readv 3 50664 _002311_hash NULL
+_002312_hash sys_rt_sigpending 2 24961 _002312_hash NULL
+_002313_hash sys_writev 3 28384 _002313_hash NULL
+_002314_hash tcf_csum_skb_nextlayer 3 64025 _002314_hash NULL
+_002315_hash tcp_fragment 3 20436 _002315_hash NULL
+_002316_hash tcp_manip_pkt 2 14202 _002316_hash NULL
+_002317_hash teiup_create 3 43201 _002317_hash NULL
+_002318_hash test_iso_queue 5 62534 _002318_hash NULL
+_002319_hash tg3_run_loopback 2 30093 _002319_hash NULL
+_002320_hash tipc_msg_build 4 12326 _002320_hash NULL
+_002321_hash TSS_authhmac 3 12839 _002321_hash NULL
+_002322_hash TSS_checkhmac1 5 31429 _002322_hash NULL
+_002323_hash TSS_checkhmac2 5-7 40520 _002323_hash NULL
+_002325_hash tty_audit_log 8 47280 _002325_hash NULL
+_002326_hash tty_buffer_request_room 2 23228 _002326_hash NULL
+_002327_hash tty_insert_flip_string_fixed_flag 4 37428 _002327_hash NULL
+_002328_hash tty_insert_flip_string_flags 4 30969 _002328_hash NULL
+_002329_hash tty_prepare_flip_string 3 39955 _002329_hash NULL
+_002330_hash tty_prepare_flip_string_flags 4 59240 _002330_hash NULL
+_002331_hash tun_alloc_skb 2-4-3 41216 _002331_hash NULL
+_002334_hash tun_sendmsg 4 10337 _002334_hash NULL
+_002335_hash u32_array_read 3 2219 _002335_hash NULL
+_002336_hash ubi_io_write_data 4-5 40305 _002336_hash NULL
+_002338_hash udplite_manip_pkt 2 62433 _002338_hash NULL
+_002339_hash udp_manip_pkt 2 50770 _002339_hash NULL
+_002340_hash uhci_debug_read 3 5911 _002340_hash NULL
+_002341_hash um_idi_read 3 850 _002341_hash NULL
+_002342_hash unix_seqpacket_sendmsg 4 27893 _002342_hash NULL
+_002343_hash unix_stream_recvmsg 4 35210 _002343_hash NULL
+_002344_hash unlink_simple 3 47506 _002344_hash NULL
+_002345_hash use_pool 2 64607 _002345_hash NULL
+_002346_hash v9fs_fid_readn 4 60544 _002346_hash NULL
+_002347_hash v9fs_file_read 3 40858 _002347_hash NULL
+_002348_hash vhci_read 3 47878 _002348_hash NULL
+_002349_hash vhost_add_used_and_signal_n 4 8038 _002349_hash NULL
+_002350_hash vmbus_open 2-3 12154 _002350_hash NULL
+_002352_hash vxge_rx_alloc 3 52024 _002352_hash NULL
+_002353_hash waiters_read 3 40902 _002353_hash NULL
+_002354_hash wm8994_bulk_write 3 13615 _002354_hash NULL
+_002355_hash write_pbl 4 59583 _002355_hash NULL
+_002356_hash wusb_prf_256 7 29203 _002356_hash NULL
+_002357_hash wusb_prf_64 7 51065 _002357_hash NULL
+_002358_hash _xfs_buf_alloc 3 38058 _002358_hash NULL
+_002359_hash xfs_buf_read_uncached 3 42844 _002359_hash NULL
+_002360_hash xfs_file_buffered_aio_write 4 11492 _002360_hash NULL
+_002361_hash xfs_iext_add 3 41422 _002361_hash NULL
+_002362_hash xfs_iext_remove_direct 3 40744 _002362_hash NULL
+_002363_hash xfs_readdir 3 41200 _002363_hash NULL
+_002364_hash xfs_trans_get_efd 3 51148 _002364_hash NULL
+_002365_hash xfs_trans_get_efi 2 7898 _002365_hash NULL
+_002366_hash xlog_bread_offset 3 60030 _002366_hash NULL
+_002367_hash xlog_get_bp 2 23229 _002367_hash NULL
+_002368_hash xz_dec_init 2 29029 _002368_hash NULL
+_002369_hash aac_change_queue_depth 2 825 _002369_hash NULL
+_002370_hash add_rx_skb 3 8257 _002370_hash NULL
+_002371_hash afs_extract_data 5 50261 _002371_hash NULL
+_002372_hash arcmsr_adjust_disk_queue_depth 2 16756 _002372_hash NULL
+_002373_hash atalk_recvmsg 4 22053 _002373_hash NULL
+_002374_hash ath6kl_buf_alloc 1 57304 _002374_hash NULL
+_002376_hash atomic_read_file 3 16227 _002376_hash NULL
+_002377_hash ax25_recvmsg 4 64441 _002377_hash NULL
+_002378_hash batadv_add_packet 3 12136 _002378_hash NULL
+_002379_hash batadv_iv_ogm_aggregate_new 2 54761 _002379_hash NULL
+_002380_hash batadv_tt_response_fill_table 1 39236 _002380_hash NULL
+_002381_hash beiscsi_process_async_pdu 7 39834 _002381_hash NULL
+_002382_hash bioset_create 1 5580 _002382_hash NULL
+_002383_hash bioset_integrity_create 2 62708 _002383_hash NULL
+_002384_hash biovec_create_pools 2 9575 _002384_hash NULL
+_002385_hash bnx2fc_process_l2_frame_compl 3 65072 _002385_hash NULL
+_002386_hash brcmf_sdbrcm_died_dump 3 15841 _002386_hash NULL
+_002387_hash brcmu_pkt_buf_get_skb 1 5556 _002387_hash NULL
+_002388_hash br_send_bpdu 3 29669 _002388_hash NULL
+_002389_hash btrfs_error_discard_extent 2 50444 _002389_hash NULL
+_002390_hash __btrfs_free_reserved_extent 2 31207 _002390_hash NULL
+_002391_hash btrfsic_cmp_log_and_dev_bytenr 2 49628 _002391_hash NULL
+_002392_hash btrfsic_create_link_to_next_block 4 58246 _002392_hash NULL
+_002393_hash btrfs_init_new_buffer 4 55761 _002393_hash NULL
+_002394_hash btrfs_mksubvol 3 58240 _002394_hash NULL
+_002395_hash bt_skb_send_alloc 2 6581 _002395_hash NULL
+_002396_hash bt_sock_recvmsg 4 12316 _002396_hash NULL
+_002397_hash bt_sock_stream_recvmsg 4 52518 _002397_hash NULL
+_002398_hash c4iw_reject_cr 3 28174 _002398_hash NULL
+_002399_hash caif_seqpkt_recvmsg 4 32241 _002399_hash NULL
+_002400_hash carl9170_rx_copy_data 2 21656 _002400_hash NULL
+_002401_hash cfpkt_append 3 61206 _002401_hash NULL
+_002402_hash cfpkt_setlen 2 49343 _002402_hash NULL
+_002403_hash cgroup_file_read 3 28804 _002403_hash NULL
+_002404_hash cosa_net_setup_rx 2 38594 _002404_hash NULL
+_002405_hash cpu_type_read 3 36540 _002405_hash NULL
+_002406_hash cxgb4_pktgl_to_skb 2 61899 _002406_hash NULL
+_002408_hash dccp_recvmsg 4 16056 _002408_hash NULL
+_002409_hash ddp_clear_map 4 46152 _002409_hash NULL
+_002410_hash ddp_set_map 4 751 _002410_hash NULL
+_002411_hash depth_read 3 31112 _002411_hash NULL
+_002412_hash dfs_global_file_read 3 7787 _002412_hash NULL
+_002413_hash dgram_recvmsg 4 23104 _002413_hash NULL
+_002414_hash diva_init_dma_map 3 58336 _002414_hash NULL
+_002415_hash divas_write 3 63901 _002415_hash NULL
+_002416_hash dma_push_rx 2 39973 _002416_hash NULL
+_002417_hash dma_skb_copy_datagram_iovec 3-5 21516 _002417_hash NULL
+_002419_hash dm_table_create 3 35687 _002419_hash NULL
+_002420_hash dn_alloc_send_pskb 2 4465 _002420_hash NULL
+_002421_hash dn_nsp_return_disc 2 60296 _002421_hash NULL
+_002422_hash dn_nsp_send_disc 2 23469 _002422_hash NULL
+_002423_hash dsp_tone_hw_message 3 17678 _002423_hash NULL
+_002424_hash e1000_check_copybreak 3 62448 _002424_hash NULL
+_002425_hash enable_read 3 2117 _002425_hash &_000224_hash
+_002426_hash exofs_read_kern 6 39921 _002426_hash &_002129_hash
+_002427_hash fast_rx_path 3 59214 _002427_hash NULL
+_002428_hash fc_change_queue_depth 2 36841 _002428_hash NULL
+_002429_hash fc_fcp_frame_alloc 2 12624 _002429_hash NULL
+_002430_hash fcoe_ctlr_send_keep_alive 3 15308 _002430_hash NULL
+_002431_hash frequency_read 3 64031 _003698_hash NULL nohasharray
+_002432_hash ftdi_process_packet 5 45005 _002432_hash NULL
+_002433_hash fuse_conn_congestion_threshold_read 3 51028 _002433_hash NULL
+_002434_hash fuse_conn_max_background_read 3 10855 _002434_hash NULL
+_002435_hash fwnet_incoming_packet 3 40380 _002435_hash NULL
+_002436_hash fwnet_pd_new 4 39947 _003402_hash NULL nohasharray
+_002437_hash get_alua_req 3 4166 _002437_hash NULL
+_002438_hash get_rdac_req 3 45882 _002438_hash NULL
+_002439_hash got_frame 2 16028 _002439_hash NULL
+_002440_hash gsm_mux_rx_netchar 3 33336 _002440_hash NULL
+_002441_hash hci_sock_recvmsg 4 7072 _002441_hash NULL
+_002442_hash hdlcdev_rx 3 997 _002442_hash NULL
+_002443_hash hdlc_empty_fifo 2 18397 _002443_hash NULL
+_002444_hash hfc_empty_fifo 2 57972 _002444_hash NULL
+_002445_hash hfcpci_empty_fifo 4 2427 _002445_hash NULL
+_002446_hash hfcsusb_rx_frame 3 52745 _002446_hash NULL
+_002447_hash hidp_output_raw_report 3 5629 _002447_hash NULL
+_002448_hash hpsa_change_queue_depth 2 15449 _002448_hash NULL
+_002449_hash hptiop_adjust_disk_queue_depth 2 20122 _002449_hash NULL
+_002450_hash hscx_empty_fifo 2 13360 _002450_hash NULL
+_002451_hash hysdn_rx_netpkt 3 16136 _002451_hash NULL
+_002452_hash i2o_pool_alloc 4 55485 _002452_hash NULL
+_002453_hash ide_queue_pc_tail 5 11673 _002453_hash NULL
+_002454_hash ide_raw_taskfile 4 42355 _002454_hash NULL
+_002455_hash idetape_queue_rw_tail 3 29562 _002455_hash NULL
+_002456_hash ieee80211_amsdu_to_8023s 5 15561 _002456_hash NULL
+_002457_hash ieee80211_fragment 4 33112 _002457_hash NULL
+_002458_hash ieee80211_if_read_aid 3 9705 _002458_hash NULL
+_002459_hash ieee80211_if_read_auto_open_plinks 3 38268 _002459_hash &_000374_hash
+_002460_hash ieee80211_if_read_ave_beacon 3 64924 _002460_hash NULL
+_002461_hash ieee80211_if_read_bssid 3 35161 _002461_hash NULL
+_002462_hash ieee80211_if_read_channel_type 3 23884 _002462_hash NULL
+_002463_hash ieee80211_if_read_dot11MeshConfirmTimeout 3 60670 _002463_hash NULL
+_002464_hash ieee80211_if_read_dot11MeshForwarding 3 13940 _002464_hash NULL
+_002465_hash ieee80211_if_read_dot11MeshGateAnnouncementProtocol 3 14486 _002465_hash NULL
+_002466_hash ieee80211_if_read_dot11MeshHoldingTimeout 3 47356 _002466_hash NULL
+_002467_hash ieee80211_if_read_dot11MeshHWMPactivePathTimeout 3 7368 _002467_hash NULL
+_002468_hash ieee80211_if_read_dot11MeshHWMPactivePathToRootTimeout 3 17618 _002468_hash NULL
+_002469_hash ieee80211_if_read_dot11MeshHWMPconfirmationInterval 3 57722 _002469_hash NULL
+_002470_hash ieee80211_if_read_dot11MeshHWMPmaxPREQretries 3 59829 _002470_hash NULL
+_002471_hash ieee80211_if_read_dot11MeshHWMPnetDiameterTraversalTime 3 1589 _002471_hash NULL
+_002472_hash ieee80211_if_read_dot11MeshHWMPperrMinInterval 3 17346 _002472_hash NULL
+_002473_hash ieee80211_if_read_dot11MeshHWMPpreqMinInterval 3 24208 _002473_hash NULL
+_002474_hash ieee80211_if_read_dot11MeshHWMPRannInterval 3 2249 _002474_hash NULL
+_002475_hash ieee80211_if_read_dot11MeshHWMProotInterval 3 27873 _002475_hash NULL
+_002476_hash ieee80211_if_read_dot11MeshHWMPRootMode 3 51441 _002476_hash NULL
+_002477_hash ieee80211_if_read_dot11MeshMaxPeerLinks 3 23878 _002477_hash NULL
+_002478_hash ieee80211_if_read_dot11MeshMaxRetries 3 12756 _002478_hash NULL
+_002479_hash ieee80211_if_read_dot11MeshRetryTimeout 3 52168 _002479_hash NULL
+_002480_hash ieee80211_if_read_dot11MeshTTL 3 58307 _002480_hash NULL
+_002481_hash ieee80211_if_read_dropped_frames_congestion 3 32603 _002481_hash NULL
+_002482_hash ieee80211_if_read_dropped_frames_no_route 3 33383 _002482_hash NULL
+_002483_hash ieee80211_if_read_dropped_frames_ttl 3 44500 _002483_hash NULL
+_002484_hash ieee80211_if_read_drop_unencrypted 3 37053 _002484_hash NULL
+_002485_hash ieee80211_if_read_dtim_count 3 38419 _002485_hash NULL
+_002486_hash ieee80211_if_read_element_ttl 3 18869 _002486_hash NULL
+_002487_hash ieee80211_if_read_estab_plinks 3 32533 _002487_hash NULL
+_002488_hash ieee80211_if_read_flags 3 57470 _002919_hash NULL nohasharray
+_002489_hash ieee80211_if_read_fwded_frames 3 36520 _002489_hash NULL
+_002490_hash ieee80211_if_read_fwded_mcast 3 39571 _002490_hash &_000162_hash
+_002491_hash ieee80211_if_read_fwded_unicast 3 59740 _002491_hash &_001697_hash
+_002492_hash ieee80211_if_read_ht_opmode 3 29044 _002492_hash NULL
+_002493_hash ieee80211_if_read_last_beacon 3 31257 _002493_hash NULL
+_002494_hash ieee80211_if_read_min_discovery_timeout 3 13946 _002494_hash NULL
+_002495_hash ieee80211_if_read_num_buffered_multicast 3 12716 _002495_hash NULL
+_002496_hash ieee80211_if_read_num_mcast_sta 3 12419 _002496_hash NULL
+_002497_hash ieee80211_if_read_num_sta_ps 3 34722 _002497_hash NULL
+_002498_hash ieee80211_if_read_path_refresh_time 3 25545 _002498_hash NULL
+_002499_hash ieee80211_if_read_peer 3 45233 _002499_hash NULL
+_002500_hash ieee80211_if_read_rc_rateidx_mask_2ghz 3 61570 _002500_hash NULL
+_002501_hash ieee80211_if_read_rc_rateidx_mask_5ghz 3 27183 _002501_hash NULL
+_002502_hash ieee80211_if_read_rc_rateidx_mcs_mask_2ghz 3 37675 _002502_hash NULL
+_002503_hash ieee80211_if_read_rc_rateidx_mcs_mask_5ghz 3 44423 _002503_hash NULL
+_002504_hash ieee80211_if_read_rssi_threshold 3 49260 _002504_hash NULL
+_002505_hash ieee80211_if_read_smps 3 27416 _002505_hash NULL
+_002506_hash ieee80211_if_read_state 3 9813 _002707_hash NULL nohasharray
+_002507_hash ieee80211_if_read_tkip_mic_test 3 19565 _002507_hash NULL
+_002508_hash ieee80211_if_read_tsf 3 16420 _002508_hash NULL
+_002509_hash ieee80211_if_read_uapsd_max_sp_len 3 15067 _002509_hash NULL
+_002510_hash ieee80211_if_read_uapsd_queues 3 55150 _002510_hash NULL
+_002511_hash ieee80211_mgmt_tx 9 46860 _002511_hash NULL
+_002512_hash ieee80211_probereq_get 4-6 29069 _002512_hash NULL
+_002514_hash ieee80211_rx_mgmt_beacon 3 24430 _002514_hash NULL
+_002515_hash ieee80211_rx_mgmt_probe_resp 3 6918 _002515_hash NULL
+_002516_hash ieee80211_send_auth 5 24121 _002516_hash NULL
+_002517_hash ieee80211_set_probe_resp 3 10077 _002517_hash NULL
+_002518_hash ieee80211_tdls_mgmt 8 9581 _002518_hash NULL
+_002519_hash ima_show_htable_violations 3 10619 _002519_hash NULL
+_002520_hash ima_show_measurements_count 3 23536 _002520_hash NULL
+_002521_hash insert_one_name 7 61668 _002521_hash NULL
+_002522_hash ip6_ufo_append_data 5-7-6 4780 _002522_hash NULL
+_002525_hash ip_append_data 5-6 16942 _002525_hash NULL
+_002526_hash ip_make_skb 5-6 13129 _002526_hash NULL
+_002527_hash ip_nat_sdp_port 6 52938 _002527_hash NULL
+_002528_hash ip_nat_sip_expect 7 45693 _002528_hash NULL
+_002529_hash ipr_change_queue_depth 2 6431 _002529_hash NULL
+_002530_hash ip_recv_error 3 23109 _002530_hash NULL
+_002531_hash ip_ufo_append_data 6-8-7 12775 _002531_hash NULL
+_002534_hash ipv6_recv_error 3 56347 _002534_hash NULL
+_002535_hash ipv6_recv_rxpmtu 3 7142 _002535_hash NULL
+_002536_hash ipw_packet_received_skb 2 1230 _002536_hash NULL
+_002537_hash ipx_recvmsg 4 44366 _002537_hash NULL
+_002538_hash irda_recvmsg_dgram 4 32631 _002538_hash NULL
+_002539_hash iscsi_change_queue_depth 2 23416 _002539_hash NULL
+_002540_hash iscsi_complete_pdu 4 48372 _002540_hash NULL
+_002541_hash iwch_reject_cr 3 23901 _002541_hash NULL
+_002542_hash ixgb_check_copybreak 3 5847 _002542_hash NULL
+_002543_hash key_conf_hw_key_idx_read 3 25003 _002543_hash NULL
+_002544_hash key_conf_keyidx_read 3 42443 _002544_hash NULL
+_002545_hash key_conf_keylen_read 3 49758 _002545_hash NULL
+_002546_hash key_flags_read 3 25931 _002546_hash NULL
+_002547_hash key_ifindex_read 3 31411 _002547_hash NULL
+_002548_hash key_tx_rx_count_read 3 44742 _002548_hash NULL
+_002549_hash kmsg_read 3 46514 _002549_hash NULL
+_002550_hash l1oip_socket_parse 4 4507 _002550_hash NULL
+_002551_hash l2cap_send_cmd 4 14548 _002551_hash NULL
+_002552_hash l2cap_sock_sendmsg 4 63427 _002552_hash NULL
+_002553_hash l2tp_ip6_recvmsg 4 62874 _002553_hash NULL
+_002554_hash l2tp_ip6_sendmsg 4 7461 _002554_hash NULL
+_002555_hash l2tp_ip_recvmsg 4 22681 _002555_hash NULL
+_002556_hash lbs_bcnmiss_read 3 8678 _002556_hash NULL
+_002557_hash lbs_failcount_read 3 31063 _002557_hash NULL
+_002558_hash lbs_highrssi_read 3 64089 _002558_hash NULL
+_002559_hash lbs_highsnr_read 3 5931 _002559_hash NULL
+_002560_hash lbs_lowrssi_read 3 32242 _002560_hash NULL
+_002561_hash lbs_lowsnr_read 3 29571 _002561_hash NULL
+_002563_hash llc_ui_recvmsg 4 3826 _002563_hash NULL
+_002564_hash lowpan_fragment_xmit 3-4 22095 _002564_hash NULL
+_002566_hash lpfc_change_queue_depth 2 25905 _002566_hash NULL
+_002568_hash macvtap_do_read 4 36555 _002568_hash &_002050_hash
+_002569_hash mangle_sdp_packet 9 36279 _002569_hash NULL
+_002570_hash map_addr 6 4666 _002570_hash NULL
+_002571_hash mcs_unwrap_fir 3 25733 _002571_hash NULL
+_002572_hash mcs_unwrap_mir 3 9455 _002572_hash NULL
+_002573_hash megaraid_change_queue_depth 2 64815 _002573_hash NULL
+_002574_hash megasas_change_queue_depth 2 32747 _002574_hash NULL
+_002575_hash mld_newpack 2 50950 _002575_hash NULL
+_002576_hash mptscsih_change_queue_depth 2 26036 _002576_hash NULL
+_002577_hash named_distribute 4 48544 _002577_hash NULL
+_002578_hash NCR_700_change_queue_depth 2 31742 _002578_hash NULL
+_002579_hash netlink_recvmsg 4 61600 _002579_hash NULL
+_002580_hash nfc_alloc_send_skb 4 3167 _002580_hash NULL
+_002581_hash nf_nat_ftp 5 47948 _002581_hash NULL
+_002582_hash nfsctl_transaction_read 3 48250 _002582_hash NULL
+_002583_hash nfsd_read 5 19568 _002583_hash NULL
+_002584_hash nfsd_read_file 6 62241 _002584_hash NULL
+_002585_hash nfsd_write 6 54809 _002585_hash NULL
+_002586_hash nfs_map_group_to_gid 3 15892 _002586_hash NULL
+_002587_hash nfs_map_name_to_uid 3 51132 _002587_hash NULL
+_002588_hash nr_recvmsg 4 12649 _002588_hash NULL
+_002589_hash ntfs_rl_append 2-4 6037 _002589_hash NULL
+_002591_hash ntfs_rl_insert 2-4 4931 _002591_hash NULL
+_002593_hash ntfs_rl_replace 2-4 14136 _002593_hash NULL
+_002595_hash ntfs_rl_split 2-4 52328 _002595_hash NULL
+_002597_hash osd_req_list_collection_objects 5 36664 _002597_hash NULL
+_002598_hash osd_req_list_partition_objects 5 56464 _002598_hash NULL
+_002599_hash osd_req_read_sg 5 47905 _002599_hash NULL
+_002600_hash osd_req_write_sg 5 50908 _002600_hash NULL
+_002602_hash p54_download_eeprom 4 43842 _002602_hash NULL
+_002604_hash packet_recv_error 3 16669 _002604_hash NULL
+_002605_hash packet_recvmsg 4 47700 _002605_hash NULL
+_002606_hash pep_recvmsg 4 19402 _002606_hash NULL
+_002607_hash pfkey_recvmsg 4 53604 _002607_hash NULL
+_002608_hash ping_recvmsg 4 25597 _002608_hash NULL
+_002609_hash pmcraid_change_queue_depth 2 9116 _002609_hash NULL
+_002610_hash pn_recvmsg 4 30887 _002610_hash NULL
+_002611_hash pointer_size_read 3 51863 _002611_hash NULL
+_002612_hash power_read 3 15939 _002612_hash NULL
+_002613_hash pppoe_recvmsg 4 15073 _002613_hash NULL
+_002614_hash pppol2tp_recvmsg 4 57742 _002993_hash NULL nohasharray
+_002615_hash ppp_tx_cp 5 62044 _002615_hash NULL
+_002616_hash prism2_send_mgmt 4 62605 _002616_hash &_002119_hash
+_002617_hash prism2_sta_send_mgmt 5 43916 _002617_hash NULL
+_002618_hash prison_create 1 43623 _002618_hash NULL
+_002619_hash qla2x00_adjust_sdev_qdepth_up 2 20097 _002619_hash NULL
+_002620_hash qla2x00_change_queue_depth 2 24742 _002620_hash NULL
+_002621_hash _queue_data 4 54983 _002621_hash NULL
+_002622_hash raw_recvmsg 4 52529 _002622_hash NULL
+_002623_hash rawsock_recvmsg 4 12144 _002623_hash NULL
+_002624_hash rawv6_recvmsg 4 30265 _002624_hash NULL
+_002625_hash rds_tcp_data_recv 3 53476 _002625_hash NULL
+_002626_hash reada_add_block 2 54247 _002626_hash NULL
+_002627_hash readahead_tree_block 3 36285 _002627_hash NULL
+_002628_hash reada_tree_block_flagged 3 18402 _002628_hash NULL
+_002629_hash read_dma 3 55086 _002629_hash NULL
+_002630_hash read_fifo 3 826 _002630_hash NULL
+_002631_hash read_tree_block 3 841 _002631_hash NULL
+_002632_hash receive_copy 3 12216 _002632_hash NULL
+_002633_hash recover_peb 6-7 29238 _002633_hash NULL
+_002635_hash recv_msg 4 48709 _002635_hash NULL
+_002636_hash recv_stream 4 30138 _002636_hash NULL
+_002637_hash _req_append_segment 2 41031 _002637_hash NULL
+_002638_hash request_key_async 4 6990 _002638_hash NULL
+_002639_hash request_key_async_with_auxdata 4 46624 _002639_hash NULL
+_002640_hash request_key_with_auxdata 4 24515 _002640_hash NULL
+_002641_hash rose_recvmsg 4 2368 _002641_hash &_001788_hash
+_002642_hash rtl8169_try_rx_copy 3 705 _002642_hash NULL
+_002643_hash _rtl92s_firmware_downloadcode 3 14021 _002643_hash NULL
+_002644_hash rx_data 4 60442 _002644_hash NULL
+_002645_hash rxrpc_recvmsg 4 26233 _002645_hash NULL
+_002646_hash sas_change_queue_depth 2 18555 _002646_hash NULL
+_002647_hash scsi_activate_tcq 2 42640 _002647_hash NULL
+_002648_hash scsi_deactivate_tcq 2 47086 _002648_hash NULL
+_002649_hash scsi_execute 5 33596 _002649_hash NULL
+_002650_hash _scsih_adjust_queue_depth 2 1083 _002650_hash NULL
+_002651_hash scsi_init_shared_tag_map 2 59812 _002651_hash NULL
+_002652_hash scsi_track_queue_full 2 44239 _002652_hash NULL
+_002653_hash sctp_abort_pkt_new 5 55218 _002653_hash NULL
+_002654_hash sctp_make_abort_violation 4 27959 _002654_hash NULL
+_002655_hash sctp_make_op_error 5-6 7057 _002655_hash NULL
+_002657_hash sctp_recvmsg 4 23265 _002657_hash NULL
+_002658_hash send_stream 4 3397 _002658_hash NULL
+_002659_hash sis190_try_rx_copy 3 57069 _002659_hash NULL
+_002664_hash skb_copy_and_csum_datagram_iovec 2 24466 _002664_hash NULL
+_002666_hash skge_rx_get 3 40598 _002666_hash NULL
+_002667_hash smp_send_cmd 3 512 _002667_hash NULL
+_002668_hash snd_gf1_mem_proc_dump 5 16926 _003499_hash NULL nohasharray
+_002669_hash sta_dev_read 3 14782 _002669_hash NULL
+_002670_hash sta_inactive_ms_read 3 25690 _002670_hash NULL
+_002671_hash sta_last_signal_read 3 31818 _002671_hash NULL
+_002672_hash stats_dot11ACKFailureCount_read 3 45558 _002672_hash NULL
+_002673_hash stats_dot11FCSErrorCount_read 3 28154 _002673_hash NULL
+_002674_hash stats_dot11RTSFailureCount_read 3 43948 _002674_hash NULL
+_002675_hash stats_dot11RTSSuccessCount_read 3 33065 _002675_hash NULL
+_002676_hash storvsc_connect_to_vsp 2 22 _002676_hash NULL
+_002677_hash sys_msgrcv 3 959 _002677_hash NULL
+_002678_hash sys_syslog 3 10746 _002678_hash NULL
+_002679_hash tcf_csum_ipv4_icmp 3 9258 _002679_hash NULL
+_002680_hash tcf_csum_ipv4_igmp 3 60446 _002680_hash NULL
+_002681_hash tcf_csum_ipv4_tcp 4 39713 _002681_hash NULL
+_002682_hash tcf_csum_ipv4_udp 4 30777 _002682_hash NULL
+_002683_hash tcf_csum_ipv6_icmp 4 11738 _002683_hash NULL
+_002684_hash tcf_csum_ipv6_tcp 4 54877 _002684_hash NULL
+_002685_hash tcf_csum_ipv6_udp 4 25241 _002685_hash NULL
+_002686_hash tcm_loop_change_queue_depth 2 42454 _002686_hash NULL
+_002687_hash tcp_copy_to_iovec 3 28344 _002687_hash NULL
+_002688_hash tcp_mark_head_lost 2 35895 _002688_hash NULL
+_002689_hash tcp_match_skb_to_sack 4 23568 _002689_hash NULL
+_002690_hash timeout_read 3 47915 _002690_hash NULL
+_002691_hash tipc_multicast 5 49144 _002691_hash NULL
+_002692_hash tipc_port_recv_sections 4 42890 _002692_hash NULL
+_002693_hash tipc_port_reject_sections 5 55229 _002693_hash NULL
+_002694_hash total_ps_buffered_read 3 16365 _002694_hash NULL
+_002695_hash tso_fragment 3 29050 _002695_hash NULL
+_002696_hash tty_insert_flip_string 3 34042 _002696_hash NULL
+_002698_hash tun_put_user 4 59849 _002698_hash NULL
+_002699_hash twa_change_queue_depth 2 48808 _002699_hash NULL
+_002700_hash tw_change_queue_depth 2 11116 _002700_hash NULL
+_002701_hash twl_change_queue_depth 2 41342 _002701_hash NULL
+_002702_hash ubi_eba_atomic_leb_change 5 60379 _002702_hash NULL
+_002703_hash ubi_eba_write_leb 5-6 36029 _002703_hash NULL
+_002705_hash ubi_eba_write_leb_st 5 44343 _002705_hash NULL
+_002706_hash udp_recvmsg 4 42558 _002706_hash NULL
+_002707_hash udpv6_recvmsg 4 9813 _002707_hash &_002506_hash
+_002708_hash udpv6_sendmsg 4 22316 _002708_hash NULL
+_002709_hash ulong_read_file 3 42304 _002709_hash &_000522_hash
+_002710_hash unix_dgram_recvmsg 4 14952 _002710_hash NULL
+_002711_hash user_power_read 3 39414 _002711_hash NULL
+_002712_hash v9fs_direct_read 3 45546 _002712_hash NULL
+_002713_hash v9fs_file_readn 4 36353 _002713_hash &_001799_hash
+_002714_hash vcc_recvmsg 4 37198 _002714_hash NULL
+_002715_hash velocity_rx_copy 2 34583 _002715_hash NULL
+_002716_hash W6692_empty_Bfifo 2 47804 _002716_hash NULL
+_002717_hash wep_iv_read 3 54744 _002717_hash NULL
+_002718_hash x25_recvmsg 4 42777 _002718_hash NULL
+_002719_hash xfs_buf_get_map 3 24522 _002719_hash NULL
+_002720_hash xfs_file_aio_write 4 33234 _002720_hash NULL
+_002721_hash xfs_iext_insert 3 18667 _002741_hash NULL nohasharray
+_002722_hash xfs_iext_remove 3 50909 _002722_hash NULL
+_002723_hash xlog_do_recovery_pass 3 21618 _002723_hash NULL
+_002724_hash xlog_find_verify_log_record 2 18870 _002724_hash NULL
+_002725_hash zd_mac_rx 3 38296 _002725_hash NULL
+_002726_hash aircable_process_packet 5 46639 _002726_hash NULL
+_002727_hash ath6kl_wmi_get_new_buf 1 52304 _002727_hash NULL
+_002728_hash batadv_iv_ogm_queue_add 3 46319 _002728_hash NULL
+_002729_hash batadv_receive_client_update_packet 3 41578 _002729_hash NULL
+_002730_hash batadv_receive_server_sync_packet 3 26577 _002730_hash &_000494_hash
+_002731_hash brcmf_alloc_pkt_and_read 2 63116 _002731_hash &_002028_hash
+_002732_hash brcmf_sdcard_recv_buf 6 38179 _002732_hash NULL
+_002733_hash brcmf_sdcard_rwdata 5 65041 _002733_hash NULL
+_002734_hash brcmf_sdcard_send_buf 6 7713 _002734_hash NULL
+_002735_hash brcmf_sdio_forensic_read 3 35311 _002735_hash &_001382_hash
+_002736_hash btrfs_alloc_free_block 3 8986 _002736_hash NULL
+_002737_hash btrfs_free_and_pin_reserved_extent 2 53016 _002737_hash NULL
+_002738_hash btrfs_free_reserved_extent 2 9867 _002738_hash NULL
+_002739_hash carl9170_handle_mpdu 3 11056 _002739_hash NULL
+_002740_hash do_trimming 3 26952 _002740_hash NULL
+_002741_hash edge_tty_recv 4 18667 _002741_hash &_002721_hash
+_002742_hash fwnet_receive_packet 9 50537 _002742_hash NULL
+_002743_hash gigaset_if_receive 3 4861 _002743_hash NULL
+_002744_hash gsm_dlci_data 3 14155 _002744_hash NULL
+_002745_hash handle_rx_packet 3 58993 _002745_hash NULL
+_002746_hash HDLC_irq 2 8709 _002746_hash NULL
+_002747_hash hdlc_rpr_irq 2 10240 _002747_hash NULL
+_002749_hash ifx_spi_insert_flip_string 3 51752 _002749_hash NULL
+_002753_hash ip_nat_sdp_media 8 23386 _002753_hash NULL
+_002754_hash ip_send_unicast_reply 6 38714 _002754_hash NULL
+_002756_hash ipwireless_network_packet_received 4 51277 _002756_hash NULL
+_002757_hash ipwireless_tty_received 3 49154 _002757_hash NULL
+_002758_hash iscsi_iser_recv 4 41948 _002758_hash NULL
+_002759_hash l2cap_bredr_sig_cmd 3 49065 _002759_hash NULL
+_002760_hash l2cap_sock_alloc_skb_cb 2 33532 _002760_hash NULL
+_002761_hash l2cap_sock_recvmsg 4 59886 _002761_hash NULL
+_002762_hash llcp_allocate_pdu 3 19866 _002762_hash NULL
+_002763_hash macvtap_recvmsg 4 63949 _002763_hash NULL
+_002764_hash osd_req_list_dev_partitions 4 60027 _002764_hash NULL
+_002765_hash osd_req_list_partition_collections 5 38223 _002765_hash NULL
+_002766_hash osst_do_scsi 4 44410 _002766_hash NULL
+_002767_hash ping_sendmsg 4 3782 _002767_hash NULL
+_002768_hash ppp_cp_event 6 2965 _002768_hash NULL
+_002769_hash pty_write 3 44757 _002769_hash &_001733_hash
+_002770_hash push_rx 3 28939 _002770_hash NULL
+_002772_hash qla2x00_handle_queue_full 2 24365 _002772_hash NULL
+_002773_hash qla4xxx_change_queue_depth 2 1268 _002773_hash NULL
+_002774_hash rfcomm_sock_recvmsg 4 22227 _002774_hash NULL
+_002775_hash scsi_execute_req 5 42088 _002775_hash NULL
+_002776_hash _scsih_change_queue_depth 2 26230 _002776_hash NULL
+_002777_hash sctp_sf_abort_violation 6 38380 _002777_hash NULL
+_002778_hash send_to_tty 3 45141 _002778_hash NULL
+_002780_hash sky2_receive 2 13407 _002780_hash NULL
+_002781_hash spi_execute 5 28736 _002781_hash NULL
+_002782_hash submit_inquiry 3 42108 _002782_hash NULL
+_002783_hash tcp_dma_try_early_copy 3 4457 _002783_hash NULL
+_002784_hash tcp_sacktag_walk 6 49703 _002784_hash NULL
+_002785_hash tcp_write_xmit 2 64602 _002785_hash NULL
+_002786_hash ti_recv 4 22027 _002786_hash NULL
+_002787_hash tun_do_read 4 50800 _002787_hash NULL
+_002788_hash ubi_leb_change 4 10289 _002788_hash NULL
+_002789_hash ubi_leb_write 4-5 5478 _002789_hash NULL
+_002791_hash udp_sendmsg 4 4492 _002791_hash NULL
+_002792_hash unix_seqpacket_recvmsg 4 23062 _002792_hash &_000477_hash
+_002793_hash v9fs_cached_file_read 3 2514 _002793_hash NULL
+_002794_hash write_leb 5 36957 _002794_hash NULL
+_002795_hash xfs_buf_read_map 3 40226 _002795_hash NULL
+_002796_hash xfs_trans_get_buf_map 4 2927 _002796_hash NULL
+_002797_hash xlog_do_log_recovery 3 17550 _002797_hash NULL
+_002798_hash ath6kl_wmi_add_wow_pattern_cmd 4 12842 _002798_hash NULL
+_002799_hash ath6kl_wmi_beginscan_cmd 8 25462 _002799_hash NULL
+_002800_hash ath6kl_wmi_send_probe_response_cmd 6 31728 _002800_hash NULL
+_002801_hash ath6kl_wmi_set_appie_cmd 5 39266 _002801_hash NULL
+_002802_hash ath6kl_wmi_set_ie_cmd 6 37260 _002802_hash NULL
+_002803_hash ath6kl_wmi_startscan_cmd 8 33674 _002803_hash NULL
+_002804_hash ath6kl_wmi_test_cmd 3 27312 _002804_hash NULL
+_002805_hash brcmf_sdbrcm_membytes 3-5 37324 _002805_hash NULL
+_002807_hash brcmf_sdbrcm_read_control 3 22721 _002807_hash NULL
+_002808_hash brcmf_tx_frame 3 20978 _002808_hash NULL
+_002809_hash __carl9170_rx 3 56784 _002809_hash NULL
+_002810_hash ch_do_scsi 4 31171 _002810_hash NULL
+_002811_hash dbg_leb_change 4 23555 _002811_hash NULL
+_002812_hash dbg_leb_write 4-5 63555 _002812_hash &_000971_hash
+_002814_hash gluebi_write 3 27905 _002814_hash NULL
+_002815_hash hdlc_irq_one 2 3944 _002815_hash NULL
+_002819_hash iser_rcv_completion 2 8048 _002819_hash NULL
+_002820_hash lock_loop 1 61681 _002820_hash NULL
+_002821_hash process_rcvd_data 3 6679 _002821_hash NULL
+_002822_hash brcmf_sdbrcm_bus_txctl 3 42492 _002822_hash NULL
+_002823_hash carl9170_rx 3 13272 _002823_hash NULL
+_002824_hash carl9170_rx_stream 3 1334 _002824_hash NULL
+_002826_hash mpt_lan_receive_post_turbo 2 13592 _002826_hash NULL
+_002827_hash padzero 1 55 _002827_hash &_002251_hash
+_002828_hash scsi_mode_sense 5 16835 _002828_hash NULL
+_002829_hash scsi_vpd_inquiry 4 30040 _002829_hash NULL
+_002830_hash ses_recv_diag 4 47143 _002830_hash &_000679_hash
+_002831_hash ses_send_diag 4 64527 _002831_hash NULL
+_002832_hash tcp_push_one 2 48816 _002832_hash NULL
+_002833_hash __tcp_push_pending_frames 2 48148 _002833_hash NULL
+_002834_hash trim_bitmaps 3 24158 _002834_hash NULL
+_002835_hash tun_recvmsg 4 48463 _002835_hash NULL
+_002836_hash ubifs_leb_change 4 17789 _002836_hash NULL
+_002837_hash ubifs_leb_write 4-5 22679 _002837_hash NULL
+_002839_hash xfs_buf_readahead_map 3 44248 _002839_hash &_000851_hash
+_002840_hash xfs_trans_read_buf_map 5 37487 _002840_hash NULL
+_002841_hash xlog_do_recover 3 59789 _002841_hash NULL
+_002842_hash btrfs_trim_block_group 3 28963 _002842_hash NULL
+_002843_hash do_write_orph_node 2 64343 _002843_hash NULL
+_002844_hash fix_unclean_leb 3 23188 _002844_hash NULL
+_002845_hash fixup_leb 3 43256 _002845_hash NULL
+_002846_hash recover_head 3 17904 _002846_hash NULL
+_002847_hash scsi_get_vpd_page 4 51951 _002847_hash NULL
+_002848_hash sd_do_mode_sense 5 11507 _002848_hash NULL
+_002849_hash tcp_push 3 10680 _002849_hash NULL
+_002850_hash ubifs_wbuf_write_nolock 3 64946 _002850_hash NULL
+_002851_hash ubifs_write_node 3-5 11258 _002851_hash NULL
+_002852_hash ubifs_recover_leb 3 60639 _002852_hash NULL
+_002853_hash write_head 4 30481 _002853_hash NULL
+_002854_hash write_node 4 33121 _002854_hash NULL
+_002855_hash ubifs_recover_log_leb 3 12079 _002855_hash NULL
+_002856_hash replay_log_leb 3 18704 _002856_hash NULL
+_002857_hash alloc_cpu_rmap 1 65363 _002857_hash NULL
+_002858_hash alloc_ebda_hpc 1-2 50046 _002858_hash NULL
+_002860_hash alloc_sched_domains 1 28972 _002860_hash NULL
+_002861_hash amthi_read 4 45831 _002861_hash NULL
+_002862_hash bcm_char_read 3 31750 _002862_hash NULL
+_002863_hash BcmCopySection 5 2035 _002863_hash NULL
+_002864_hash buffer_from_user 3 51826 _002864_hash NULL
+_002865_hash buffer_to_user 3 35439 _002865_hash NULL
+_002866_hash card_send_command 3 40757 _002866_hash NULL
+_002867_hash chd_dec_fetch_cdata 3 50926 _002867_hash NULL
+_002868_hash copy_nodes_to_user 2 63807 _002868_hash NULL
+_002869_hash create_log 2 8225 _002869_hash NULL
+_002870_hash crystalhd_create_dio_pool 2 3427 _002870_hash NULL
+_002871_hash crystalhd_user_data 3 18407 _002871_hash NULL
+_002872_hash do_pages_stat 2 4437 _002872_hash NULL
+_002873_hash do_read_log_to_user 4 3236 _002873_hash NULL
+_002874_hash do_write_log_from_user 3 39362 _002874_hash NULL
+_002875_hash evm_read_key 3 54674 _002875_hash NULL
+_002876_hash evm_write_key 3 27715 _002876_hash NULL
+_002877_hash fir16_create 3 5574 _002877_hash NULL
+_002878_hash get_nodes 3 39012 _002878_hash NULL
+_002879_hash __iio_allocate_kfifo 2-3 55738 _002879_hash NULL
+_002881_hash __iio_allocate_sw_ring_buffer 3 4843 _002881_hash NULL
+_002882_hash iio_debugfs_read_reg 3 60908 _002882_hash NULL
+_002883_hash iio_debugfs_write_reg 3 22742 _002883_hash NULL
+_002884_hash iio_device_alloc 1 41440 _002884_hash NULL
+_002885_hash iio_event_chrdev_read 3 54757 _002885_hash NULL
+_002886_hash iio_read_first_n_kfifo 2 57910 _002886_hash NULL
+_002887_hash iio_read_first_n_sw_rb 2 51911 _002887_hash NULL
+_002888_hash ioapic_setup_resources 1 35255 _002888_hash NULL
+_002889_hash keymap_store 4 45406 _002889_hash NULL
+_002890_hash line6_alloc_sysex_buffer 4 28225 _002890_hash NULL
+_002891_hash line6_dumpreq_initbuf 3 53123 _002891_hash NULL
+_002892_hash line6_midibuf_init 2 52425 _002892_hash NULL
+_002893_hash _malloc 1 54077 _002893_hash NULL
+_002894_hash mei_read 3 6507 _002894_hash NULL
+_002895_hash mei_write 3 4005 _002895_hash NULL
+_002896_hash msg_set 3 51725 _002896_hash NULL
+_002897_hash newpart 6 47485 _002897_hash NULL
+_002898_hash OS_kmalloc 1 36909 _002898_hash NULL
+_002899_hash OS_mem_token_alloc 1 14276 _002899_hash NULL
+_002900_hash packet_came 3 18072 _002900_hash NULL
+_002901_hash pcpu_alloc_bootmem 2 62074 _002901_hash NULL
+_002902_hash pcpu_build_alloc_info 1-3-2 41443 _002902_hash NULL
+_002905_hash pcpu_get_vm_areas 3 50085 _002905_hash NULL
+_002906_hash resource_from_user 3 30341 _002906_hash NULL
+_002907_hash rtsx_read_cfg_seq 3-5 48139 _002907_hash NULL
+_002909_hash rtsx_write_cfg_seq 3-5 27485 _002909_hash NULL
+_002911_hash sca3000_read_data 4 57064 _002911_hash NULL
+_002912_hash sca3000_read_first_n_hw_rb 2 11479 _002912_hash NULL
+_002913_hash send_midi_async 3 57463 _002913_hash NULL
+_002914_hash sep_create_dcb_dmatables_context 6 37551 _002914_hash NULL
+_002915_hash sep_create_dcb_dmatables_context_kernel 6 49728 _002915_hash NULL
+_002916_hash sep_create_msgarea_context 4 33829 _002916_hash NULL
+_002917_hash sep_lli_table_secure_dma 2-3 64042 _002917_hash NULL
+_002919_hash sep_lock_user_pages 2-3 57470 _002919_hash &_002488_hash
+_002921_hash sep_prepare_input_output_dma_table_in_dcb 4-5-2-3 63087 _002921_hash NULL
+_002923_hash sep_read 3 17161 _002923_hash NULL
+_002924_hash TransmitTcb 4 12989 _002924_hash NULL
+_002925_hash ValidateDSDParamsChecksum 3 63654 _002925_hash NULL
+_002926_hash Wb35Reg_BurstWrite 4 62327 _002926_hash NULL
+_002927_hash alloc_irq_cpu_rmap 1 28459 _002927_hash NULL
+_002928_hash InterfaceTransmitPacket 3 42058 _002928_hash NULL
+_002929_hash line6_dumpreq_init 3 34473 _002929_hash NULL
+_002931_hash pcpu_embed_first_chunk 1-3-2 24224 _002931_hash NULL
+_002933_hash pcpu_fc_alloc 2 11818 _002933_hash NULL
+_002934_hash pcpu_page_first_chunk 1 20712 _002934_hash NULL
+_002935_hash pod_alloc_sysex_buffer 3 31651 _002935_hash NULL
+_002936_hash r8712_usbctrl_vendorreq 6 48489 _002936_hash NULL
+_002937_hash r871x_set_wpa_ie 3 7000 _002937_hash NULL
+_002938_hash sep_prepare_input_dma_table 2-3 2009 _002938_hash NULL
+_002940_hash sep_prepare_input_output_dma_table 2-4-3 63429 _002940_hash NULL
+_002943_hash sys_get_mempolicy 3 30379 _002943_hash NULL
+_002944_hash sys_mbind 5 7990 _002944_hash NULL
+_002945_hash sys_migrate_pages 2 39825 _002945_hash NULL
+_002946_hash sys_move_pages 2 42626 _002946_hash NULL
+_002947_hash sys_set_mempolicy 3 32608 _002947_hash NULL
+_002948_hash variax_alloc_sysex_buffer 3 15237 _002948_hash NULL
+_002949_hash vme_user_read 3 55338 _002949_hash NULL
+_002950_hash vme_user_write 3 15587 _002950_hash NULL
+_002954_hash variax_set_raw2 4 32374 _002954_hash NULL
+_002955_hash copy_in_user 3 57502 _002955_hash NULL
+_002956_hash __earlyonly_bootmem_alloc 2 23824 _002956_hash NULL
+_002957_hash rfc4106_set_key 3 54519 _002957_hash NULL
+_002958_hash sparse_early_usemaps_alloc_pgdat_section 2 62304 _002958_hash NULL
+_002959_hash sparse_early_usemaps_alloc_node 4 9269 _002959_hash NULL
+_002960_hash sparse_mem_maps_populate_node 4 12669 _002960_hash &_002242_hash
+_002961_hash vmemmap_alloc_block 1 43245 _002961_hash NULL
+_002962_hash sparse_early_mem_maps_alloc_node 4 36971 _002962_hash NULL
+_002963_hash vmemmap_alloc_block_buf 1 61126 _002963_hash NULL
+_002964_hash alloc_mr 1 45935 _002964_hash NULL
+_002965_hash atomic_counters_read 3 48827 _002965_hash NULL
+_002966_hash atomic_stats_read 3 36228 _002966_hash NULL
+_002967_hash capabilities_read 3 58457 _002967_hash NULL
+_002968_hash compat_core_sys_select 1 65285 _002968_hash NULL
+_002969_hash compat_dccp_setsockopt 5 51263 _002969_hash NULL
+_002970_hash compat_do_arpt_set_ctl 4 12184 _002970_hash NULL
+_002971_hash compat_do_ip6t_set_ctl 4 3184 _002971_hash NULL
+_002972_hash compat_do_ipt_set_ctl 4 58466 _002972_hash &_002078_hash
+_002973_hash compat_filldir 3 32999 _002973_hash NULL
+_002974_hash compat_filldir64 3 35354 _002974_hash NULL
+_002975_hash compat_fillonedir 3 15620 _002975_hash NULL
+_002976_hash compat_ip_setsockopt 5 13870 _003094_hash NULL nohasharray
+_002977_hash compat_ipv6_setsockopt 5 20468 _002977_hash NULL
+_002978_hash compat_mpctl_ioctl 2 45671 _002978_hash NULL
+_002979_hash compat_raw_setsockopt 5 30634 _002979_hash NULL
+_002980_hash compat_rawv6_setsockopt 5 4967 _002980_hash NULL
+_002981_hash compat_rw_copy_check_uvector 3 22001 _003263_hash NULL nohasharray
+_002982_hash compat_sock_setsockopt 5 23 _002982_hash NULL
+_002983_hash compat_sys_get_mempolicy 3 31109 _002983_hash NULL
+_002984_hash compat_sys_kexec_load 2 35674 _002984_hash NULL
+_002985_hash compat_sys_keyctl 4 9639 _002985_hash NULL
+_002986_hash compat_sys_mbind 5 36256 _002986_hash NULL
+_002987_hash compat_sys_migrate_pages 2 3157 _002987_hash NULL
+_002988_hash compat_sys_move_pages 2 5861 _002988_hash NULL
+_002989_hash compat_sys_mq_timedsend 3 31060 _002989_hash NULL
+_002990_hash compat_sys_msgrcv 2 7482 _002990_hash NULL
+_002991_hash compat_sys_msgsnd 2 10738 _002991_hash NULL
+_002992_hash compat_sys_semtimedop 3 3606 _002992_hash NULL
+_002993_hash compat_sys_set_mempolicy 3 57742 _002993_hash &_002614_hash
+_002994_hash __copy_in_user 3 34790 _002994_hash NULL
+_002995_hash dev_counters_read 3 19216 _002995_hash NULL
+_002996_hash dev_names_read 3 38509 _002996_hash NULL
+_002997_hash driver_names_read 3 60399 _002997_hash NULL
+_002998_hash driver_stats_read 3 8944 _002998_hash NULL
+_002999_hash evdev_ioctl_compat 2 13851 _002999_hash NULL
+_003000_hash evtchn_read 3 3569 _003000_hash NULL
+_003001_hash evtchn_write 3 43278 _003001_hash NULL
+_003002_hash fat_compat_ioctl_filldir 3 36328 _003002_hash NULL
+_003003_hash flash_read 3 57843 _003003_hash NULL
+_003004_hash flash_write 3 62354 _003004_hash NULL
+_003005_hash fw_device_op_compat_ioctl 2 42804 _003005_hash NULL
+_003006_hash gather_array 3 56641 _003006_hash NULL
+_003007_hash ghash_async_setkey 3 60001 _003007_hash NULL
+_003008_hash gntdev_alloc_map 2 35145 _003008_hash NULL
+_003009_hash gnttab_map 2 56439 _003009_hash NULL
+_003010_hash gru_alloc_gts 2-3 60056 _003010_hash &_000981_hash
+_003012_hash hiddev_compat_ioctl 2 41255 _003012_hash NULL
+_003013_hash init_cdev 1 8274 _003013_hash NULL
+_003014_hash init_per_cpu 1 17880 _003014_hash NULL
+_003015_hash ipath_create_cq 2 45586 _003015_hash NULL
+_003016_hash ipath_get_base_info 3 7043 _003016_hash NULL
+_003017_hash ipath_init_qp_table 2 25167 _003017_hash NULL
+_003018_hash ipath_resize_cq 2 712 _003018_hash NULL
+_003019_hash joydev_compat_ioctl 2 8765 _003019_hash NULL
+_003020_hash mon_bin_compat_ioctl 3 50234 _003020_hash NULL
+_003021_hash options_write 3 47243 _003021_hash NULL
+_003022_hash portcntrs_1_read 3 47253 _003022_hash NULL
+_003023_hash portcntrs_2_read 3 56586 _003023_hash NULL
+_003024_hash portnames_read 3 41958 _003024_hash NULL
+_003025_hash ptc_proc_write 3 12076 _003025_hash NULL
+_003026_hash put_cmsg_compat 4 35937 _003026_hash NULL
+_003027_hash qib_alloc_devdata 2 51819 _003027_hash NULL
+_003028_hash qib_alloc_fast_reg_page_list 2 10507 _003028_hash NULL
+_003029_hash qib_cdev_init 1 34778 _003029_hash NULL
+_003030_hash qib_create_cq 2 27497 _003030_hash NULL
+_003031_hash qib_diag_write 3 62133 _003031_hash NULL
+_003032_hash qib_get_base_info 3 11369 _003032_hash NULL
+_003033_hash qib_resize_cq 2 53090 _003033_hash NULL
+_003034_hash qsfp_1_read 3 21915 _003034_hash NULL
+_003035_hash qsfp_2_read 3 31491 _003035_hash NULL
+_003036_hash queue_reply 3 22416 _003036_hash NULL
+_003037_hash spidev_compat_ioctl 2 63778 _003037_hash NULL
+_003038_hash split 2 11691 _003038_hash NULL
+_003039_hash stats_read_ul 3 32751 _003039_hash NULL
+_003040_hash sys32_ipc 3 7238 _003040_hash NULL
+_003041_hash sys32_rt_sigpending 2 25814 _003041_hash NULL
+_003042_hash tunables_read 3 36385 _003042_hash NULL
+_003043_hash tunables_write 3 59563 _003043_hash NULL
+_003044_hash xenbus_file_write 3 6282 _003044_hash NULL
+_003045_hash xlbd_reserve_minors 1-2 18365 _003045_hash NULL
+_003047_hash xpc_kmalloc_cacheline_aligned 1 42895 _003047_hash NULL
+_003048_hash xpc_kzalloc_cacheline_aligned 1 65433 _003048_hash NULL
+_003049_hash xsd_read 3 15653 _003049_hash NULL
+_003050_hash compat_do_readv_writev 4 49102 _003050_hash NULL
+_003051_hash compat_keyctl_instantiate_key_iov 3 57431 _003088_hash NULL nohasharray
+_003052_hash compat_process_vm_rw 3-5 22254 _003052_hash NULL
+_003054_hash compat_sys_select 1 16131 _003054_hash NULL
+_003055_hash compat_sys_setsockopt 5 3326 _003055_hash NULL
+_003056_hash compat_udp_setsockopt 5 38840 _003056_hash NULL
+_003057_hash compat_udpv6_setsockopt 5 42981 _003057_hash NULL
+_003058_hash do_compat_pselect 1 10398 _003058_hash NULL
+_003059_hash gnttab_expand 1 15817 _003059_hash NULL
+_003060_hash ipath_cdev_init 1 37752 _003060_hash NULL
+_003061_hash ipath_reg_phys_mr 3 23918 _003061_hash &_000999_hash
+_003062_hash qib_alloc_fast_reg_mr 2 12526 _003062_hash NULL
+_003063_hash qib_reg_phys_mr 3 60202 _003063_hash &_000897_hash
+_003064_hash compat_readv 3 30273 _003064_hash NULL
+_003065_hash compat_sys_process_vm_readv 3-5 15374 _003065_hash NULL
+_003067_hash compat_sys_process_vm_writev 3-5 41194 _003067_hash NULL
+_003069_hash compat_sys_pselect6 1 14105 _003069_hash NULL
+_003070_hash compat_writev 3 60063 _003070_hash NULL
+_003071_hash get_free_entries 1 46030 _003071_hash NULL
+_003072_hash compat_sys_preadv64 3 24283 _003072_hash NULL
+_003073_hash compat_sys_pwritev64 3 51151 _003073_hash NULL
+_003074_hash compat_sys_readv 3 20911 _003074_hash NULL
+_003075_hash compat_sys_writev 3 5784 _003075_hash NULL
+_003076_hash gnttab_alloc_grant_references 1 18240 _003076_hash NULL
+_003077_hash compat_sys_preadv 3 583 _003077_hash NULL
+_003078_hash compat_sys_pwritev 3 17886 _003078_hash NULL
+_003079_hash aes_decrypt_fail_read 3 54815 _003079_hash NULL
+_003080_hash aes_decrypt_interrupt_read 3 19910 _003080_hash NULL
+_003081_hash aes_decrypt_packets_read 3 10155 _003081_hash NULL
+_003082_hash aes_encrypt_fail_read 3 32562 _003082_hash NULL
+_003083_hash aes_encrypt_interrupt_read 3 39919 _003083_hash NULL
+_003084_hash aes_encrypt_packets_read 3 48666 _003084_hash NULL
+_003085_hash agp_remap 2 30665 _003085_hash NULL
+_003086_hash alloc_apertures 1 56561 _003086_hash NULL
+_003087_hash allocate_probes 1 40204 _003087_hash NULL
+_003088_hash alloc_ftrace_hash 1 57431 _003088_hash &_003051_hash
+_003089_hash alloc_page_cgroup 1 2919 _003089_hash NULL
+_003090_hash __alloc_preds 2 9492 _003090_hash NULL
+_003091_hash __alloc_pred_stack 2 26687 _003091_hash NULL
+_003092_hash alloc_sched_domains 1 47756 _003092_hash NULL
+_003093_hash alloc_trace_probe 6 38720 _003093_hash NULL
+_003094_hash alloc_trace_uprobe 3 13870 _003094_hash &_002976_hash
+_003095_hash ath6kl_sdio_alloc_prep_scat_req 2 51986 _003095_hash NULL
+_003096_hash ath6kl_usb_post_recv_transfers 2 32892 _003096_hash NULL
+_003097_hash ath6kl_usb_submit_ctrl_in 6 32880 _003097_hash &_000795_hash
+_003098_hash ath6kl_usb_submit_ctrl_out 6 9978 _003098_hash NULL
+_003099_hash av7110_ipack_init 2 46655 _003099_hash NULL
+_003100_hash av7110_vbi_write 3 34384 _003100_hash NULL
+_003101_hash bin_uuid 3 28999 _003101_hash NULL
+_003102_hash blk_dropped_read 3 4168 _003102_hash NULL
+_003103_hash blk_msg_write 3 13655 _003103_hash NULL
+_003104_hash brcmf_usbdev_qinit 2 19090 _003104_hash &_001715_hash
+_003105_hash brcmf_usb_dl_cmd 4 53130 _003105_hash NULL
+_003106_hash ci_ll_init 3 12930 _003106_hash NULL
+_003107_hash ci_ll_write 4 3740 _003107_hash NULL
+_003108_hash conf_read 3 55786 _003108_hash NULL
+_003109_hash __copy_from_user_inatomic_nocache 3 49921 _003109_hash NULL
+_003110_hash cx24116_writeregN 4 41975 _003110_hash NULL
+_003111_hash cyttsp_probe 4 1940 _003111_hash NULL
+_003112_hash dccpprobe_read 3 52549 _003112_hash NULL
+_003113_hash ddb_input_read 3 9743 _003113_hash NULL
+_003114_hash ddb_output_write 3 31902 _003114_hash NULL
+_003115_hash __devres_alloc 2 25598 _003115_hash NULL
+_003116_hash dma_rx_errors_read 3 52045 _003116_hash NULL
+_003117_hash dma_rx_requested_read 3 65354 _003117_hash NULL
+_003118_hash dma_tx_errors_read 3 46060 _003118_hash NULL
+_003119_hash dma_tx_requested_read 3 16110 _003203_hash NULL nohasharray
+_003120_hash do_dmabuf_dirty_sou 7 3017 _003120_hash NULL
+_003121_hash do_surface_dirty_sou 7 39678 _003121_hash NULL
+_003122_hash driver_state_read 3 17194 _003122_hash &_001511_hash
+_003123_hash drm_agp_bind_pages 3 56748 _003123_hash NULL
+_003124_hash drm_buffer_alloc 2 44405 _003124_hash NULL
+_003125_hash drm_calloc_large 1-2 65421 _003125_hash NULL
+_003127_hash drm_fb_helper_init 3-4 19044 _003127_hash NULL
+_003129_hash drm_ht_create 2 18853 _003129_hash NULL
+_003130_hash drm_ioctl 2 42813 _003130_hash NULL
+_003131_hash drm_malloc_ab 1-2 16831 _003131_hash NULL
+_003133_hash drm_mode_crtc_set_gamma_size 2 31881 _003133_hash NULL
+_003134_hash drm_plane_init 6 28731 _003134_hash NULL
+_003135_hash drm_property_create 4 51239 _003135_hash NULL
+_003136_hash drm_property_create_blob 2 7414 _003136_hash NULL
+_003137_hash drm_vblank_init 2 11362 _003137_hash NULL
+_003138_hash drm_vmalloc_dma 1 14550 _003138_hash NULL
+_003139_hash dvb_aplay 3 56296 _003139_hash NULL
+_003140_hash dvb_ca_en50221_init 4 45718 _003140_hash NULL
+_003141_hash dvb_ca_en50221_io_write 3 43533 _003141_hash NULL
+_003142_hash dvb_dmxdev_set_buffer_size 2 55643 _003142_hash NULL
+_003143_hash dvbdmx_write 3 19423 _003143_hash NULL
+_003144_hash dvb_dvr_set_buffer_size 2 9840 _003144_hash NULL
+_003145_hash dvb_net_sec 3 37884 _003145_hash NULL
+_003146_hash dvb_play 3 50814 _003146_hash NULL
+_003147_hash dvb_ringbuffer_pkt_read_user 2-5-3 4303 _003147_hash NULL
+_003150_hash dvb_ringbuffer_read_user 3 56702 _003150_hash NULL
+_003151_hash dvb_usercopy 2 14036 _003151_hash NULL
+_003152_hash dw210x_op_rw 6 39915 _003152_hash NULL
+_003153_hash edt_ft5x06_debugfs_raw_data_read 3 28002 _003153_hash NULL
+_003154_hash em_canid_change 3 14150 _003154_hash NULL
+_003155_hash event_calibration_read 3 21083 _003155_hash NULL
+_003156_hash event_enable_read 3 7074 _003156_hash NULL
+_003157_hash event_filter_read 3 23494 _003157_hash NULL
+_003158_hash event_filter_write 3 56609 _003158_hash NULL
+_003159_hash event_heart_beat_read 3 48961 _003159_hash NULL
+_003160_hash event_id_read 3 64288 _003160_hash &_001300_hash
+_003161_hash event_oom_late_read 3 61175 _003161_hash &_001054_hash
+_003162_hash event_phy_transmit_error_read 3 10471 _003162_hash NULL
+_003163_hash event_rx_mem_empty_read 3 40363 _003163_hash NULL
+_003164_hash event_rx_mismatch_read 3 38518 _003164_hash NULL
+_003165_hash event_rx_pool_read 3 25792 _003165_hash NULL
+_003166_hash event_tx_stuck_read 3 19305 _003166_hash NULL
+_003167_hash excessive_retries_read 3 60425 _003167_hash NULL
+_003168_hash flexcop_device_kmalloc 1 54793 _003168_hash NULL
+_003169_hash fm_send_cmd 5 39639 _003169_hash NULL
+_003170_hash __fprog_create 2 41263 _003170_hash NULL
+_003171_hash fq_codel_zalloc 1 15378 _003171_hash NULL
+_003172_hash ftrace_pid_write 3 39710 _003172_hash NULL
+_003173_hash ftrace_profile_read 3 21327 _003173_hash NULL
+_003174_hash fw_stats_raw_read 3 1369 _003174_hash NULL
+_003175_hash get_info 3 55681 _003175_hash NULL
+_003176_hash __get_vm_area_node 1 55305 _003176_hash NULL
+_003177_hash gpio_power_read 3 36059 _003177_hash NULL
+_003178_hash h5_prepare_pkt 4 12085 _003178_hash NULL
+_003179_hash hsc_msg_alloc 1 60990 _003179_hash NULL
+_003180_hash hsc_write 3 55875 _003180_hash NULL
+_003181_hash hsi_alloc_controller 1 41802 _003181_hash NULL
+_003182_hash hsi_register_board_info 2 13820 _003182_hash NULL
+_003183_hash hugetlb_cgroup_read 5 49259 _003183_hash NULL
+_003184_hash i915_cache_sharing_read 3 24775 _003184_hash NULL
+_003185_hash i915_cache_sharing_write 3 57961 _003185_hash NULL
+_003186_hash i915_max_freq_read 3 20581 _003186_hash NULL
+_003187_hash i915_max_freq_write 3 11350 _003187_hash NULL
+_003188_hash i915_min_freq_read 3 38470 _003188_hash NULL
+_003189_hash i915_min_freq_write 3 10981 _003189_hash NULL
+_003190_hash i915_ring_stop_read 3 42549 _003190_hash &_000740_hash
+_003191_hash i915_ring_stop_write 3 59010 _003191_hash NULL
+_003192_hash i915_wedged_read 3 35474 _003192_hash NULL
+_003193_hash i915_wedged_write 3 47771 _003193_hash NULL
+_003194_hash ieee802154_alloc_device 1 13767 _003194_hash NULL
+_003195_hash intel_sdvo_write_cmd 4 54377 _003195_hash &_000832_hash
+_003196_hash isr_cmd_cmplt_read 3 53439 _003196_hash NULL
+_003197_hash isr_commands_read 3 41398 _003197_hash NULL
+_003198_hash isr_decrypt_done_read 3 49490 _003198_hash NULL
+_003199_hash isr_dma0_done_read 3 8574 _003199_hash NULL
+_003200_hash isr_dma1_done_read 3 48159 _003200_hash NULL
+_003201_hash isr_fiqs_read 3 34687 _003201_hash NULL
+_003202_hash isr_host_acknowledges_read 3 54136 _003202_hash NULL
+_003203_hash isr_hw_pm_mode_changes_read 3 16110 _003203_hash &_003119_hash
+_003204_hash isr_irqs_read 3 9181 _003204_hash NULL
+_003205_hash isr_low_rssi_read 3 64789 _003205_hash NULL
+_003206_hash isr_pci_pm_read 3 30271 _003206_hash NULL
+_003207_hash isr_rx_headers_read 3 38325 _003207_hash NULL
+_003208_hash isr_rx_mem_overflow_read 3 43025 _003208_hash NULL
+_003209_hash isr_rx_procs_read 3 31804 _003209_hash NULL
+_003210_hash isr_rx_rdys_read 3 35283 _003210_hash NULL
+_003211_hash isr_tx_exch_complete_read 3 16103 _003211_hash NULL
+_003212_hash isr_tx_procs_read 3 23084 _003212_hash NULL
+_003213_hash isr_wakeups_read 3 49607 _003213_hash NULL
+_003214_hash LoadBitmap 2 19658 _003214_hash NULL
+_003215_hash mem_cgroup_read 5 22461 _003215_hash NULL
+_003216_hash mic_calc_failure_read 3 59700 _003216_hash NULL
+_003217_hash mic_rx_pkts_read 3 27972 _003217_hash NULL
+_003218_hash __module_alloc 1 50004 _003218_hash NULL
+_003219_hash module_alloc_update_bounds_rw 1 63233 _003219_hash NULL
+_003220_hash module_alloc_update_bounds_rx 1 58634 _003220_hash NULL
+_003221_hash mwifiex_usb_submit_rx_urb 2 54558 _003221_hash NULL
+_003222_hash nfc_hci_hcp_message_tx 6 14534 _003222_hash NULL
+_003223_hash nfc_hci_set_param 5 40697 _003223_hash NULL
+_003224_hash nfc_shdlc_alloc_skb 2 12741 _003224_hash NULL
+_003225_hash opera1_xilinx_rw 5 31453 _003225_hash NULL
+_003226_hash persistent_ram_vmap 1-2 709 _003226_hash NULL
+_003228_hash prctl_set_mm 3 64538 _003228_hash NULL
+_003229_hash probe_kernel_write 3 17481 _003229_hash NULL
+_003230_hash proc_fault_inject_read 3 36802 _003230_hash NULL
+_003231_hash proc_fault_inject_write 3 21058 _003231_hash NULL
+_003232_hash ps_pspoll_max_apturn_read 3 6699 _003232_hash NULL
+_003233_hash ps_pspoll_timeouts_read 3 11776 _003233_hash NULL
+_003234_hash ps_pspoll_utilization_read 3 5361 _003234_hash NULL
+_003235_hash ps_upsd_max_apturn_read 3 19918 _003235_hash NULL
+_003236_hash ps_upsd_max_sptime_read 3 63362 _003236_hash NULL
+_003237_hash ps_upsd_timeouts_read 3 28924 _003237_hash NULL
+_003238_hash ps_upsd_utilization_read 3 51669 _003238_hash NULL
+_003239_hash ptp_filter_init 2 36780 _003239_hash NULL
+_003240_hash pwr_disable_ps_read 3 13176 _003240_hash NULL
+_003241_hash pwr_elp_enter_read 3 5324 _003241_hash NULL
+_003242_hash pwr_enable_ps_read 3 17686 _003242_hash NULL
+_003243_hash pwr_fix_tsf_ps_read 3 26627 _003243_hash NULL
+_003244_hash pwr_missing_bcns_read 3 25824 _003244_hash NULL
+_003245_hash pwr_power_save_off_read 3 18355 _003245_hash NULL
+_003246_hash pwr_ps_enter_read 3 26935 _003246_hash &_000512_hash
+_003247_hash pwr_rcvd_awake_beacons_read 3 50505 _003247_hash NULL
+_003248_hash pwr_rcvd_beacons_read 3 52836 _003248_hash NULL
+_003249_hash pwr_tx_without_ps_read 3 48423 _003249_hash NULL
+_003250_hash pwr_tx_with_ps_read 3 60851 _003250_hash NULL
+_003251_hash pwr_wake_on_host_read 3 26321 _003251_hash NULL
+_003252_hash pwr_wake_on_timer_exp_read 3 22640 _003252_hash NULL
+_003253_hash rb_simple_read 3 45972 _003253_hash NULL
+_003254_hash read_file_dfs 3 43145 _003254_hash NULL
+_003255_hash retry_count_read 3 52129 _003255_hash NULL
+_003256_hash rx_dropped_read 3 44799 _003256_hash NULL
+_003257_hash rx_fcs_err_read 3 62844 _003257_hash NULL
+_003258_hash rx_hdr_overflow_read 3 64407 _003258_hash NULL
+_003259_hash rx_hw_stuck_read 3 57179 _003259_hash NULL
+_003260_hash rx_out_of_mem_read 3 10157 _003260_hash NULL
+_003261_hash rx_path_reset_read 3 23801 _003261_hash NULL
+_003262_hash rxpipe_beacon_buffer_thres_host_int_trig_rx_data_read 3 55106 _003262_hash NULL
+_003263_hash rxpipe_descr_host_int_trig_rx_data_read 3 22001 _003263_hash &_002981_hash
+_003264_hash rxpipe_missed_beacon_host_int_trig_rx_data_read 3 63405 _003264_hash NULL
+_003265_hash rxpipe_rx_prep_beacon_drop_read 3 2403 _003265_hash NULL
+_003266_hash rxpipe_tx_xfr_host_int_trig_rx_data_read 3 35538 _003266_hash NULL
+_003267_hash rx_reset_counter_read 3 58001 _003267_hash NULL
+_003268_hash rx_xfr_hint_trig_read 3 40283 _003268_hash NULL
+_003269_hash saa7146_vmalloc_build_pgtable 2 19780 _003269_hash NULL
+_003270_hash sched_feat_write 3 55202 _003270_hash NULL
+_003271_hash sd_alloc_ctl_entry 1 29708 _003271_hash NULL
+_003272_hash shmem_pread_fast 3 34147 _003272_hash NULL
+_003273_hash shmem_pread_slow 3 3198 _003273_hash NULL
+_003274_hash shmem_pwrite_slow 3 31741 _003274_hash NULL
+_003275_hash show_header 3 4722 _003275_hash &_000745_hash
+_003276_hash stack_max_size_read 3 1445 _003276_hash NULL
+_003277_hash subsystem_filter_read 3 62310 _003277_hash NULL
+_003278_hash subsystem_filter_write 3 13022 _003278_hash NULL
+_003279_hash swap_cgroup_swapon 2 13614 _003279_hash NULL
+_003280_hash system_enable_read 3 25815 _003280_hash NULL
+_003281_hash tda10048_writeregbulk 4 11050 _003281_hash NULL
+_003282_hash tlbflush_read_file 3 64661 _003282_hash NULL
+_003283_hash trace_options_core_read 3 47390 _003283_hash NULL
+_003284_hash trace_options_read 3 11419 _003284_hash NULL
+_003285_hash trace_parser_get_init 2 31379 _003285_hash NULL
+_003286_hash traceprobe_probes_write 3 64969 _003286_hash NULL
+_003287_hash trace_seq_to_user 3 65398 _003287_hash NULL
+_003288_hash tracing_buffers_read 3 11124 _003288_hash NULL
+_003289_hash tracing_clock_write 3 27961 _003289_hash NULL
+_003290_hash tracing_cpumask_read 3 7010 _003290_hash NULL
+_003291_hash tracing_ctrl_read 3 46922 _003291_hash NULL
+_003292_hash tracing_entries_read 3 8345 _003292_hash NULL
+_003293_hash tracing_max_lat_read 3 8890 _003293_hash NULL
+_003294_hash tracing_read_dyn_info 3 45468 _003294_hash NULL
+_003295_hash tracing_readme_read 3 16493 _003295_hash NULL
+_003296_hash tracing_saved_cmdlines_read 3 21434 _003296_hash NULL
+_003297_hash tracing_set_trace_read 3 44122 _003297_hash NULL
+_003298_hash tracing_set_trace_write 3 57096 _003298_hash NULL
+_003299_hash tracing_stats_read 3 34537 _003299_hash NULL
+_003300_hash tracing_total_entries_read 3 62817 _003300_hash NULL
+_003301_hash tracing_trace_options_write 3 153 _003301_hash NULL
+_003302_hash tstats_write 3 60432 _003302_hash &_000009_hash
+_003303_hash ttm_bo_fbdev_io 4 9805 _003303_hash NULL
+_003304_hash ttm_bo_io 5 47000 _003304_hash NULL
+_003305_hash ttm_dma_page_pool_free 2 34135 _003305_hash NULL
+_003306_hash ttm_page_pool_free 2 61661 _003306_hash NULL
+_003307_hash ttusb2_msg 4 3100 _003307_hash NULL
+_003308_hash tx_internal_desc_overflow_read 3 47300 _003308_hash NULL
+_003309_hash tx_queue_len_read 3 1463 _003309_hash NULL
+_003310_hash tx_queue_status_read 3 44978 _003310_hash NULL
+_003311_hash u_memcpya 2-3 30139 _003311_hash NULL
+_003313_hash usb_allocate_stream_buffers 3 8964 _003313_hash NULL
+_003314_hash vifs_state_read 3 33762 _003314_hash NULL
+_003315_hash vmalloc_to_sg 2 58354 _003315_hash NULL
+_003316_hash vm_map_ram 2 23078 _003316_hash &_001095_hash
+_003317_hash vmw_execbuf_process 5 22885 _003317_hash NULL
+_003318_hash vmw_fifo_reserve 2 12141 _003318_hash NULL
+_003319_hash vmw_kms_present 9 38130 _003319_hash NULL
+_003320_hash vmw_kms_readback 6 5727 _003320_hash NULL
+_003321_hash wep_addr_key_count_read 3 20174 _003321_hash NULL
+_003322_hash wep_decrypt_fail_read 3 58567 _003322_hash NULL
+_003323_hash wep_default_key_count_read 3 43035 _003323_hash NULL
+_003324_hash wep_interrupt_read 3 41492 _003324_hash NULL
+_003325_hash wep_key_not_found_read 3 13377 _003325_hash &_000952_hash
+_003326_hash wep_packets_read 3 18751 _003326_hash NULL
+_003327_hash wl1251_cmd_template_set 4 6172 _003327_hash NULL
+_003328_hash wl1271_format_buffer 2 20834 _003328_hash NULL
+_003329_hash wl1271_rx_filter_alloc_field 5 46721 _003329_hash NULL
+_003330_hash wl12xx_cmd_build_probe_req 6-8 54946 _003330_hash NULL
+_003332_hash wlcore_alloc_hw 1 7785 _003332_hash NULL
+_003333_hash aggr_size_rx_size_read 3 33526 _003333_hash NULL
+_003334_hash aggr_size_tx_agg_vs_rate_read 3 21438 _003334_hash NULL
+_003335_hash alloc_and_copy_ftrace_hash 1 29368 _003335_hash NULL
+_003336_hash alloc_bulk_urbs_generic 5 12127 _003336_hash NULL
+_003337_hash alloc_ieee80211 1 20063 _003337_hash NULL
+_003338_hash alloc_ieee80211_rsl 1 34564 _003338_hash NULL
+_003339_hash alloc_perm_bits 2 1532 _003339_hash NULL
+_003340_hash alloc_private 2 22399 _003340_hash NULL
+_003341_hash alloc_rtllib 1 51136 _003341_hash NULL
+_003342_hash alloc_rx_desc_ring 2 18016 _003342_hash NULL
+_003343_hash arcfb_write 3 8702 _003343_hash NULL
+_003344_hash ath6kl_usb_bmi_read 3 48745 _003344_hash NULL
+_003345_hash ath6kl_usb_bmi_write 3 2454 _003345_hash &_001020_hash
+_003346_hash ath6kl_usb_ctrl_msg_exchange 4 33327 _003346_hash NULL
+_003347_hash au0828_init_isoc 2-3 61917 _003347_hash NULL
+_003349_hash auok190xfb_write 3 37001 _003349_hash NULL
+_003350_hash beacon_interval_read 3 7091 _003350_hash NULL
+_003351_hash brcmf_usb_attach 1-2 44656 _003351_hash NULL
+_003353_hash broadsheetfb_write 3 39976 _003353_hash NULL
+_003354_hash broadsheet_spiflash_rewrite_sector 2 54864 _003354_hash NULL
+_003355_hash ci13xxx_add_device 3 14456 _003355_hash NULL
+_003356_hash cmpk_message_handle_tx 4 54024 _003356_hash NULL
+_003357_hash comedi_alloc_subdevices 2 29207 _003357_hash NULL
+_003358_hash comedi_buf_alloc 3 24822 _003358_hash NULL
+_003359_hash comedi_read 3 13199 _003359_hash NULL
+_003360_hash comedi_write 3 47926 _003360_hash NULL
+_003361_hash create_trace_probe 1 20175 _003361_hash NULL
+_003362_hash create_trace_uprobe 1 13184 _003362_hash NULL
+_003363_hash cx18_copy_buf_to_user 4 22735 _003363_hash NULL
+_003364_hash cx231xx_init_bulk 2-3 47024 _003364_hash NULL
+_003366_hash cx231xx_init_isoc 2-3 56453 _003366_hash NULL
+_003368_hash cx231xx_init_vbi_isoc 2-3 28053 _003368_hash NULL
+_003370_hash da9052_group_write 3 4534 _003370_hash NULL
+_003371_hash debug_debug1_read 3 8856 _003371_hash NULL
+_003372_hash debug_debug2_read 3 30526 _003372_hash NULL
+_003373_hash debug_debug3_read 3 56894 _003373_hash NULL
+_003374_hash debug_debug4_read 3 61367 _003374_hash NULL
+_003375_hash debug_debug5_read 3 2291 _003375_hash NULL
+_003376_hash debug_debug6_read 3 33168 _003376_hash NULL
+_003377_hash dev_read 3 56369 _003377_hash NULL
+_003378_hash do_dmabuf_dirty_ldu 6 52241 _003378_hash NULL
+_003379_hash drm_compat_ioctl 2 51717 _003379_hash NULL
+_003380_hash drm_mode_create_tv_properties 2 23122 _003380_hash NULL
+_003381_hash drm_property_create_bitmask 5 30195 _003381_hash NULL
+_003382_hash drm_property_create_enum 5 29201 _003382_hash NULL
+_003383_hash dsp_buffer_alloc 2 11684 _003383_hash NULL
+_003384_hash dt3155_alloc_coherent 2 58073 _003384_hash NULL
+_003385_hash dtim_interval_read 3 654 _003385_hash NULL
+_003386_hash dvb_audio_write 3 51275 _003386_hash NULL
+_003387_hash dvb_ca_en50221_io_ioctl 2 26490 _003387_hash NULL
+_003388_hash dvb_ca_write 3 41171 _003388_hash NULL
+_003389_hash dvb_demux_ioctl 2 42733 _003389_hash NULL
+_003390_hash dvb_dmxdev_buffer_read 4 20682 _003390_hash NULL
+_003391_hash dvb_dvr_ioctl 2 49182 _003391_hash NULL
+_003392_hash dvb_generic_ioctl 2 21810 _003392_hash NULL
+_003393_hash dvb_net_ioctl 2 61559 _003393_hash NULL
+_003394_hash dvb_net_sec_callback 2 28786 _003394_hash NULL
+_003396_hash dvb_video_write 3 754 _003396_hash NULL
+_003397_hash dynamic_ps_timeout_read 3 10110 _003397_hash NULL
+_003398_hash easycap_alsa_vmalloc 2 14426 _003398_hash NULL
+_003399_hash em28xx_alloc_isoc 4 46892 _003399_hash NULL
+_003400_hash error_error_bar_retry_read 3 64305 _003400_hash NULL
+_003401_hash error_error_frame_cts_nul_flid_read 3 17262 _003401_hash NULL
+_003402_hash error_error_frame_read 3 39947 _003402_hash &_002436_hash
+_003403_hash error_error_null_Frame_tx_start_read 3 55024 _003403_hash NULL
+_003404_hash error_error_numll_frame_cts_start_read 3 47781 _003404_hash NULL
+_003405_hash ext_sd_execute_read_data 9 48589 _003405_hash NULL
+_003406_hash ext_sd_execute_write_data 9 8175 _003406_hash NULL
+_003407_hash fast_user_write 5 20494 _003407_hash NULL
+_003408_hash f_audio_buffer_alloc 1 41110 _003408_hash NULL
+_003409_hash fb_alloc_cmap_gfp 2 20792 _003409_hash NULL
+_003410_hash fbcon_do_set_font 2-3 4079 _003410_hash NULL
+_003412_hash fb_read 3 33506 _003412_hash NULL
+_003413_hash fb_sys_read 3 13778 _003413_hash NULL
+_003414_hash fb_sys_write 3 33130 _003414_hash NULL
+_003415_hash fb_write 3 46924 _003415_hash NULL
+_003416_hash firmwareUpload 3 32794 _003416_hash NULL
+_003417_hash fmc_send_cmd 5 20435 _003417_hash NULL
+_003418_hash fops_read 3 40672 _003418_hash NULL
+_003419_hash forced_ps_read 3 31685 _003419_hash NULL
+_003420_hash frame_alloc 4 15981 _003420_hash NULL
+_003421_hash framebuffer_alloc 1 59145 _003421_hash NULL
+_003422_hash ftrace_write 3 29551 _003422_hash NULL
+_003423_hash fw_download_code 3 13249 _003423_hash NULL
+_003424_hash fwSendNullPacket 2 54618 _003424_hash NULL
+_003425_hash gdm_wimax_netif_rx 3 43423 _003425_hash &_001810_hash
+_003426_hash get_vm_area 1 18080 _003426_hash NULL
+_003427_hash __get_vm_area 1 61599 _003427_hash NULL
+_003428_hash get_vm_area_caller 1 10527 _003428_hash NULL
+_003429_hash __get_vm_area_caller 1 56416 _003828_hash NULL nohasharray
+_003430_hash gspca_dev_probe2 4 59833 _003430_hash NULL
+_003431_hash hdpvr_read 3 9273 _003431_hash NULL
+_003432_hash hecubafb_write 3 26942 _003432_hash NULL
+_003433_hash i915_compat_ioctl 2 3656 _003433_hash NULL
+_003434_hash i915_gem_execbuffer_relocate_slow 7 25355 _003434_hash NULL
+_003435_hash ieee80211_alloc_txb 1-2 52477 _003435_hash NULL
+_003437_hash ieee80211_authentication_req 3 63973 _003437_hash NULL
+_003438_hash ieee80211_wx_set_gen_ie 3 51399 _003438_hash NULL
+_003439_hash ieee80211_wx_set_gen_ie_rsl 3 3521 _003458_hash NULL nohasharray
+_003440_hash intel_sdvo_set_value 4 2311 _003440_hash NULL
+_003441_hash ir_lirc_transmit_ir 3 64403 _003441_hash NULL
+_003442_hash irq_blk_threshold_read 3 33666 _003442_hash NULL
+_003443_hash irq_pkt_threshold_read 3 33356 _003443_hash &_000154_hash
+_003444_hash irq_timeout_read 3 54653 _003444_hash NULL
+_003445_hash ivtv_buf_copy_from_user 4 25502 _003445_hash NULL
+_003446_hash ivtv_copy_buf_to_user 4 6159 _003446_hash NULL
+_003447_hash ivtvfb_write 3 40023 _003447_hash NULL
+_003448_hash kgdb_hex2mem 3 24755 _003448_hash NULL
+_003449_hash lirc_buffer_init 2-3 53282 _003449_hash NULL
+_003451_hash lirc_write 3 20604 _003451_hash NULL
+_003452_hash mce_request_packet 3 1073 _003452_hash NULL
+_003453_hash media_entity_init 2-4 15870 _003453_hash &_001742_hash
+_003455_hash mem_fw_gen_free_mem_blks_read 3 11413 _003455_hash NULL
+_003456_hash mem_fwlog_free_mem_blks_read 3 59616 _003456_hash NULL
+_003457_hash mem_rx_free_mem_blks_read 3 675 _003457_hash NULL
+_003458_hash mem_tx_free_mem_blks_read 3 3521 _003458_hash &_003439_hash
+_003459_hash metronomefb_write 3 8823 _003459_hash NULL
+_003460_hash mga_compat_ioctl 2 52170 _003460_hash NULL
+_003461_hash mmio_read 4 40348 _003461_hash NULL
+_003462_hash netlink_send 5 38434 _003462_hash NULL
+_003463_hash nfc_hci_execute_cmd 5 43882 _003463_hash NULL
+_003464_hash nfc_hci_send_event 5 21452 _003464_hash NULL
+_003465_hash nfc_hci_send_response 5 56462 _003465_hash NULL
+_003466_hash ni_gpct_device_construct 5 610 _003466_hash NULL
+_003467_hash nouveau_compat_ioctl 2 28305 _003467_hash NULL
+_003468_hash odev_update 2 50169 _003468_hash NULL
+_003469_hash opera1_usb_i2c_msgxfer 4 64521 _003469_hash NULL
+_003470_hash OSDSetBlock 2-4 38986 _003470_hash NULL
+_003472_hash oz_add_farewell 5 20652 _003472_hash NULL
+_003473_hash oz_cdev_read 3 20659 _003473_hash NULL
+_003474_hash oz_cdev_write 3 33852 _003474_hash NULL
+_003475_hash oz_ep_alloc 2 5587 _003475_hash NULL
+_003476_hash oz_events_read 3 47535 _003476_hash NULL
+_003477_hash persistent_ram_buffer_map 1-2 11332 _003477_hash NULL
+_003479_hash pipeline_cs_rx_packet_in_read 3 37089 _003479_hash NULL
+_003480_hash pipeline_cs_rx_packet_out_read 3 58926 _003480_hash NULL
+_003481_hash pipeline_csum_to_rx_xfer_swi_read 3 15403 _003481_hash NULL
+_003482_hash pipeline_dec_packet_in_fifo_full_read 3 33052 _003482_hash NULL
+_003483_hash pipeline_dec_packet_in_read 3 47076 _003483_hash NULL
+_003484_hash pipeline_dec_packet_out_read 3 54052 _003484_hash NULL
+_003485_hash pipeline_defrag_to_csum_swi_read 3 63037 _003485_hash NULL
+_003486_hash pipeline_enc_rx_stat_fifo_int_read 3 7107 _003486_hash NULL
+_003487_hash pipeline_enc_tx_stat_fifo_int_read 3 14680 _003487_hash NULL
+_003488_hash pipeline_hs_tx_stat_fifo_int_read 3 15642 _003488_hash &_001260_hash
+_003489_hash pipeline_pipeline_fifo_full_read 3 34095 _003489_hash NULL
+_003490_hash pipeline_post_proc_swi_read 3 24108 _003490_hash NULL
+_003491_hash pipeline_pre_proc_swi_read 3 3898 _003491_hash NULL
+_003492_hash pipeline_pre_to_defrag_swi_read 3 56321 _003492_hash NULL
+_003493_hash pipeline_rx_complete_stat_fifo_int_read 3 40671 _003493_hash NULL
+_003494_hash pipeline_sec_frag_swi_read 3 30294 _003494_hash NULL
+_003495_hash pipeline_tcp_rx_stat_fifo_int_read 3 26745 _003495_hash NULL
+_003496_hash pipeline_tcp_tx_stat_fifo_int_read 3 32589 _003496_hash NULL
+_003497_hash play_iframe 3 8219 _003497_hash NULL
+_003498_hash probes_write 3 29711 _003498_hash NULL
+_003499_hash psb_unlocked_ioctl 2 16926 _003499_hash &_002668_hash
+_003500_hash ps_poll_ps_poll_max_ap_turn_read 3 53140 _003500_hash NULL
+_003501_hash ps_poll_ps_poll_timeouts_read 3 5934 _003501_hash NULL
+_003502_hash ps_poll_ps_poll_utilization_read 3 39383 _003502_hash NULL
+_003503_hash ps_poll_upsd_max_ap_turn_read 3 42050 _003503_hash NULL
+_003504_hash ps_poll_upsd_timeouts_read 3 36755 _003504_hash NULL
+_003505_hash ps_poll_upsd_utilization_read 3 28519 _003505_hash NULL
+_003506_hash pvr2_ioread_read 3 10720 _003506_hash &_001669_hash
+_003507_hash pvr2_ioread_set_sync_key 3 59882 _003507_hash NULL
+_003508_hash pvr2_stream_buffer_count 2 33719 _003508_hash NULL
+_003509_hash pwr_connection_out_of_sync_read 3 35061 _003509_hash NULL
+_003510_hash pwr_cont_miss_bcns_spread_read 3 39250 _003515_hash NULL nohasharray
+_003511_hash pwr_missing_bcns_cnt_read 3 45113 _003511_hash NULL
+_003512_hash pwr_rcvd_awake_bcns_cnt_read 3 12632 _003512_hash NULL
+_003513_hash pwr_rcvd_bcns_cnt_read 3 4774 _003513_hash NULL
+_003514_hash qc_capture 3 19298 _003514_hash NULL
+_003515_hash r128_compat_ioctl 2 39250 _003515_hash &_003510_hash
+_003516_hash radeon_compat_ioctl 2 59150 _003516_hash NULL
+_003517_hash radeon_kms_compat_ioctl 2 51371 _003517_hash NULL
+_003518_hash Realloc 2 34961 _003518_hash NULL
+_003519_hash redrat3_transmit_ir 3 64244 _003519_hash NULL
+_003520_hash reg_w_buf 3 27724 _003520_hash NULL
+_003521_hash reg_w_ixbuf 4 34736 _003521_hash NULL
+_003522_hash rtllib_alloc_txb 1-2 21687 _003522_hash NULL
+_003524_hash rtllib_authentication_req 3 26713 _003524_hash NULL
+_003525_hash rtllib_wx_set_gen_ie 3 59808 _003525_hash NULL
+_003526_hash rts51x_transfer_data_partial 6 5735 _003526_hash NULL
+_003527_hash rvmalloc 1 46873 _003527_hash NULL
+_003528_hash rx_decrypt_key_not_found_read 3 37820 _003528_hash NULL
+_003529_hash rx_defrag_called_read 3 1897 _003529_hash NULL
+_003530_hash rx_defrag_decrypt_failed_read 3 41411 _003530_hash NULL
+_003531_hash rx_defrag_init_called_read 3 35935 _003531_hash NULL
+_003532_hash rx_defrag_in_process_called_read 3 59338 _003532_hash NULL
+_003533_hash rx_defrag_need_decrypt_read 3 42253 _003533_hash NULL
+_003534_hash rx_defrag_need_defrag_read 3 28117 _003534_hash NULL
+_003535_hash rx_defrag_tkip_called_read 3 21031 _003535_hash NULL
+_003536_hash rx_filter_accum_arp_pend_requests_read 3 11003 _003536_hash NULL
+_003537_hash rx_filter_arp_filter_read 3 61914 _003537_hash NULL
+_003538_hash rx_filter_beacon_filter_read 3 49279 _003538_hash NULL
+_003539_hash rx_filter_data_filter_read 3 30098 _003539_hash NULL
+_003540_hash rx_filter_dup_filter_read 3 37238 _003540_hash NULL
+_003541_hash rx_filter_ibss_filter_read 3 50167 _003541_hash NULL
+_003542_hash rx_filter_max_arp_queue_dep_read 3 5851 _003542_hash NULL
+_003543_hash rx_filter_mc_filter_read 3 25712 _003543_hash NULL
+_003544_hash rx_filter_protection_filter_read 3 39282 _003544_hash NULL
+_003545_hash rx_rate_rx_frames_per_rates_read 3 7282 _003545_hash NULL
+_003546_hash rx_rx_beacon_early_term_read 3 21559 _003546_hash NULL
+_003547_hash rx_rx_checksum_result_read 3 50617 _003547_hash NULL
+_003548_hash rx_rx_cmplt_read 3 14753 _003548_hash NULL
+_003549_hash rx_rx_cmplt_task_read 3 35226 _003549_hash NULL
+_003550_hash rx_rx_defrag_end_read 3 505 _003550_hash NULL
+_003551_hash rx_rx_defrag_read 3 2010 _003551_hash NULL
+_003552_hash rx_rx_done_read 3 65217 _003552_hash NULL
+_003553_hash rx_rx_dropped_frame_read 3 23748 _003553_hash NULL
+_003554_hash rx_rx_frame_checksum_read 3 40140 _003554_hash NULL
+_003555_hash rx_rx_hdr_overflow_read 3 35002 _003555_hash NULL
+_003556_hash rx_rx_out_of_mpdu_nodes_read 3 64668 _003556_hash NULL
+_003557_hash rx_rx_phy_hdr_read 3 20950 _003557_hash NULL
+_003558_hash rx_rx_pre_complt_read 3 41653 _003558_hash NULL
+_003559_hash rx_rx_timeout_read 3 62389 _003559_hash NULL
+_003560_hash rx_rx_timeout_wa_read 3 50204 _003560_hash NULL
+_003561_hash rx_rx_tkip_replays_read 3 60193 _003561_hash NULL
+_003562_hash rx_rx_wa_ba_not_expected_read 3 61341 _003562_hash NULL
+_003563_hash rx_rx_wa_density_dropped_frame_read 3 26095 _003563_hash NULL
+_003564_hash rx_streaming_always_read 3 49401 _003564_hash NULL
+_003565_hash rx_streaming_interval_read 3 55291 _003565_hash NULL
+_003566_hash saa7164_buffer_alloc_user 2 9627 _003566_hash NULL
+_003567_hash send_control_msg 6 48498 _003567_hash NULL
+_003568_hash SendTxCommandPacket 3 42901 _003568_hash NULL
+_003569_hash setup_window 2-7-5-4 59178 _003569_hash NULL
+_003573_hash shmem_pwrite_fast 3 46842 _003573_hash NULL
+_003574_hash sleep_auth_read 3 19159 _003574_hash NULL
+_003575_hash sn9c102_read 3 29305 _003575_hash NULL
+_003576_hash snd_pcm_alloc_vmalloc_buffer 2 44595 _003576_hash NULL
+_003577_hash split_scan_timeout_read 3 20029 _003577_hash NULL
+_003578_hash stk_prepare_sio_buffers 2 57168 _003578_hash NULL
+_003579_hash store_debug_level 3 35652 _003579_hash NULL
+_003580_hash suspend_dtim_interval_read 3 64971 _003580_hash NULL
+_003581_hash sys_prctl 4 8766 _003581_hash NULL
+_003582_hash tm6000_read_write_usb 7 50774 _003582_hash &_002149_hash
+_003583_hash tracing_read_pipe 3 35312 _003583_hash NULL
+_003584_hash ts_read 3 44687 _003584_hash NULL
+_003585_hash ts_write 3 64336 _003585_hash NULL
+_003586_hash tt3650_ci_msg 4 57219 _003586_hash NULL
+_003587_hash ttm_object_device_init 2 10321 _003587_hash NULL
+_003588_hash ttm_object_file_init 2 27804 _003588_hash NULL
+_003589_hash tx_frag_bad_mblk_num_read 3 28064 _003589_hash NULL
+_003590_hash tx_frag_cache_hit_read 3 29639 _003590_hash NULL
+_003591_hash tx_frag_cache_miss_read 3 28394 _003591_hash NULL
+_003592_hash tx_frag_called_read 3 1748 _003592_hash NULL
+_003593_hash tx_frag_failed_read 3 43540 _003593_hash NULL
+_003594_hash tx_frag_init_called_read 3 48377 _003594_hash NULL
+_003595_hash tx_frag_in_process_called_read 3 1290 _003595_hash NULL
+_003596_hash tx_frag_key_not_found_read 3 22971 _003596_hash NULL
+_003597_hash tx_frag_mpdu_alloc_failed_read 3 41167 _003597_hash NULL
+_003598_hash tx_frag_need_fragmentation_read 3 50153 _003598_hash NULL
+_003599_hash tx_frag_tkip_called_read 3 31575 _003599_hash NULL
+_003600_hash tx_tx_burst_programmed_read 3 20320 _003600_hash NULL
+_003601_hash tx_tx_checksum_result_read 3 36490 _003601_hash &_001996_hash
+_003602_hash tx_tx_cmplt_read 3 35854 _003602_hash NULL
+_003603_hash tx_tx_data_prepared_read 3 43497 _003603_hash NULL
+_003604_hash tx_tx_data_programmed_read 3 36871 _003604_hash NULL
+_003605_hash tx_tx_done_data_read 3 6799 _003605_hash NULL
+_003606_hash tx_tx_done_int_template_read 3 55511 _003606_hash &_001887_hash
+_003607_hash tx_tx_done_template_read 3 35104 _003607_hash &_000106_hash
+_003608_hash tx_tx_exch_expiry_read 3 8749 _003608_hash NULL
+_003609_hash tx_tx_exch_pending_read 3 53018 _003609_hash NULL
+_003610_hash tx_tx_exch_read 3 52986 _003610_hash NULL
+_003611_hash tx_tx_frame_checksum_read 3 41553 _003611_hash NULL
+_003612_hash tx_tx_imm_resp_read 3 55964 _003612_hash NULL
+_003613_hash tx_tx_prepared_descs_read 3 9221 _003613_hash NULL
+_003614_hash tx_tx_retry_data_read 3 1926 _003614_hash NULL
+_003615_hash tx_tx_retry_template_read 3 57623 _003615_hash NULL
+_003616_hash tx_tx_start_data_read 3 53219 _003616_hash NULL
+_003617_hash tx_tx_start_fw_gen_read 3 58648 _003617_hash NULL
+_003618_hash tx_tx_start_int_templates_read 3 58324 _003618_hash NULL
+_003619_hash tx_tx_start_null_frame_read 3 6281 _003619_hash NULL
+_003620_hash tx_tx_starts_read 3 3617 _003620_hash NULL
+_003621_hash tx_tx_start_templates_read 3 17164 _003621_hash NULL
+_003622_hash tx_tx_template_prepared_read 3 30424 _003622_hash NULL
+_003623_hash tx_tx_template_programmed_read 3 30461 _003623_hash NULL
+_003624_hash udi_log_event 3 58105 _003624_hash NULL
+_003625_hash udl_prime_create 2 57159 _003625_hash NULL
+_003626_hash uf_create_device_nodes 2 24948 _003626_hash NULL
+_003627_hash uf_sme_queue_message 3 15697 _003627_hash NULL
+_003628_hash ufx_alloc_urb_list 3 10349 _003628_hash NULL
+_003629_hash unifi_net_data_malloc 3 24716 _003629_hash NULL
+_003630_hash unifi_read 3 14899 _003630_hash NULL
+_003631_hash unifi_write 3 65012 _003631_hash NULL
+_003632_hash usb_buffer_alloc 2 36276 _003632_hash NULL
+_003633_hash usbvision_rvmalloc 1 19655 _003633_hash NULL
+_003634_hash usbvision_v4l2_read 3 34386 _003634_hash NULL
+_003635_hash uvc_alloc_buffers 2-3 9656 _003635_hash NULL
+_003637_hash uvc_alloc_entity 3-4 20836 _003637_hash NULL
+_003639_hash uvc_debugfs_stats_read 3 56651 _003639_hash NULL
+_003640_hash uvc_simplify_fraction 3 31303 _003640_hash NULL
+_003641_hash v4l2_ctrl_new 7 24927 _003641_hash NULL
+_003642_hash v4l2_event_subscribe 3 53687 _003642_hash NULL
+_003643_hash v4l_stk_read 3 39672 _003643_hash NULL
+_003644_hash __vb2_perform_fileio 3 63033 _003644_hash NULL
+_003645_hash vfd_write 3 14717 _003645_hash NULL
+_003646_hash vfio_config_do_rw 3 46091 _003646_hash NULL
+_003647_hash vfio_msi_enable 2 20906 _003647_hash NULL
+_003648_hash viafb_dvp0_proc_write 3 23023 _003648_hash NULL
+_003649_hash viafb_dvp1_proc_write 3 48864 _003649_hash NULL
+_003650_hash viafb_vt1636_proc_write 3 16018 _003650_hash NULL
+_003651_hash __videobuf_alloc_vb 1 27062 _003651_hash NULL
+_003652_hash __videobuf_alloc_vb 1 5665 _003652_hash NULL
+_003653_hash __videobuf_copy_to_user 4 15423 _003653_hash NULL
+_003654_hash videobuf_dma_init_kernel 3 6963 _003654_hash NULL
+_003655_hash videobuf_pages_to_sg 2 3708 _003655_hash NULL
+_003656_hash videobuf_vmalloc_to_sg 2 4548 _003656_hash NULL
+_003657_hash video_usercopy 2 62151 _003657_hash NULL
+_003658_hash virtscsi_alloc_tgt 2 6643 _003658_hash NULL
+_003659_hash vmw_cursor_update_image 3-4 16332 _003659_hash NULL
+_003661_hash vmw_framebuffer_dmabuf_dirty 6 37661 _003661_hash &_001116_hash
+_003662_hash vmw_framebuffer_surface_dirty 6 48132 _003662_hash NULL
+_003663_hash vmw_gmr2_bind 3 21305 _003663_hash NULL
+_003664_hash vmw_unlocked_ioctl 2 19212 _003664_hash NULL
+_003665_hash w9966_v4l_read 3 31148 _003665_hash NULL
+_003666_hash wl1273_fm_fops_write 3 60621 _003666_hash NULL
+_003667_hash zoran_write 3 22404 _003667_hash NULL
+_003668_hash alloc_vm_area 1 15989 _003668_hash NULL
+_003669_hash cx18_copy_mdl_to_user 4 45549 _003669_hash NULL
+_003670_hash dlfb_ops_write 3 64150 _003670_hash NULL
+_003671_hash dvb_demux_read 3 13981 _003671_hash NULL
+_003672_hash dvb_dmxdev_read_sec 4 7892 _003672_hash NULL
+_003673_hash dvb_dvr_read 3 17073 _003673_hash NULL
+_003674_hash em28xx_init_isoc 4 62883 _003674_hash &_000729_hash
+_003675_hash fb_alloc_cmap 2 6554 _003675_hash NULL
+_003676_hash gspca_dev_probe 4 2570 _003676_hash NULL
+_003677_hash ieee80211_auth_challenge 3 18810 _003677_hash NULL
+_003678_hash ieee80211_rtl_auth_challenge 3 61897 _003678_hash NULL
+_003679_hash init_pci_cap_msi_perm 2 59033 _003679_hash NULL
+_003680_hash __ioremap_caller 1-2 21800 _003680_hash NULL
+_003682_hash ivtv_read 3 57796 _003682_hash NULL
+_003683_hash ivtv_v4l2_write 3 39226 _003683_hash NULL
+_003684_hash mce_async_out 3 58056 _003684_hash NULL
+_003685_hash mce_flush_rx_buffer 2 14976 _003685_hash NULL
+_003686_hash ms_read_multiple_pages 4-5 8052 _003686_hash NULL
+_003688_hash ms_write_multiple_pages 5-6 10362 _003688_hash NULL
+_003690_hash nfc_hci_send_cmd 5 55714 _003690_hash NULL
+_003691_hash persistent_ram_new 1-2 40501 _003691_hash NULL
+_003693_hash picolcd_fb_write 3 2318 _003693_hash NULL
+_003694_hash process_bulk_data_command 4 38906 _003694_hash NULL
+_003695_hash pvr2_v4l2_read 3 18006 _003695_hash NULL
+_003696_hash qcam_read 3 13977 _003696_hash NULL
+_003697_hash register_unifi_sdio 2 55239 _003697_hash NULL
+_003698_hash resize_async_buffer 4 64031 _003698_hash &_002431_hash
+_003699_hash rtllib_auth_challenge 3 12493 _003699_hash NULL
+_003702_hash stk_allocate_buffers 2 16291 _003702_hash NULL
+_003703_hash subdev_ioctl 2 28417 _003703_hash NULL
+_003704_hash _sys_packet_req 4 46793 _003704_hash NULL
+_003705_hash tm6000_i2c_recv_regs16 5 2949 _003705_hash NULL
+_003706_hash tm6000_i2c_recv_regs 5 46215 _003706_hash NULL
+_003707_hash tm6000_i2c_send_regs 5 20250 _003707_hash NULL
+_003708_hash tt3650_ci_msg_locked 4 8013 _003708_hash NULL
+_003709_hash ufx_ops_write 3 54848 _003709_hash NULL
+_003710_hash update_macheader 7 1775 _003710_hash NULL
+_003711_hash usbdux_attach_common 4 51764 _003750_hash NULL nohasharray
+_003712_hash usbduxfast_attach_common 4 52538 _003712_hash NULL
+_003713_hash usbduxsigma_attach_common 4 40847 _003713_hash NULL
+_003714_hash uvc_v4l2_ioctl 2 8411 _003714_hash NULL
+_003715_hash v4l2_ctrl_new_int_menu 4 41151 _003715_hash NULL
+_003716_hash v4l2_ctrl_new_std 5 45748 _003716_hash &_000497_hash
+_003717_hash v4l2_ctrl_new_std_menu 4 6221 _003717_hash NULL
+_003718_hash vb2_read 3 42703 _003718_hash NULL
+_003719_hash vb2_write 3 31948 _003719_hash NULL
+_003720_hash vfio_pci_set_msi_trigger 3-4 26507 _003720_hash NULL
+_003722_hash viafb_iga1_odev_proc_write 3 36241 _003722_hash NULL
+_003723_hash viafb_iga2_odev_proc_write 3 2363 _003723_hash NULL
+_003724_hash __videobuf_alloc_cached 1 12740 _003724_hash NULL
+_003725_hash __videobuf_alloc_uncached 1 55711 _003725_hash NULL
+_003726_hash __videobuf_copy_stream 4 44769 _003726_hash NULL
+_003727_hash videobuf_read_one 3 31637 _003727_hash NULL
+_003728_hash video_ioctl2 2 21380 _003728_hash NULL
+_003729_hash vmap 2 15025 _003729_hash NULL
+_003730_hash vmw_cursor_update_dmabuf 3-4 32045 _003730_hash NULL
+_003732_hash vmw_gmr_bind 3 44130 _003732_hash NULL
+_003733_hash xd_read_multiple_pages 4-5 11422 _003733_hash NULL
+_003735_hash xd_write_multiple_pages 5-6 53633 _003735_hash NULL
+_003737_hash xenfb_write 3 43412 _003737_hash NULL
+_003738_hash arch_gnttab_map_shared 3 41306 _003738_hash NULL
+_003739_hash arch_gnttab_map_status 3 49812 _003739_hash NULL
+_003740_hash bttv_read 3 11432 _003740_hash NULL
+_003741_hash cx18_read 3 23699 _003741_hash NULL
+_003742_hash cx2341x_ctrl_new_menu 3 49700 _003742_hash NULL
+_003743_hash cx2341x_ctrl_new_std 4 57061 _003743_hash NULL
+_003744_hash cx25821_video_ioctl 2 30188 _003744_hash NULL
+_003745_hash dt3155_read 3 59226 _003745_hash NULL
+_003746_hash ioremap_cache 1-2 47189 _003746_hash NULL
+_003748_hash ioremap_nocache 1-2 2439 _003748_hash NULL
+_003750_hash ioremap_prot 1-2 51764 _003750_hash &_003711_hash
+_003752_hash ioremap_wc 1-2 62695 _003752_hash NULL
+_003754_hash ivtv_read_pos 3 34400 _003754_hash &_000312_hash
+_003755_hash mcam_v4l_read 3 36513 _003755_hash NULL
+_003756_hash ms_rw_multi_sector 3-4 7459 _003756_hash NULL
+_003758_hash pvr2_v4l2_ioctl 2 24398 _003758_hash &_000877_hash
+_003759_hash ramoops_init_prz 5 12134 _003759_hash NULL
+_003761_hash ttm_bo_kmap_ttm 3 5922 _003761_hash NULL
+_003762_hash uf_ap_process_data_pdu 7 25860 _003762_hash NULL
+_003763_hash vb2_fop_read 3 24080 _003763_hash NULL
+_003764_hash vb2_fop_write 3 30420 _003764_hash NULL
+_003765_hash videobuf_read_stream 3 14956 _003765_hash NULL
+_003766_hash video_read 3 28148 _003766_hash NULL
+_003767_hash vmw_du_crtc_cursor_set 4-5 28479 _003767_hash NULL
+_003769_hash xd_rw 3-4 49020 _003769_hash NULL
+_003771_hash zoran_ioctl 2 30465 _003771_hash NULL
+_003772_hash zr364xx_read 3 2354 _003772_hash NULL
+_003773_hash acpi_os_ioremap 1-2 49523 _003773_hash NULL
+_003775_hash au0828_v4l2_read 3 40220 _003775_hash NULL
+_003776_hash ca91cx42_alloc_resource 2 10502 _003776_hash NULL
+_003778_hash cx18_read_pos 3 4683 _003778_hash NULL
+_003779_hash cx18_v4l2_read 3 21196 _003779_hash NULL
+_003780_hash cx231xx_v4l2_read 3 55014 _003780_hash NULL
+_003781_hash devm_ioremap_nocache 2-3 2036 _003781_hash NULL
+_003783_hash do_test 1 15766 _003783_hash NULL
+_003784_hash __einj_error_trigger 1 17707 _003784_hash &_001764_hash
+_003785_hash em28xx_v4l2_read 3 16701 _003785_hash NULL
+_003786_hash init_chip_wc_pat 2 62768 _003786_hash NULL
+_003787_hash intel_render_ring_init_dri 2-3 45446 _003787_hash NULL
+_003789_hash io_mapping_create_wc 1-2 1354 _003789_hash NULL
+_003791_hash iommu_map_mmio_space 1 30919 _003791_hash NULL
+_003792_hash ioremap 1-2 23172 _003792_hash NULL
+_003794_hash ivtv_v4l2_read 3 1964 _003794_hash NULL
+_003795_hash mga_ioremap 1-2 8571 _003795_hash NULL
+_003797_hash mpeg_read 3 6708 _003797_hash NULL
+_003798_hash msix_map_region 3 3411 _003798_hash NULL
+_003799_hash ms_rw 3-4 17220 _003799_hash NULL
+_003801_hash pci_iomap 3 47575 _003801_hash NULL
+_003802_hash pd_video_read 3 24510 _003802_hash NULL
+_003803_hash sfi_map_memory 1-2 5183 _003803_hash NULL
+_003805_hash solo_enc_read 3 33553 _003805_hash NULL
+_003806_hash solo_v4l2_read 3 59247 _003806_hash NULL
+_003807_hash timblogiw_read 3 48305 _003807_hash NULL
+_003808_hash tm6000_read 3 4151 _003808_hash NULL
+_003809_hash tsi148_alloc_resource 2 24563 _003809_hash NULL
+_003810_hash ttm_bo_ioremap 2-3 31082 _003810_hash NULL
+_003812_hash ttm_bo_kmap 3-2 60118 _003812_hash NULL
+_003813_hash vb2_vmalloc_get_userptr 3 31374 _003813_hash NULL
+_003814_hash vbi_read 3 63673 _003814_hash NULL
+_003815_hash viacam_read 3 54526 _003815_hash NULL
+_003816_hash xlate_dev_mem_ptr 1 15291 _003816_hash &_001231_hash
+_003817_hash a4t_cs_init 3 27734 _003817_hash NULL
+_003818_hash aac_nark_ioremap 2 50163 _003818_hash &_000323_hash
+_003819_hash aac_rkt_ioremap 2 3333 _003819_hash NULL
+_003820_hash aac_rx_ioremap 2 52410 _003820_hash NULL
+_003821_hash aac_sa_ioremap 2 13596 _003821_hash &_000299_hash
+_003822_hash aac_src_ioremap 2 41688 _003822_hash NULL
+_003823_hash aac_srcv_ioremap 2 6659 _003823_hash NULL
+_003824_hash acpi_map 1-2 58725 _003824_hash NULL
+_003826_hash acpi_os_read_memory 1-3 54186 _003826_hash NULL
+_003828_hash acpi_os_write_memory 1-3 56416 _003828_hash &_003429_hash
+_003830_hash atyfb_setup_generic 3 49151 _003830_hash NULL
+_003831_hash ca91cx42_master_set 4 23146 _003831_hash NULL
+_003832_hash check_mirror 1-2 57342 _003832_hash &_001753_hash
+_003834_hash cycx_setup 4 47562 _003834_hash NULL
+_003835_hash devm_ioremap 2-3 29235 _003835_hash NULL
+_003837_hash divasa_remap_pci_bar 3-4 23485 _003837_hash &_000979_hash
+_003839_hash doc_probe 1 23285 _003839_hash NULL
+_003840_hash DoC_Probe 1 57534 _003840_hash NULL
+_003841_hash efi_ioremap 1-2 3492 _003841_hash &_001137_hash
+_003843_hash ems_pcmcia_add_card 2 62627 _003843_hash NULL
+_003844_hash isp1760_register 1-2 628 _003844_hash NULL
+_003846_hash mid_get_vbt_data_r0 2 10876 _003846_hash NULL
+_003847_hash mid_get_vbt_data_r10 2 6308 _003847_hash NULL
+_003848_hash mid_get_vbt_data_r1 2 26170 _003848_hash NULL
+_003849_hash mthca_map_reg 2-3 5664 _003849_hash NULL
+_003851_hash mthca_setup_cmd_doorbells 2 53954 _003851_hash NULL
+_003852_hash netxen_nic_map_indirect_address_128M 2 42257 _003852_hash NULL
+_003853_hash pcim_iomap 3 58334 _003853_hash NULL
+_003854_hash persistent_ram_iomap 1-2 47156 _003854_hash NULL
+_003856_hash read_vbt_r0 1 503 _003856_hash NULL
+_003857_hash read_vbt_r10 1 60679 _003857_hash NULL
+_003858_hash register_device 2-3 60015 _003858_hash NULL
+_003860_hash remap_pci_mem 1-2 15966 _003860_hash NULL
+_003862_hash rtl_port_map 1-2 2385 _003862_hash NULL
+_003864_hash sfi_map_table 1 5462 _003864_hash NULL
+_003865_hash sriov_enable_migration 2 14889 _003865_hash NULL
+_003866_hash ssb_bus_scan 2 36578 _003866_hash NULL
+_003867_hash ssb_ioremap 2 5228 _003867_hash NULL
+_003868_hash tpci200_slot_map_space 2 3848 _003868_hash NULL
+_003869_hash tpm_tis_init 2-3 15304 _003869_hash NULL
+_003871_hash tsi148_master_set 4 14685 _003871_hash NULL
+_003872_hash acpi_os_map_memory 1-2 11161 _003872_hash NULL
+_003874_hash com90xx_found 3 13974 _003874_hash NULL
+_003875_hash netxen_nic_hw_read_wx_128M 2 26858 _003875_hash NULL
+_003876_hash netxen_nic_hw_write_wx_128M 2 33488 _003876_hash NULL
+_003877_hash sfi_check_table 1 6772 _003877_hash NULL
+_003878_hash sfi_sysfs_install_table 1 51688 _003878_hash NULL
+_003879_hash sriov_enable 2 59689 _003879_hash NULL
+_003880_hash ssb_bus_register 3 65183 _003880_hash NULL
+_003881_hash acpi_ex_system_memory_space_handler 2 31192 _003881_hash NULL
+_003882_hash acpi_tb_check_xsdt 1 21862 _003882_hash NULL
+_003883_hash acpi_tb_install_table 1 12988 _003883_hash NULL
+_003884_hash acpi_tb_parse_root_table 1 53455 _003884_hash NULL
+_003885_hash check_vendor_extension 1 3254 _003885_hash NULL
+_003886_hash pci_enable_sriov 2 35745 _003886_hash NULL
+_003887_hash ssb_bus_pcmciabus_register 3 56020 _003887_hash NULL
+_003888_hash ssb_bus_ssbbus_register 2 2217 _003888_hash NULL
+_003889_hash lpfc_sli_probe_sriov_nr_virtfn 2 26004 _003889_hash NULL
+_003890_hash alloc_vm_area 1 36149 _003890_hash NULL
+_003891_hash cma_create_area 2 38642 _003891_hash NULL
+_003893_hash fbcon_prepare_logo 5 6246 _003893_hash NULL
+_003894_hash io_mapping_map_wc 2 19284 _003894_hash NULL
+_003895_hash nfs_dns_resolve_name 3 25036 _003895_hash NULL
+_003896_hash nfs_parse_server_name 2 1899 _003896_hash NULL
--- tools/gcc/size_overflow_plugin.c	1970-01-01 00:00:00.000000000 +0000
+++ tools/gcc/size_overflow_plugin.c	2012-10-15 17:30:59.835924531 +0000
@@ -0,0 +1,1879 @@
+/*
+ * Copyright 2011, 2012 by Emese Revfy <re.emese@gmail.com>
+ * Licensed under the GPL v2, or (at your option) v3
+ *
+ * Homepage:
+ * http://www.grsecurity.net/~ephox/overflow_plugin/
+ *
+ * This plugin recomputes expressions of function arguments marked by a size_overflow attribute
+ * with double integer precision (DImode/TImode for 32/64 bit integer types).
+ * The recomputed argument is checked against TYPE_MAX and an event is logged on overflow and the triggering process is killed.
+ *
+ * Usage:
+ * $ gcc -I`gcc -print-file-name=plugin`/include/c-family -I`gcc -print-file-name=plugin`/include -fPIC -shared -O2 -ggdb -Wall -W -Wno-missing-field-initializers -o size_overflow_plugin.so size_overflow_plugin.c
+ * $ gcc -fplugin=size_overflow_plugin.so test.c  -O2
+ */
+
+#include "gcc-plugin.h"
+#include "config.h"
+#include "system.h"
+#include "coretypes.h"
+#include "tree.h"
+#include "tree-pass.h"
+#include "intl.h"
+#include "plugin-version.h"
+#include "tm.h"
+#include "toplev.h"
+#include "function.h"
+#include "tree-flow.h"
+#include "plugin.h"
+#include "gimple.h"
+#include "c-common.h"
+#include "diagnostic.h"
+#include "cfgloop.h"
+
+#if BUILDING_GCC_VERSION >= 4007
+#include "c-tree.h"
+#else
+#define C_DECL_IMPLICIT(EXP) DECL_LANG_FLAG_2 (EXP)
+#endif
+
+struct size_overflow_hash {
+	const struct size_overflow_hash * const next;
+	const char * const name;
+	const unsigned int param;
+};
+
+#include "size_overflow_hash.h"
+
+enum marked {
+	MARKED_NO, MARKED_YES, MARKED_NOT_INTENTIONAL
+};
+
+#define __unused __attribute__((__unused__))
+#define NAME(node) IDENTIFIER_POINTER(DECL_NAME(node))
+#define NAME_LEN(node) IDENTIFIER_LENGTH(DECL_NAME(node))
+#define BEFORE_STMT true
+#define AFTER_STMT false
+#define CREATE_NEW_VAR NULL_TREE
+#define CODES_LIMIT 32
+#define MAX_PARAM 32
+#define MY_STMT GF_PLF_1
+#define NO_CAST_CHECK GF_PLF_2
+
+#if BUILDING_GCC_VERSION == 4005
+#define DECL_CHAIN(NODE) (TREE_CHAIN(DECL_MINIMAL_CHECK(NODE)))
+#endif
+
+int plugin_is_GPL_compatible;
+void debug_gimple_stmt(gimple gs);
+
+static tree expand(struct pointer_set_t *visited, tree lhs);
+static bool pre_expand(struct pointer_set_t *visited, const_tree lhs);
+static tree report_size_overflow_decl;
+static const_tree const_char_ptr_type_node;
+static unsigned int handle_function(void);
+static void check_size_overflow(gimple stmt, tree size_overflow_type, tree cast_rhs, tree rhs, bool before);
+static tree get_size_overflow_type(gimple stmt, const_tree node);
+static tree dup_assign(struct pointer_set_t *visited, gimple oldstmt, tree size_overflow_type, tree rhs1, tree rhs2, tree __unused rhs3);
+
+static struct plugin_info size_overflow_plugin_info = {
+	.version	= "20120930beta",
+	.help		= "no-size-overflow\tturn off size overflow checking\n",
+};
+
+static tree handle_size_overflow_attribute(tree *node, tree __unused name, tree args, int __unused flags, bool *no_add_attrs)
+{
+	unsigned int arg_count;
+	enum tree_code code = TREE_CODE(*node);
+
+	switch (code) {
+	case FUNCTION_DECL:
+		arg_count = type_num_arguments(TREE_TYPE(*node));
+		break;
+	case FUNCTION_TYPE:
+	case METHOD_TYPE:
+		arg_count = type_num_arguments(*node);
+		break;
+	default:
+		*no_add_attrs = true;
+		error("%s: %qE attribute only applies to functions", __func__, name);
+		return NULL_TREE;
+	}
+
+	for (; args; args = TREE_CHAIN(args)) {
+		tree position = TREE_VALUE(args);
+		if (TREE_CODE(position) != INTEGER_CST || TREE_INT_CST_HIGH(position) || TREE_INT_CST_LOW(position) < 1 || TREE_INT_CST_LOW(position) > arg_count ) {
+			error("%s: parameter %u is outside range.", __func__, (unsigned int)TREE_INT_CST_LOW(position));
+			*no_add_attrs = true;
+		}
+	}
+	return NULL_TREE;
+}
+
+static const char* get_asm_name(tree node)
+{
+	return IDENTIFIER_POINTER(DECL_ASSEMBLER_NAME(node));
+}
+
+static tree handle_intentional_overflow_attribute(tree *node, tree __unused name, tree args, int __unused flags, bool *no_add_attrs)
+{
+	unsigned int arg_count, arg_num;
+	enum tree_code code = TREE_CODE(*node);
+
+	switch (code) {
+	case FUNCTION_DECL:
+		arg_count = type_num_arguments(TREE_TYPE(*node));
+		break;
+	case FUNCTION_TYPE:
+	case METHOD_TYPE:
+		arg_count = type_num_arguments(*node);
+		break;
+	case FIELD_DECL:
+		arg_num = TREE_INT_CST_LOW(TREE_VALUE(args));
+		if (arg_num != 0) {
+			*no_add_attrs = true;
+			error("%s: %qE attribute parameter can only be 0 in structure fields", __func__, name);
+		}
+		return NULL_TREE;
+	default:
+		*no_add_attrs = true;
+		error("%qE attribute only applies to functions", name);
+		return NULL_TREE;
+	}
+
+	for (; args; args = TREE_CHAIN(args)) {
+		tree position = TREE_VALUE(args);
+		if (TREE_CODE(position) != INTEGER_CST || TREE_INT_CST_HIGH(position) || TREE_INT_CST_LOW(position) > arg_count ) {
+			error("%s: parameter %u is outside range.", __func__, (unsigned int)TREE_INT_CST_LOW(position));
+			*no_add_attrs = true;
+		}
+	}
+	return NULL_TREE;
+}
+
+static struct attribute_spec size_overflow_attr = {
+	.name				= "size_overflow",
+	.min_length			= 1,
+	.max_length			= -1,
+	.decl_required			= true,
+	.type_required			= false,
+	.function_type_required		= false,
+	.handler			= handle_size_overflow_attribute,
+#if BUILDING_GCC_VERSION >= 4007
+	.affects_type_identity		= false
+#endif
+};
+
+static struct attribute_spec intentional_overflow_attr = {
+	.name				= "intentional_overflow",
+	.min_length			= 1,
+	.max_length			= -1,
+	.decl_required			= true,
+	.type_required			= false,
+	.function_type_required		= false,
+	.handler			= handle_intentional_overflow_attribute,
+#if BUILDING_GCC_VERSION >= 4007
+	.affects_type_identity		= false
+#endif
+};
+
+static void register_attributes(void __unused *event_data, void __unused *data)
+{
+	register_attribute(&size_overflow_attr);
+	register_attribute(&intentional_overflow_attr);
+}
+
+// http://www.team5150.com/~andrew/noncryptohashzoo2~/CrapWow.html
+static unsigned int CrapWow(const char *key, unsigned int len, unsigned int seed)
+{
+#define cwfold( a, b, lo, hi ) { p = (unsigned int)(a) * (unsigned long long)(b); lo ^= (unsigned int)p; hi ^= (unsigned int)(p >> 32); }
+#define cwmixa( in ) { cwfold( in, m, k, h ); }
+#define cwmixb( in ) { cwfold( in, n, h, k ); }
+
+	unsigned int m = 0x57559429;
+	unsigned int n = 0x5052acdb;
+	const unsigned int *key4 = (const unsigned int *)key;
+	unsigned int h = len;
+	unsigned int k = len + seed + n;
+	unsigned long long p;
+
+	while (len >= 8) {
+		cwmixb(key4[0]) cwmixa(key4[1]) key4 += 2;
+		len -= 8;
+	}
+	if (len >= 4) {
+		cwmixb(key4[0]) key4 += 1;
+		len -= 4;
+	}
+	if (len)
+		cwmixa(key4[0] & ((1 << (len * 8)) - 1 ));
+	cwmixb(h ^ (k + n));
+	return k ^ h;
+
+#undef cwfold
+#undef cwmixa
+#undef cwmixb
+}
+
+static inline unsigned int get_hash_num(const char *fndecl, const char *tree_codes, unsigned int len, unsigned int seed)
+{
+	unsigned int fn = CrapWow(fndecl, strlen(fndecl), seed) & 0xffff;
+	unsigned int codes = CrapWow(tree_codes, len, seed) & 0xffff;
+	return fn ^ codes;
+}
+
+static inline tree get_original_function_decl(tree fndecl)
+{
+	if (DECL_ABSTRACT_ORIGIN(fndecl))
+		return DECL_ABSTRACT_ORIGIN(fndecl);
+	return fndecl;
+}
+
+static inline gimple get_def_stmt(const_tree node)
+{
+	gcc_assert(node != NULL_TREE);
+	gcc_assert(TREE_CODE(node) == SSA_NAME);
+	return SSA_NAME_DEF_STMT(node);
+}
+
+static unsigned char get_tree_code(const_tree type)
+{
+	switch (TREE_CODE(type)) {
+	case ARRAY_TYPE:
+		return 0;
+	case BOOLEAN_TYPE:
+		return 1;
+	case ENUMERAL_TYPE:
+		return 2;
+	case FUNCTION_TYPE:
+		return 3;
+	case INTEGER_TYPE:
+		return 4;
+	case POINTER_TYPE:
+		return 5;
+	case RECORD_TYPE:
+		return 6;
+	case UNION_TYPE:
+		return 7;
+	case VOID_TYPE:
+		return 8;
+	case REAL_TYPE:
+		return 9;
+	case VECTOR_TYPE:
+		return 10;
+	case REFERENCE_TYPE:
+		return 11;
+	case OFFSET_TYPE:
+		return 12;
+	case COMPLEX_TYPE:
+		return 13;
+	default:
+		debug_tree((tree)type);
+		gcc_unreachable();
+	}
+}
+
+static size_t add_type_codes(const_tree type, unsigned char *tree_codes, size_t len)
+{
+	gcc_assert(type != NULL_TREE);
+
+	while (type && len < CODES_LIMIT) {
+		tree_codes[len] = get_tree_code(type);
+		len++;
+		type = TREE_TYPE(type);
+	}
+	return len;
+}
+
+static unsigned int get_function_decl(const_tree fndecl, unsigned char *tree_codes)
+{
+	const_tree arg, result, arg_field, type = TREE_TYPE(fndecl);
+	enum tree_code code = TREE_CODE(type);
+	size_t len = 0;
+
+	gcc_assert(code == FUNCTION_TYPE || code == METHOD_TYPE);
+
+	arg = TYPE_ARG_TYPES(type);
+	// skip builtins __builtin_constant_p
+	if (!arg && DECL_BUILT_IN(fndecl))
+		return 0;
+
+	if (TREE_CODE_CLASS(code) == tcc_type)
+		result = type;
+	else
+		result = DECL_RESULT(fndecl);
+
+	gcc_assert(result != NULL_TREE);
+	len = add_type_codes(TREE_TYPE(result), tree_codes, len);
+
+	if (arg == NULL_TREE) {
+		gcc_assert(CODE_CONTAINS_STRUCT(TREE_CODE(fndecl), TS_DECL_NON_COMMON));
+		arg_field = DECL_ARGUMENT_FLD(fndecl);
+		if (arg_field == NULL_TREE)
+			return 0;
+		arg = TREE_TYPE(arg_field);
+		len = add_type_codes(arg, tree_codes, len);
+		gcc_assert(len != 0);
+		return len;
+	}
+
+	gcc_assert(arg != NULL_TREE && TREE_CODE(arg) == TREE_LIST);
+	while (arg && len < CODES_LIMIT) {
+		len = add_type_codes(TREE_VALUE(arg), tree_codes, len);
+		arg = TREE_CHAIN(arg);
+	}
+
+	gcc_assert(len != 0);
+	return len;
+}
+
+static const struct size_overflow_hash *get_function_hash(tree fndecl)
+{
+	unsigned int hash;
+	const struct size_overflow_hash *entry;
+	unsigned char tree_codes[CODES_LIMIT];
+	size_t len;
+	const char *func_name = get_asm_name(fndecl);
+
+	len = get_function_decl(fndecl, tree_codes);
+	if (len == 0)
+		return NULL;
+
+	hash = get_hash_num(func_name, (const char*) tree_codes, len, 0);
+
+	entry = size_overflow_hash[hash];
+	while (entry) {
+		if (!strcmp(entry->name, func_name))
+			return entry;
+		entry = entry->next;
+	}
+
+	return NULL;
+}
+
+static void check_arg_type(const_tree arg)
+{
+	const_tree type = TREE_TYPE(arg);
+	enum tree_code code = TREE_CODE(type);
+
+	gcc_assert(code == INTEGER_TYPE || code == ENUMERAL_TYPE ||
+		  (code == POINTER_TYPE && TREE_CODE(TREE_TYPE(type)) == VOID_TYPE) ||
+		  (code == POINTER_TYPE && TREE_CODE(TREE_TYPE(type)) == INTEGER_TYPE));
+}
+
+static int find_arg_number(const_tree arg, tree func)
+{
+	tree var;
+	unsigned int argnum = 1;
+
+	if (TREE_CODE(arg) == SSA_NAME)
+		arg = SSA_NAME_VAR(arg);
+
+	for (var = DECL_ARGUMENTS(func); var; var = TREE_CHAIN(var)) {
+		if (strcmp(NAME(arg), NAME(var))) {
+			argnum++;
+			continue;
+		}
+		check_arg_type(var);
+		return argnum;
+	}
+	gcc_unreachable();
+}
+
+static tree create_new_var(tree type)
+{
+	tree new_var = create_tmp_var(type, "cicus");
+
+	add_referenced_var(new_var);
+	mark_sym_for_renaming(new_var);
+	return new_var;
+}
+
+static gimple create_binary_assign(enum tree_code code, gimple stmt, tree rhs1, tree rhs2)
+{
+	gimple assign;
+	gimple_stmt_iterator gsi = gsi_for_stmt(stmt);
+	tree type = TREE_TYPE(rhs1);
+	tree lhs = create_new_var(type);
+
+	assign = gimple_build_assign_with_ops(code, lhs, rhs1, rhs2);
+	gimple_set_lhs(assign, make_ssa_name(lhs, assign));
+
+	gsi_insert_before(&gsi, assign, GSI_NEW_STMT);
+	update_stmt(assign);
+	gimple_set_plf(assign, MY_STMT, true);
+	return assign;
+}
+
+static bool is_bool(const_tree node)
+{
+	const_tree type;
+
+	if (node == NULL_TREE)
+		return false;
+
+	type = TREE_TYPE(node);
+	if (!INTEGRAL_TYPE_P(type))
+		return false;
+	if (TREE_CODE(type) == BOOLEAN_TYPE)
+		return true;
+	if (TYPE_PRECISION(type) == 1)
+		return true;
+	return false;
+}
+
+static tree cast_a_tree(tree type, tree var)
+{
+	gcc_assert(type != NULL_TREE);
+	gcc_assert(var != NULL_TREE);
+	gcc_assert(fold_convertible_p(type, var));
+
+	return fold_convert(type, var);
+}
+
+static gimple build_cast_stmt(tree dst_type, tree rhs, tree lhs, gimple_stmt_iterator *gsi, bool before)
+{
+	gimple assign;
+
+	gcc_assert(dst_type != NULL_TREE && rhs != NULL_TREE);
+	if (gsi_end_p(*gsi) && before == AFTER_STMT)
+		gcc_unreachable();
+
+	if (lhs == CREATE_NEW_VAR)
+		lhs = create_new_var(dst_type);
+
+	assign = gimple_build_assign(lhs, cast_a_tree(dst_type, rhs));
+
+	if (!gsi_end_p(*gsi)) {
+		location_t loc = gimple_location(gsi_stmt(*gsi));
+		gimple_set_location(assign, loc);
+	}
+
+	gimple_set_lhs(assign, make_ssa_name(lhs, assign));
+
+	if (before)
+		gsi_insert_before(gsi, assign, GSI_NEW_STMT);
+	else
+		gsi_insert_after(gsi, assign, GSI_NEW_STMT);
+	update_stmt(assign);
+	gimple_set_plf(assign, MY_STMT, true);
+
+	return assign;
+}
+
+static tree cast_to_new_size_overflow_type(gimple stmt, tree new_rhs1, tree size_overflow_type, bool before)
+{
+	const_gimple assign;
+	gimple_stmt_iterator gsi;
+
+	if (new_rhs1 == NULL_TREE)
+		return NULL_TREE;
+
+	if (!useless_type_conversion_p(TREE_TYPE(new_rhs1), size_overflow_type)) {
+		gsi = gsi_for_stmt(stmt);
+		assign = build_cast_stmt(size_overflow_type, new_rhs1, CREATE_NEW_VAR, &gsi, before);
+		return gimple_get_lhs(assign);
+	}
+	return new_rhs1;
+}
+
+static tree follow_overflow_type_and_dup(struct pointer_set_t *visited, gimple stmt, const_tree node, tree new_rhs1, tree new_rhs2, tree new_rhs3)
+{
+	tree size_overflow_type = get_size_overflow_type(stmt, node);
+
+	new_rhs1 = cast_to_new_size_overflow_type(stmt, new_rhs1, size_overflow_type, BEFORE_STMT);
+
+	if (new_rhs2 != NULL_TREE)
+		new_rhs2 = cast_to_new_size_overflow_type(stmt, new_rhs2, size_overflow_type, BEFORE_STMT);
+
+	if (new_rhs3 != NULL_TREE)
+		new_rhs3 = cast_to_new_size_overflow_type(stmt, new_rhs3, size_overflow_type, BEFORE_STMT);
+
+	return dup_assign(visited, stmt, size_overflow_type, new_rhs1, new_rhs2, new_rhs3);
+}
+
+
+static tree create_assign(struct pointer_set_t *visited, gimple oldstmt, tree rhs1, bool before)
+{
+	tree size_overflow_type, lhs;
+	gimple stmt;
+	gimple_stmt_iterator gsi;
+
+	if (rhs1 == NULL_TREE) {
+		debug_gimple_stmt(oldstmt);
+		error("%s: rhs1 is NULL_TREE", __func__);
+		gcc_unreachable();
+	}
+
+	if (gimple_code(oldstmt) == GIMPLE_ASM)
+		lhs = rhs1;
+	else
+		lhs = gimple_get_lhs(oldstmt);
+
+	gsi = gsi_for_stmt(oldstmt);
+	pointer_set_insert(visited, oldstmt);
+	if (lookup_stmt_eh_lp(oldstmt) != 0) {
+		basic_block next_bb, cur_bb;
+		const_edge e;
+
+		gcc_assert(before == false);
+		gcc_assert(stmt_can_throw_internal(oldstmt));
+		gcc_assert(gimple_code(oldstmt) == GIMPLE_CALL);
+		gcc_assert(!gsi_end_p(gsi));
+
+		cur_bb = gimple_bb(oldstmt);
+		next_bb = cur_bb->next_bb;
+		e = find_edge(cur_bb, next_bb);
+		gcc_assert(e != NULL);
+		gcc_assert(e->flags & EDGE_FALLTHRU);
+
+		gsi = gsi_after_labels(next_bb);
+		gcc_assert(!gsi_end_p(gsi));
+
+		before = true;
+		oldstmt = gsi_stmt(gsi);
+	}
+
+	size_overflow_type = get_size_overflow_type(oldstmt, lhs);
+
+	stmt = build_cast_stmt(size_overflow_type, rhs1, CREATE_NEW_VAR, &gsi, before);
+	gimple_set_plf(stmt, MY_STMT, true);
+	return gimple_get_lhs(stmt);
+}
+
+static tree dup_assign(struct pointer_set_t *visited, gimple oldstmt, tree size_overflow_type, tree rhs1, tree rhs2, tree __unused rhs3)
+{
+	gimple stmt;
+	gimple_stmt_iterator gsi;
+	tree new_var, lhs = gimple_get_lhs(oldstmt);
+
+	if (gimple_plf(oldstmt, MY_STMT))
+		return lhs;
+
+	if (gimple_num_ops(oldstmt) != 4 && rhs1 == NULL_TREE) {
+		rhs1 = gimple_assign_rhs1(oldstmt);
+		rhs1 = create_assign(visited, oldstmt, rhs1, BEFORE_STMT);
+	}
+	if (gimple_num_ops(oldstmt) == 3 && rhs2 == NULL_TREE) {
+		rhs2 = gimple_assign_rhs2(oldstmt);
+		rhs2 = create_assign(visited, oldstmt, rhs2, BEFORE_STMT);
+	}
+
+	stmt = gimple_copy(oldstmt);
+	gimple_set_location(stmt, gimple_location(oldstmt));
+	gimple_set_plf(stmt, MY_STMT, true);
+
+	if (gimple_assign_rhs_code(oldstmt) == WIDEN_MULT_EXPR)
+		gimple_assign_set_rhs_code(stmt, MULT_EXPR);
+
+	if (is_bool(lhs))
+		new_var = SSA_NAME_VAR(lhs);
+	else
+		new_var = create_new_var(size_overflow_type);
+	new_var = make_ssa_name(new_var, stmt);
+	gimple_set_lhs(stmt, new_var);
+
+	if (rhs1 != NULL_TREE) {
+		if (!gimple_assign_cast_p(oldstmt))
+			rhs1 = cast_a_tree(size_overflow_type, rhs1);
+		gimple_assign_set_rhs1(stmt, rhs1);
+	}
+
+	if (rhs2 != NULL_TREE)
+		gimple_assign_set_rhs2(stmt, rhs2);
+#if BUILDING_GCC_VERSION >= 4007
+	if (rhs3 != NULL_TREE)
+		gimple_assign_set_rhs3(stmt, rhs3);
+#endif
+	gimple_set_vuse(stmt, gimple_vuse(oldstmt));
+	gimple_set_vdef(stmt, gimple_vdef(oldstmt));
+
+	gsi = gsi_for_stmt(oldstmt);
+	gsi_insert_after(&gsi, stmt, GSI_SAME_STMT);
+	update_stmt(stmt);
+	pointer_set_insert(visited, oldstmt);
+	return gimple_get_lhs(stmt);
+}
+
+static gimple overflow_create_phi_node(gimple oldstmt, tree result)
+{
+	basic_block bb;
+	gimple phi;
+	gimple_stmt_iterator gsi = gsi_for_stmt(oldstmt);
+
+	bb = gsi_bb(gsi);
+
+	phi = create_phi_node(result, bb);
+	gsi = gsi_last(phi_nodes(bb));
+	gsi_remove(&gsi, false);
+
+	gsi = gsi_for_stmt(oldstmt);
+	gsi_insert_after(&gsi, phi, GSI_NEW_STMT);
+	gimple_set_bb(phi, bb);
+	gimple_set_plf(phi, MY_STMT, true);
+	return phi;
+}
+
+static basic_block create_a_first_bb(void)
+{
+	basic_block first_bb;
+
+	first_bb = split_block_after_labels(ENTRY_BLOCK_PTR)->dest;
+	if (dom_info_available_p(CDI_DOMINATORS))
+		set_immediate_dominator(CDI_DOMINATORS, first_bb, ENTRY_BLOCK_PTR);
+	return first_bb;
+}
+
+static tree cast_old_phi_arg(gimple oldstmt, tree size_overflow_type, tree arg, tree new_var, unsigned int i)
+{
+	basic_block bb;
+	const_gimple newstmt;
+	gimple_stmt_iterator gsi;
+	bool before = BEFORE_STMT;
+
+	if (TREE_CODE(arg) == SSA_NAME && gimple_code(get_def_stmt(arg)) != GIMPLE_NOP) {
+		gsi = gsi_for_stmt(get_def_stmt(arg));
+		newstmt = build_cast_stmt(size_overflow_type, arg, new_var, &gsi, AFTER_STMT);
+		return gimple_get_lhs(newstmt);
+	}
+
+	bb = gimple_phi_arg_edge(oldstmt, i)->src;
+	gsi = gsi_after_labels(bb);
+	if (bb->index == 0) {
+		bb = create_a_first_bb();
+		gsi = gsi_start_bb(bb);
+	}
+	newstmt = build_cast_stmt(size_overflow_type, arg, new_var, &gsi, before);
+	return gimple_get_lhs(newstmt);
+}
+
+static const_gimple handle_new_phi_arg(const_tree arg, tree new_var, tree new_rhs)
+{
+	gimple newstmt;
+	gimple_stmt_iterator gsi;
+	void (*gsi_insert)(gimple_stmt_iterator *, gimple, enum gsi_iterator_update);
+	gimple def_newstmt = get_def_stmt(new_rhs);
+
+	gsi_insert = gsi_insert_after;
+	gsi = gsi_for_stmt(def_newstmt);
+
+	switch (gimple_code(get_def_stmt(arg))) {
+	case GIMPLE_PHI:
+		newstmt = gimple_build_assign(new_var, new_rhs);
+		gsi = gsi_after_labels(gimple_bb(def_newstmt));
+		gsi_insert = gsi_insert_before;
+		break;
+	case GIMPLE_ASM:
+	case GIMPLE_CALL:
+		newstmt = gimple_build_assign(new_var, new_rhs);
+		break;
+	case GIMPLE_ASSIGN:
+		newstmt = gimple_build_assign(new_var, gimple_get_lhs(def_newstmt));
+		break;
+	default:
+		/* unknown gimple_code (handle_build_new_phi_arg) */
+		gcc_unreachable();
+	}
+
+	gimple_set_lhs(newstmt, make_ssa_name(new_var, newstmt));
+	gsi_insert(&gsi, newstmt, GSI_NEW_STMT);
+	gimple_set_plf(newstmt, MY_STMT, true);
+	update_stmt(newstmt);
+	return newstmt;
+}
+
+static tree build_new_phi_arg(struct pointer_set_t *visited, tree size_overflow_type, tree arg, tree new_var)
+{
+	const_gimple newstmt;
+	gimple def_stmt;
+	tree new_rhs;
+
+	new_rhs = expand(visited, arg);
+	if (new_rhs == NULL_TREE)
+		return NULL_TREE;
+
+	def_stmt = get_def_stmt(new_rhs);
+	if (gimple_code(def_stmt) == GIMPLE_NOP)
+		return NULL_TREE;
+	new_rhs = cast_to_new_size_overflow_type(def_stmt, new_rhs, size_overflow_type, AFTER_STMT);
+
+	newstmt = handle_new_phi_arg(arg, new_var, new_rhs);
+	return gimple_get_lhs(newstmt);
+}
+
+static tree build_new_phi(struct pointer_set_t *visited, tree orig_result)
+{
+	gimple phi, oldstmt = get_def_stmt(orig_result);
+	tree new_result, size_overflow_type;
+	unsigned int i;
+	unsigned int n = gimple_phi_num_args(oldstmt);
+
+	size_overflow_type = get_size_overflow_type(oldstmt, orig_result);
+
+	new_result = create_new_var(size_overflow_type);
+
+	pointer_set_insert(visited, oldstmt);
+	phi = overflow_create_phi_node(oldstmt, new_result);
+	for (i = 0; i < n; i++) {
+		tree arg, lhs;
+
+		arg = gimple_phi_arg_def(oldstmt, i);
+		if (is_gimple_constant(arg))
+			arg = cast_a_tree(size_overflow_type, arg);
+		lhs = build_new_phi_arg(visited, size_overflow_type, arg, new_result);
+		if (lhs == NULL_TREE)
+			lhs = cast_old_phi_arg(oldstmt, size_overflow_type, arg, new_result, i);
+		add_phi_arg(phi, lhs, gimple_phi_arg_edge(oldstmt, i), gimple_location(oldstmt));
+	}
+
+	update_stmt(phi);
+	return gimple_phi_result(phi);
+}
+
+static tree change_assign_rhs(gimple stmt, const_tree orig_rhs, tree new_rhs)
+{
+	const_gimple assign;
+	gimple_stmt_iterator gsi = gsi_for_stmt(stmt);
+	tree origtype = TREE_TYPE(orig_rhs);
+
+	gcc_assert(gimple_code(stmt) == GIMPLE_ASSIGN);
+
+	assign = build_cast_stmt(origtype, new_rhs, CREATE_NEW_VAR, &gsi, BEFORE_STMT);
+	return gimple_get_lhs(assign);
+}
+
+static void change_rhs1(gimple stmt, tree new_rhs1)
+{
+	tree assign_rhs;
+	const_tree rhs = gimple_assign_rhs1(stmt);
+
+	assign_rhs = change_assign_rhs(stmt, rhs, new_rhs1);
+	gimple_assign_set_rhs1(stmt, assign_rhs);
+	update_stmt(stmt);
+}
+
+static bool check_mode_type(const_gimple stmt)
+{
+	const_tree lhs = gimple_get_lhs(stmt);
+	const_tree lhs_type = TREE_TYPE(lhs);
+	const_tree rhs_type = TREE_TYPE(gimple_assign_rhs1(stmt));
+	enum machine_mode lhs_mode = TYPE_MODE(lhs_type);
+	enum machine_mode rhs_mode = TYPE_MODE(rhs_type);
+
+	if (rhs_mode == lhs_mode && TYPE_UNSIGNED(rhs_type) == TYPE_UNSIGNED(lhs_type))
+		return false;
+
+	if (rhs_mode == SImode && lhs_mode == DImode && (TYPE_UNSIGNED(rhs_type) || !TYPE_UNSIGNED(lhs_type)))
+		return false;
+
+	return true;
+}
+
+static bool check_undefined_integer_operation(const_gimple stmt)
+{
+	const_gimple def_stmt;
+	const_tree lhs = gimple_get_lhs(stmt);
+	const_tree rhs1 = gimple_assign_rhs1(stmt);
+	const_tree rhs1_type = TREE_TYPE(rhs1);
+	const_tree lhs_type = TREE_TYPE(lhs);
+
+	if (TYPE_MODE(rhs1_type) != TYPE_MODE(lhs_type) || TYPE_UNSIGNED(rhs1_type) == TYPE_UNSIGNED(lhs_type))
+		return false;
+
+	def_stmt = get_def_stmt(rhs1);
+	if (gimple_code(def_stmt) != GIMPLE_ASSIGN)
+		return false;
+
+	if (gimple_assign_rhs_code(def_stmt) != MINUS_EXPR)
+		return false;
+	return true;
+}
+
+static bool is_a_cast_and_const_overflow(const_tree no_const_rhs)
+{
+	const_tree rhs1, lhs, rhs1_type, lhs_type;
+	enum machine_mode lhs_mode, rhs_mode;
+	gimple def_stmt = get_def_stmt(no_const_rhs);
+
+	if (!gimple_assign_cast_p(def_stmt))
+		return false;
+
+	rhs1 = gimple_assign_rhs1(def_stmt);
+	lhs = gimple_get_lhs(def_stmt);
+	rhs1_type = TREE_TYPE(rhs1);
+	lhs_type = TREE_TYPE(lhs);
+	rhs_mode = TYPE_MODE(rhs1_type);
+	lhs_mode = TYPE_MODE(lhs_type);
+	if (TYPE_UNSIGNED(lhs_type) == TYPE_UNSIGNED(rhs1_type) || lhs_mode != rhs_mode)
+		return false;
+
+	return true;
+}
+
+static tree handle_unary_rhs(struct pointer_set_t *visited, gimple stmt)
+{
+	tree size_overflow_type, lhs = gimple_get_lhs(stmt);
+	tree new_rhs1, rhs1 = gimple_assign_rhs1(stmt);
+	const_tree rhs1_type = TREE_TYPE(rhs1);
+	const_tree lhs_type = TREE_TYPE(lhs);
+
+	new_rhs1 = expand(visited, rhs1);
+
+	if (new_rhs1 == NULL_TREE || TREE_CODE(rhs1_type) == POINTER_TYPE)
+		return create_assign(visited, stmt, lhs, AFTER_STMT);
+
+	if (gimple_plf(stmt, MY_STMT))
+		return lhs;
+
+	if (gimple_plf(stmt, NO_CAST_CHECK))
+		return follow_overflow_type_and_dup(visited, stmt, rhs1, new_rhs1, NULL_TREE, NULL_TREE);
+
+	if (gimple_assign_rhs_code(stmt) == BIT_NOT_EXPR) {
+		size_overflow_type = get_size_overflow_type(stmt, rhs1);
+		new_rhs1 = cast_to_new_size_overflow_type(stmt, new_rhs1, size_overflow_type, BEFORE_STMT);
+		check_size_overflow(stmt, size_overflow_type, new_rhs1, rhs1, BEFORE_STMT);
+		return create_assign(visited, stmt, lhs, AFTER_STMT);
+	}
+
+	if (!gimple_assign_cast_p(stmt) || check_undefined_integer_operation(stmt))
+		return follow_overflow_type_and_dup(visited, stmt, lhs, new_rhs1, NULL_TREE, NULL_TREE);
+
+	size_overflow_type = get_size_overflow_type(stmt, rhs1);
+	new_rhs1 = cast_to_new_size_overflow_type(stmt, new_rhs1, size_overflow_type, BEFORE_STMT);
+
+	change_rhs1(stmt, new_rhs1);
+	check_size_overflow(stmt, size_overflow_type, new_rhs1, rhs1, BEFORE_STMT);
+
+	rhs1 = gimple_assign_rhs1(stmt);
+	rhs1_type = TREE_TYPE(rhs1);
+	if (TYPE_UNSIGNED(rhs1_type) != TYPE_UNSIGNED(lhs_type))
+		return create_assign(visited, stmt, rhs1, AFTER_STMT);
+
+	if (!check_mode_type(stmt))
+		return create_assign(visited, stmt, lhs, AFTER_STMT);
+
+	size_overflow_type = get_size_overflow_type(stmt, lhs);
+	new_rhs1 = cast_to_new_size_overflow_type(stmt, new_rhs1, size_overflow_type, BEFORE_STMT);
+
+	check_size_overflow(stmt, size_overflow_type, new_rhs1, lhs, BEFORE_STMT);
+
+	return create_assign(visited, stmt, lhs, AFTER_STMT);
+}
+
+static tree handle_unary_ops(struct pointer_set_t *visited, tree lhs)
+{
+	gimple def_stmt = get_def_stmt(lhs);
+	tree rhs1 = gimple_assign_rhs1(def_stmt);
+
+	if (is_gimple_constant(rhs1))
+		return create_assign(visited, def_stmt, lhs, AFTER_STMT);
+
+	gcc_assert(TREE_CODE(rhs1) != COND_EXPR);
+	switch (TREE_CODE(rhs1)) {
+	case SSA_NAME:
+		return handle_unary_rhs(visited, def_stmt);
+	case ARRAY_REF:
+	case BIT_FIELD_REF:
+	case ADDR_EXPR:
+	case COMPONENT_REF:
+	case INDIRECT_REF:
+#if BUILDING_GCC_VERSION >= 4006
+	case MEM_REF:
+#endif
+	case PARM_DECL:
+	case TARGET_MEM_REF:
+	case VAR_DECL:
+		return create_assign(visited, def_stmt, lhs, AFTER_STMT);
+
+	default:
+		debug_gimple_stmt(def_stmt);
+		debug_tree(rhs1);
+		gcc_unreachable();
+	}
+}
+
+static void insert_cond(basic_block cond_bb, tree arg, enum tree_code cond_code, tree type_value)
+{
+	gimple cond_stmt;
+	gimple_stmt_iterator gsi = gsi_last_bb(cond_bb);
+
+	cond_stmt = gimple_build_cond(cond_code, arg, type_value, NULL_TREE, NULL_TREE);
+	gsi_insert_after(&gsi, cond_stmt, GSI_CONTINUE_LINKING);
+	update_stmt(cond_stmt);
+}
+
+static tree create_string_param(tree string)
+{
+	tree i_type, a_type;
+	const int length = TREE_STRING_LENGTH(string);
+
+	gcc_assert(length > 0);
+
+	i_type = build_index_type(build_int_cst(NULL_TREE, length - 1));
+	a_type = build_array_type(char_type_node, i_type);
+
+	TREE_TYPE(string) = a_type;
+	TREE_CONSTANT(string) = 1;
+	TREE_READONLY(string) = 1;
+
+	return build1(ADDR_EXPR, ptr_type_node, string);
+}
+
+static void insert_cond_result(basic_block bb_true, const_gimple stmt, const_tree arg, bool min)
+{
+	gimple func_stmt;
+	const_gimple def_stmt;
+	const_tree loc_line;
+	tree loc_file, ssa_name, current_func;
+	expanded_location xloc;
+	char ssa_name_buf[256];
+	gimple_stmt_iterator gsi = gsi_start_bb(bb_true);
+
+	def_stmt = get_def_stmt(arg);
+	xloc = expand_location(gimple_location(def_stmt));
+
+	if (!gimple_has_location(def_stmt)) {
+		xloc = expand_location(gimple_location(stmt));
+		if (!gimple_has_location(stmt))
+			xloc = expand_location(DECL_SOURCE_LOCATION(current_function_decl));
+	}
+
+	loc_line = build_int_cstu(unsigned_type_node, xloc.line);
+
+	loc_file = build_string(strlen(xloc.file) + 1, xloc.file);
+	loc_file = create_string_param(loc_file);
+
+	current_func = build_string(NAME_LEN(current_function_decl) + 1, NAME(current_function_decl));
+	current_func = create_string_param(current_func);
+
+	snprintf(ssa_name_buf, 256, "%s_%u (%s)\n", NAME(SSA_NAME_VAR(arg)), SSA_NAME_VERSION(arg), min ? "min" : "max");
+	ssa_name = build_string(256, ssa_name_buf);
+	ssa_name = create_string_param(ssa_name);
+
+	// void report_size_overflow(const char *file, unsigned int line, const char *func, const char *ssa_name)
+	func_stmt = gimple_build_call(report_size_overflow_decl, 4, loc_file, loc_line, current_func, ssa_name);
+
+	gsi_insert_after(&gsi, func_stmt, GSI_CONTINUE_LINKING);
+}
+
+static void __unused print_the_code_insertions(const_gimple stmt)
+{
+	location_t loc = gimple_location(stmt);
+
+	inform(loc, "Integer size_overflow check applied here.");
+}
+
+static void insert_check_size_overflow(gimple stmt, enum tree_code cond_code, tree arg, tree type_value, bool before, bool min)
+{
+	basic_block cond_bb, join_bb, bb_true;
+	edge e;
+	gimple_stmt_iterator gsi = gsi_for_stmt(stmt);
+
+	cond_bb = gimple_bb(stmt);
+	if (before)
+		gsi_prev(&gsi);
+	if (gsi_end_p(gsi))
+		e = split_block_after_labels(cond_bb);
+	else
+		e = split_block(cond_bb, gsi_stmt(gsi));
+	cond_bb = e->src;
+	join_bb = e->dest;
+	e->flags = EDGE_FALSE_VALUE;
+	e->probability = REG_BR_PROB_BASE;
+
+	bb_true = create_empty_bb(cond_bb);
+	make_edge(cond_bb, bb_true, EDGE_TRUE_VALUE);
+	make_edge(cond_bb, join_bb, EDGE_FALSE_VALUE);
+	make_edge(bb_true, join_bb, EDGE_FALLTHRU);
+
+	if (dom_info_available_p(CDI_DOMINATORS)) {
+		set_immediate_dominator(CDI_DOMINATORS, bb_true, cond_bb);
+		set_immediate_dominator(CDI_DOMINATORS, join_bb, cond_bb);
+	}
+
+	if (current_loops != NULL) {
+		gcc_assert(cond_bb->loop_father == join_bb->loop_father);
+		add_bb_to_loop(bb_true, cond_bb->loop_father);
+	}
+
+	insert_cond(cond_bb, arg, cond_code, type_value);
+	insert_cond_result(bb_true, stmt, arg, min);
+
+//	print_the_code_insertions(stmt);
+}
+
+static void check_size_overflow(gimple stmt, tree size_overflow_type, tree cast_rhs, tree rhs, bool before)
+{
+	const_tree rhs_type = TREE_TYPE(rhs);
+	tree cast_rhs_type, type_max_type, type_min_type, type_max, type_min;
+
+	gcc_assert(rhs_type != NULL_TREE);
+	if (TREE_CODE(rhs_type) == POINTER_TYPE)
+		return;
+
+	gcc_assert(TREE_CODE(rhs_type) == INTEGER_TYPE || TREE_CODE(rhs_type) == BOOLEAN_TYPE || TREE_CODE(rhs_type) == ENUMERAL_TYPE);
+
+	type_max = cast_a_tree(size_overflow_type, TYPE_MAX_VALUE(rhs_type));
+	type_min = cast_a_tree(size_overflow_type, TYPE_MIN_VALUE(rhs_type));
+
+	gcc_assert(!TREE_OVERFLOW(type_max));
+
+	cast_rhs_type = TREE_TYPE(cast_rhs);
+	type_max_type = TREE_TYPE(type_max);
+	type_min_type = TREE_TYPE(type_min);
+	gcc_assert(useless_type_conversion_p(cast_rhs_type, type_max_type));
+	gcc_assert(useless_type_conversion_p(type_max_type, type_min_type));
+
+	insert_check_size_overflow(stmt, GT_EXPR, cast_rhs, type_max, before, false);
+	insert_check_size_overflow(stmt, LT_EXPR, cast_rhs, type_min, before, true);
+}
+
+static tree get_size_overflow_type_for_intentional_overflow(gimple def_stmt, tree change_rhs)
+{
+	gimple change_rhs_def_stmt;
+	tree lhs = gimple_get_lhs(def_stmt);
+	tree lhs_type = TREE_TYPE(lhs);
+	tree rhs1_type = TREE_TYPE(gimple_assign_rhs1(def_stmt));
+	tree rhs2_type = TREE_TYPE(gimple_assign_rhs2(def_stmt));
+
+	if (change_rhs == NULL_TREE)
+		return get_size_overflow_type(def_stmt, lhs);
+
+	change_rhs_def_stmt = get_def_stmt(change_rhs);
+
+	if (TREE_CODE_CLASS(gimple_assign_rhs_code(def_stmt)) == tcc_comparison)
+		return get_size_overflow_type(change_rhs_def_stmt, change_rhs);
+
+	if (gimple_assign_rhs_code(def_stmt) == LSHIFT_EXPR)
+		return get_size_overflow_type(change_rhs_def_stmt, change_rhs);
+
+	if (gimple_assign_rhs_code(def_stmt) == RSHIFT_EXPR)
+		return get_size_overflow_type(change_rhs_def_stmt, change_rhs);
+
+	if (!useless_type_conversion_p(lhs_type, rhs1_type) || !useless_type_conversion_p(rhs1_type, rhs2_type)) {
+		debug_gimple_stmt(def_stmt);
+		gcc_unreachable();
+	}
+
+	return get_size_overflow_type(def_stmt, lhs);
+}
+
+static bool is_a_constant_overflow(const_gimple stmt, const_tree rhs)
+{
+	if (gimple_assign_rhs_code(stmt) == MIN_EXPR)
+		return false;
+	if (!is_gimple_constant(rhs))
+		return false;
+	return true;
+}
+
+static tree get_cast_def_stmt_rhs(const_tree new_rhs)
+{
+	gimple def_stmt;
+
+	def_stmt = get_def_stmt(new_rhs);
+	// get_size_overflow_type
+	if (LONG_TYPE_SIZE != GET_MODE_BITSIZE(SImode))
+		gcc_assert(gimple_assign_cast_p(def_stmt));
+	return gimple_assign_rhs1(def_stmt);
+}
+
+static tree cast_to_int_TI_type_and_check(gimple stmt, tree new_rhs)
+{
+	gimple_stmt_iterator gsi;
+	const_gimple cast_stmt;
+	gimple def_stmt;
+	enum machine_mode mode = TYPE_MODE(TREE_TYPE(new_rhs));
+
+	if (mode != TImode && mode != DImode) {
+		def_stmt = get_def_stmt(new_rhs);
+		gcc_assert(gimple_assign_cast_p(def_stmt));
+		new_rhs = gimple_assign_rhs1(def_stmt);
+		mode = TYPE_MODE(TREE_TYPE(new_rhs));
+	}
+
+	gcc_assert(mode == TImode || mode == DImode);
+
+	if (mode == TYPE_MODE(intTI_type_node) && useless_type_conversion_p(TREE_TYPE(new_rhs), intTI_type_node))
+		return new_rhs;
+
+	gsi = gsi_for_stmt(stmt);
+	cast_stmt = build_cast_stmt(intTI_type_node, new_rhs, CREATE_NEW_VAR, &gsi, BEFORE_STMT);
+	new_rhs = gimple_get_lhs(cast_stmt);
+
+	if (mode == DImode)
+		return new_rhs;
+
+	check_size_overflow(stmt, intTI_type_node, new_rhs, new_rhs, BEFORE_STMT);
+
+	return new_rhs;
+}
+
+static bool is_an_integer_trunction(const_gimple stmt)
+{
+	gimple rhs1_def_stmt, rhs2_def_stmt;
+	const_tree rhs1_def_stmt_rhs1, rhs2_def_stmt_rhs1;
+	enum machine_mode rhs1_def_stmt_rhs1_mode, rhs2_def_stmt_rhs1_mode;
+	const_tree rhs1 = gimple_assign_rhs1(stmt);
+	const_tree rhs2 = gimple_assign_rhs2(stmt);
+	enum machine_mode rhs1_mode = TYPE_MODE(TREE_TYPE(rhs1));
+	enum machine_mode rhs2_mode = TYPE_MODE(TREE_TYPE(rhs2));
+
+	if (is_gimple_constant(rhs1) || is_gimple_constant(rhs2))
+		return false;
+
+	gcc_assert(TREE_CODE(rhs1) == SSA_NAME && TREE_CODE(rhs2) == SSA_NAME);
+
+	if (gimple_assign_rhs_code(stmt) != MINUS_EXPR || rhs1_mode != SImode || rhs2_mode != SImode)
+		return false;
+
+	rhs1_def_stmt = get_def_stmt(rhs1);
+	rhs2_def_stmt = get_def_stmt(rhs2);
+	if (!gimple_assign_cast_p(rhs1_def_stmt) || !gimple_assign_cast_p(rhs2_def_stmt))
+		return false;
+
+	rhs1_def_stmt_rhs1 = gimple_assign_rhs1(rhs1_def_stmt);
+	rhs2_def_stmt_rhs1 = gimple_assign_rhs1(rhs2_def_stmt);
+	rhs1_def_stmt_rhs1_mode = TYPE_MODE(TREE_TYPE(rhs1_def_stmt_rhs1));
+	rhs2_def_stmt_rhs1_mode = TYPE_MODE(TREE_TYPE(rhs2_def_stmt_rhs1));
+	if (rhs1_def_stmt_rhs1_mode != DImode || rhs2_def_stmt_rhs1_mode != DImode)
+		return false;
+
+	gimple_set_plf(rhs1_def_stmt, NO_CAST_CHECK, true);
+	gimple_set_plf(rhs2_def_stmt, NO_CAST_CHECK, true);
+	return true;
+}
+
+static tree handle_integer_truncation(struct pointer_set_t *visited, const_tree lhs)
+{
+	tree new_rhs1, new_rhs2;
+	tree new_rhs1_def_stmt_rhs1, new_rhs2_def_stmt_rhs1, new_lhs;
+	tree new_rhs1_def_stmt_rhs1_type, new_rhs2_def_stmt_rhs1_type;
+	gimple assign, stmt = get_def_stmt(lhs);
+	tree rhs1 = gimple_assign_rhs1(stmt);
+	tree rhs2 = gimple_assign_rhs2(stmt);
+
+	if (!is_an_integer_trunction(stmt))
+		return NULL_TREE;
+
+	new_rhs1 = expand(visited, rhs1);
+	new_rhs2 = expand(visited, rhs2);
+
+	new_rhs1_def_stmt_rhs1 = get_cast_def_stmt_rhs(new_rhs1);
+	new_rhs2_def_stmt_rhs1 = get_cast_def_stmt_rhs(new_rhs2);
+
+	new_rhs1_def_stmt_rhs1_type = TREE_TYPE(new_rhs1_def_stmt_rhs1);
+	new_rhs2_def_stmt_rhs1_type = TREE_TYPE(new_rhs2_def_stmt_rhs1);
+
+	if (!useless_type_conversion_p(new_rhs1_def_stmt_rhs1_type, new_rhs2_def_stmt_rhs1_type)) {
+		new_rhs1_def_stmt_rhs1 = cast_to_int_TI_type_and_check(stmt, new_rhs1_def_stmt_rhs1);
+		new_rhs2_def_stmt_rhs1 = cast_to_int_TI_type_and_check(stmt, new_rhs2_def_stmt_rhs1);
+	}
+
+	assign = create_binary_assign(MINUS_EXPR, stmt, new_rhs1_def_stmt_rhs1, new_rhs2_def_stmt_rhs1);
+	new_lhs = gimple_get_lhs(assign);
+	check_size_overflow(assign, TREE_TYPE(new_lhs), new_lhs, rhs1, AFTER_STMT);
+
+	return follow_overflow_type_and_dup(visited, stmt, lhs, new_rhs1, new_rhs2, NULL_TREE);
+}
+
+static bool is_a_neg_overflow(const_gimple stmt, const_tree rhs)
+{
+	const_gimple def_stmt;
+
+	if (TREE_CODE(rhs) != SSA_NAME)
+		return false;
+
+	if (gimple_assign_rhs_code(stmt) != PLUS_EXPR)
+		return false;
+
+	def_stmt = get_def_stmt(rhs);
+	if (gimple_code(def_stmt) != GIMPLE_ASSIGN || gimple_assign_rhs_code(def_stmt) != BIT_NOT_EXPR)
+		return false;
+
+	return true;
+}
+
+static tree handle_intentional_overflow(struct pointer_set_t *visited, bool check_overflow, gimple stmt, tree change_rhs, tree new_rhs1, tree new_rhs2)
+{
+	tree new_rhs, size_overflow_type, orig_rhs;
+	void (*gimple_assign_set_rhs)(gimple, tree);
+	tree rhs1 = gimple_assign_rhs1(stmt);
+	tree rhs2 = gimple_assign_rhs2(stmt);
+	tree lhs = gimple_get_lhs(stmt);
+
+	if (change_rhs == NULL_TREE)
+		return create_assign(visited, stmt, lhs, AFTER_STMT);
+
+	if (new_rhs2 == NULL_TREE) {
+		size_overflow_type = get_size_overflow_type_for_intentional_overflow(stmt, new_rhs1);
+		new_rhs2 = cast_a_tree(size_overflow_type, rhs2);
+		orig_rhs = rhs1;
+		gimple_assign_set_rhs = &gimple_assign_set_rhs1;
+	} else {
+		size_overflow_type = get_size_overflow_type_for_intentional_overflow(stmt, new_rhs2);
+		new_rhs1 = cast_a_tree(size_overflow_type, rhs1);
+		orig_rhs = rhs2;
+		gimple_assign_set_rhs = &gimple_assign_set_rhs2;
+	}
+
+	change_rhs = cast_to_new_size_overflow_type(stmt, change_rhs, size_overflow_type, BEFORE_STMT);
+
+	if (check_overflow)
+		check_size_overflow(stmt, size_overflow_type, change_rhs, orig_rhs, BEFORE_STMT);
+
+	new_rhs = change_assign_rhs(stmt, orig_rhs, change_rhs);
+	gimple_assign_set_rhs(stmt, new_rhs);
+	update_stmt(stmt);
+
+	return create_assign(visited, stmt, lhs, AFTER_STMT);
+}
+
+static tree handle_binary_ops(struct pointer_set_t *visited, tree lhs)
+{
+	tree rhs1, rhs2, new_lhs;
+	gimple def_stmt = get_def_stmt(lhs);
+	tree new_rhs1 = NULL_TREE;
+	tree new_rhs2 = NULL_TREE;
+
+	rhs1 = gimple_assign_rhs1(def_stmt);
+	rhs2 = gimple_assign_rhs2(def_stmt);
+
+	/* no DImode/TImode division in the 32/64 bit kernel */
+	switch (gimple_assign_rhs_code(def_stmt)) {
+	case RDIV_EXPR:
+	case TRUNC_DIV_EXPR:
+	case CEIL_DIV_EXPR:
+	case FLOOR_DIV_EXPR:
+	case ROUND_DIV_EXPR:
+	case TRUNC_MOD_EXPR:
+	case CEIL_MOD_EXPR:
+	case FLOOR_MOD_EXPR:
+	case ROUND_MOD_EXPR:
+	case EXACT_DIV_EXPR:
+	case POINTER_PLUS_EXPR:
+	case BIT_AND_EXPR:
+		return create_assign(visited, def_stmt, lhs, AFTER_STMT);
+	default:
+		break;
+	}
+
+	new_lhs = handle_integer_truncation(visited, lhs);
+	if (new_lhs != NULL_TREE)
+		return new_lhs;
+
+	if (TREE_CODE(rhs1) == SSA_NAME)
+		new_rhs1 = expand(visited, rhs1);
+	if (TREE_CODE(rhs2) == SSA_NAME)
+		new_rhs2 = expand(visited, rhs2);
+
+	if (is_a_neg_overflow(def_stmt, rhs2))
+		return handle_intentional_overflow(visited, true, def_stmt, new_rhs1, new_rhs1, NULL_TREE);
+	if (is_a_neg_overflow(def_stmt, rhs1))
+		return handle_intentional_overflow(visited, true, def_stmt, new_rhs2, NULL_TREE, new_rhs2);
+
+	if (is_a_constant_overflow(def_stmt, rhs2))
+		return handle_intentional_overflow(visited, !is_a_cast_and_const_overflow(rhs1), def_stmt, new_rhs1, new_rhs1, NULL_TREE);
+	if (is_a_constant_overflow(def_stmt, rhs1))
+		return handle_intentional_overflow(visited, !is_a_cast_and_const_overflow(rhs2), def_stmt, new_rhs2, NULL_TREE, new_rhs2);
+
+	return follow_overflow_type_and_dup(visited, def_stmt, lhs, new_rhs1, new_rhs2, NULL_TREE);
+}
+
+#if BUILDING_GCC_VERSION >= 4007
+static tree get_new_rhs(struct pointer_set_t *visited, tree size_overflow_type, tree rhs)
+{
+	if (is_gimple_constant(rhs))
+		return cast_a_tree(size_overflow_type, rhs);
+	if (TREE_CODE(rhs) != SSA_NAME)
+		return NULL_TREE;
+	return expand(visited, rhs);
+}
+
+static tree handle_ternary_ops(struct pointer_set_t *visited, tree lhs)
+{
+	tree rhs1, rhs2, rhs3, new_rhs1, new_rhs2, new_rhs3, size_overflow_type;
+	gimple def_stmt = get_def_stmt(lhs);
+
+	size_overflow_type = get_size_overflow_type(def_stmt, lhs);
+
+	rhs1 = gimple_assign_rhs1(def_stmt);
+	rhs2 = gimple_assign_rhs2(def_stmt);
+	rhs3 = gimple_assign_rhs3(def_stmt);
+	new_rhs1 = get_new_rhs(visited, size_overflow_type, rhs1);
+	new_rhs2 = get_new_rhs(visited, size_overflow_type, rhs2);
+	new_rhs3 = get_new_rhs(visited, size_overflow_type, rhs3);
+
+	return follow_overflow_type_and_dup(visited, def_stmt, lhs, new_rhs1, new_rhs2, new_rhs3);
+}
+#endif
+
+static tree get_size_overflow_type(gimple stmt, const_tree node)
+{
+	const_tree type;
+
+	gcc_assert(node != NULL_TREE);
+
+	type = TREE_TYPE(node);
+
+	if (gimple_plf(stmt, MY_STMT))
+		return TREE_TYPE(node);
+
+	switch (TYPE_MODE(type)) {
+	case QImode:
+		return (TYPE_UNSIGNED(type)) ? unsigned_intHI_type_node : intHI_type_node;
+	case HImode:
+		return (TYPE_UNSIGNED(type)) ? unsigned_intSI_type_node : intSI_type_node;
+	case SImode:
+		return (TYPE_UNSIGNED(type)) ? unsigned_intDI_type_node : intDI_type_node;
+	case DImode:
+		if (LONG_TYPE_SIZE == GET_MODE_BITSIZE(SImode))
+			return (TYPE_UNSIGNED(type)) ? unsigned_intDI_type_node : intDI_type_node;
+		return (TYPE_UNSIGNED(type)) ? unsigned_intTI_type_node : intTI_type_node;
+	default:
+		debug_tree((tree)node);
+		error("%s: unsupported gcc configuration.", __func__);
+		gcc_unreachable();
+	}
+}
+
+static tree expand_visited(gimple def_stmt)
+{
+	const_gimple next_stmt;
+	gimple_stmt_iterator gsi = gsi_for_stmt(def_stmt);
+
+	gsi_next(&gsi);
+	next_stmt = gsi_stmt(gsi);
+
+	gcc_assert(gimple_plf((gimple)next_stmt, MY_STMT));
+
+	switch (gimple_code(next_stmt)) {
+	case GIMPLE_ASSIGN:
+		return gimple_get_lhs(next_stmt);
+	case GIMPLE_PHI:
+		return gimple_phi_result(next_stmt);
+	case GIMPLE_CALL:
+		return gimple_call_lhs(next_stmt);
+	default:
+		return NULL_TREE;
+	}
+}
+
+static tree expand(struct pointer_set_t *visited, tree lhs)
+{
+	gimple def_stmt;
+	enum tree_code code = TREE_CODE(TREE_TYPE(lhs));
+
+	if (is_gimple_constant(lhs))
+		return NULL_TREE;
+
+	if (TREE_CODE(lhs) == ADDR_EXPR)
+		return NULL_TREE;
+
+	if (code == REAL_TYPE)
+		return NULL_TREE;
+
+	gcc_assert(code == INTEGER_TYPE || code == POINTER_TYPE || code == BOOLEAN_TYPE || code == ENUMERAL_TYPE);
+
+
+	def_stmt = get_def_stmt(lhs);
+
+	if (!def_stmt)
+		return NULL_TREE;
+
+	if (gimple_plf(def_stmt, MY_STMT))
+		return lhs;
+
+	if (pointer_set_contains(visited, def_stmt))
+		return expand_visited(def_stmt);
+
+	switch (gimple_code(def_stmt)) {
+	case GIMPLE_NOP:
+		return NULL_TREE;
+	case GIMPLE_PHI:
+		return build_new_phi(visited, lhs);
+	case GIMPLE_CALL:
+	case GIMPLE_ASM:
+		return create_assign(visited, def_stmt, lhs, AFTER_STMT);
+	case GIMPLE_ASSIGN:
+		switch (gimple_num_ops(def_stmt)) {
+		case 2:
+			return handle_unary_ops(visited, lhs);
+		case 3:
+			return handle_binary_ops(visited, lhs);
+#if BUILDING_GCC_VERSION >= 4007
+		case 4:
+			return handle_ternary_ops(visited, lhs);
+#endif
+		}
+	default:
+		debug_gimple_stmt(def_stmt);
+		error("%s: unknown gimple code", __func__);
+		gcc_unreachable();
+	}
+}
+
+static void change_function_arg(gimple stmt, const_tree origarg, unsigned int argnum, tree newarg)
+{
+	const_gimple assign;
+	gimple_stmt_iterator gsi = gsi_for_stmt(stmt);
+	tree origtype = TREE_TYPE(origarg);
+
+	gcc_assert(gimple_code(stmt) == GIMPLE_CALL);
+
+	assign = build_cast_stmt(origtype, newarg, CREATE_NEW_VAR, &gsi, BEFORE_STMT);
+
+	gimple_call_set_arg(stmt, argnum, gimple_get_lhs(assign));
+	update_stmt(stmt);
+}
+
+static bool get_function_arg(unsigned int* argnum, const_tree fndecl)
+{
+	const char *origid;
+	tree arg;
+	const_tree origarg;
+
+	if (!DECL_ABSTRACT_ORIGIN(fndecl))
+		return true;
+
+	origarg = DECL_ARGUMENTS(DECL_ABSTRACT_ORIGIN(fndecl));
+	while (origarg && *argnum) {
+		(*argnum)--;
+		origarg = TREE_CHAIN(origarg);
+	}
+
+	gcc_assert(*argnum == 0);
+
+	gcc_assert(origarg != NULL_TREE);
+	origid = NAME(origarg);
+	*argnum = 0;
+	for (arg = DECL_ARGUMENTS(fndecl); arg; arg = TREE_CHAIN(arg)) {
+		if (!strcmp(origid, NAME(arg)))
+			return true;
+		(*argnum)++;
+	}
+	return false;
+}
+
+static bool skip_types(const_tree var)
+{
+	switch (TREE_CODE(var)) {
+		case ADDR_EXPR:
+#if BUILDING_GCC_VERSION >= 4006
+		case MEM_REF:
+#endif
+		case ARRAY_REF:
+		case BIT_FIELD_REF:
+		case INDIRECT_REF:
+		case TARGET_MEM_REF:
+		case VAR_DECL:
+			return true;
+		default:
+			break;
+	}
+	return false;
+}
+
+static bool walk_phi(struct pointer_set_t *visited, const_tree result)
+{
+	gimple phi = get_def_stmt(result);
+	unsigned int i, n = gimple_phi_num_args(phi);
+
+	if (!phi)
+		return false;
+
+	pointer_set_insert(visited, phi);
+	for (i = 0; i < n; i++) {
+		const_tree arg = gimple_phi_arg_def(phi, i);
+		if (pre_expand(visited, arg))
+			return true;
+	}
+	return false;
+}
+
+static bool walk_unary_ops(struct pointer_set_t *visited, const_tree lhs)
+{
+	gimple def_stmt = get_def_stmt(lhs);
+	const_tree rhs;
+
+	if (!def_stmt)
+		return false;
+
+	rhs = gimple_assign_rhs1(def_stmt);
+	if (pre_expand(visited, rhs))
+		return true;
+	return false;
+}
+
+static bool walk_binary_ops(struct pointer_set_t *visited, const_tree lhs)
+{
+	bool rhs1_found, rhs2_found;
+	gimple def_stmt = get_def_stmt(lhs);
+	const_tree rhs1, rhs2;
+
+	if (!def_stmt)
+		return false;
+
+	rhs1 = gimple_assign_rhs1(def_stmt);
+	rhs2 = gimple_assign_rhs2(def_stmt);
+	rhs1_found = pre_expand(visited, rhs1);
+	rhs2_found = pre_expand(visited, rhs2);
+
+	return rhs1_found || rhs2_found;
+}
+
+static const_tree search_field_decl(const_tree comp_ref)
+{
+	const_tree field = NULL_TREE;
+	unsigned int i, len = TREE_OPERAND_LENGTH(comp_ref);
+
+	for (i = 0; i < len; i++) {
+		field = TREE_OPERAND(comp_ref, i);
+		if (TREE_CODE(field) == FIELD_DECL)
+			break;
+	}
+	gcc_assert(TREE_CODE(field) == FIELD_DECL);
+	return field;
+}
+
+static enum marked mark_status(const_tree fndecl, unsigned int argnum)
+{
+	const_tree attr, p;
+
+	attr = lookup_attribute("intentional_overflow", DECL_ATTRIBUTES(fndecl));
+	if (!attr || !TREE_VALUE(attr))
+		return MARKED_NO;
+
+	p = TREE_VALUE(attr);
+	if (!TREE_INT_CST_LOW(TREE_VALUE(p)))
+		return MARKED_NOT_INTENTIONAL;
+
+	do {
+		if (argnum == TREE_INT_CST_LOW(TREE_VALUE(p)))
+			return MARKED_YES;
+		p = TREE_CHAIN(p);
+	} while (p);
+
+	return MARKED_NO;
+}
+
+static void print_missing_msg(tree func, unsigned int argnum)
+{
+	unsigned int new_hash;
+	size_t len;
+	unsigned char tree_codes[CODES_LIMIT];
+	location_t loc = DECL_SOURCE_LOCATION(func);
+	const char *curfunc = get_asm_name(func);
+
+	len = get_function_decl(func, tree_codes);
+	new_hash = get_hash_num(curfunc, (const char *) tree_codes, len, 0);
+	inform(loc, "Function %s is missing from the size_overflow hash table +%s+%u+%u+", curfunc, curfunc, argnum, new_hash);
+}
+
+static unsigned int search_missing_attribute(const_tree arg)
+{
+	const_tree type = TREE_TYPE(arg);
+	tree func = get_original_function_decl(current_function_decl);
+	unsigned int argnum;
+	const struct size_overflow_hash *hash;
+
+	gcc_assert(TREE_CODE(arg) != COMPONENT_REF);
+
+	if (TREE_CODE(type) == POINTER_TYPE)
+		return 0;
+
+	argnum = find_arg_number(arg, func);
+	if (argnum == 0)
+		return 0;
+
+	if (lookup_attribute("size_overflow", DECL_ATTRIBUTES(func)))
+		return argnum;
+
+	hash = get_function_hash(func);
+	if (!hash || !(hash->param & (1U << argnum))) {
+		print_missing_msg(func, argnum);
+		return 0;
+	}
+	return argnum;
+}
+
+static bool is_already_marked(const_tree lhs)
+{
+	unsigned int argnum;
+	const_tree fndecl;
+
+	argnum = search_missing_attribute(lhs);
+	fndecl = get_original_function_decl(current_function_decl);
+	if (argnum && mark_status(fndecl, argnum) == MARKED_YES)
+		return true;
+	return false;
+}
+
+static bool pre_expand(struct pointer_set_t *visited, const_tree lhs)
+{
+	const_gimple def_stmt;
+
+	if (is_gimple_constant(lhs))
+		return false;
+
+	if (skip_types(lhs))
+		return false;
+
+	if (TREE_CODE(lhs) == PARM_DECL)
+		return is_already_marked(lhs);
+
+	if (TREE_CODE(lhs) == COMPONENT_REF) {
+		const_tree field, attr;
+
+		field = search_field_decl(lhs);
+		attr = lookup_attribute("intentional_overflow", DECL_ATTRIBUTES(field));
+		if (!attr || !TREE_VALUE(attr))
+			return false;
+		return true;
+	}
+
+	def_stmt = get_def_stmt(lhs);
+
+	if (!def_stmt)
+		return false;
+
+	if (pointer_set_contains(visited, def_stmt))
+		return false;
+
+	switch (gimple_code(def_stmt)) {
+	case GIMPLE_NOP:
+		if (TREE_CODE(SSA_NAME_VAR(lhs)) == PARM_DECL)
+			return is_already_marked(lhs);
+		return false;
+	case GIMPLE_PHI:
+		return walk_phi(visited, lhs);
+	case GIMPLE_CALL:
+	case GIMPLE_ASM:
+		return false;
+	case GIMPLE_ASSIGN:
+		switch (gimple_num_ops(def_stmt)) {
+		case 2:
+			return walk_unary_ops(visited, lhs);
+		case 3:
+			return walk_binary_ops(visited, lhs);
+		}
+	default:
+		debug_gimple_stmt((gimple)def_stmt);
+		error("%s: unknown gimple code", __func__);
+		gcc_unreachable();
+	}
+}
+
+static bool search_attributes(tree fndecl, const_tree arg, unsigned int argnum)
+{
+	struct pointer_set_t *visited;
+	bool is_found;
+	enum marked is_marked;
+	location_t loc;
+
+	visited = pointer_set_create();
+	is_found = pre_expand(visited, arg);
+	pointer_set_destroy(visited);
+
+	is_marked = mark_status(fndecl, argnum + 1);
+	if ((is_found && is_marked == MARKED_YES) || is_marked == MARKED_NOT_INTENTIONAL)
+		return true;
+
+	if (is_found) {
+		loc = DECL_SOURCE_LOCATION(fndecl);
+		inform(loc, "The intentional_overflow attribute is missing from +%s+%u+", get_asm_name(fndecl), argnum + 1);
+		return true;
+	}
+	return false;
+}
+
+static void handle_function_arg(gimple stmt, tree fndecl, unsigned int argnum)
+{
+	struct pointer_set_t *visited;
+	tree arg, newarg;
+	bool match;
+
+	match = get_function_arg(&argnum, fndecl);
+	if (!match)
+		return;
+	gcc_assert(gimple_call_num_args(stmt) > argnum);
+	arg = gimple_call_arg(stmt, argnum);
+	if (arg == NULL_TREE)
+		return;
+
+	if (is_gimple_constant(arg))
+		return;
+
+	if (search_attributes(fndecl, arg, argnum))
+		return;
+
+	if (TREE_CODE(arg) != SSA_NAME)
+		return;
+
+	check_arg_type(arg);
+
+	visited = pointer_set_create();
+	newarg = expand(visited, arg);
+	pointer_set_destroy(visited);
+
+	if (newarg == NULL_TREE)
+		return;
+
+	change_function_arg(stmt, arg, argnum, newarg);
+
+	check_size_overflow(stmt, TREE_TYPE(newarg), newarg, arg, BEFORE_STMT);
+}
+
+static void handle_function_by_attribute(gimple stmt, const_tree attr, tree fndecl)
+{
+	tree p = TREE_VALUE(attr);
+	do {
+		handle_function_arg(stmt, fndecl, TREE_INT_CST_LOW(TREE_VALUE(p))-1);
+		p = TREE_CHAIN(p);
+	} while (p);
+}
+
+static void handle_function_by_hash(gimple stmt, tree fndecl)
+{
+	tree orig_fndecl;
+	unsigned int num;
+	const struct size_overflow_hash *hash;
+
+	orig_fndecl = get_original_function_decl(fndecl);
+	if (C_DECL_IMPLICIT(orig_fndecl))
+		return;
+	hash = get_function_hash(orig_fndecl);
+	if (!hash)
+		return;
+
+	for (num = 1; num <= MAX_PARAM; num++)
+		if (hash->param & (1U << num))
+			handle_function_arg(stmt, fndecl, num - 1);
+}
+
+static void set_plf_false(void)
+{
+	basic_block bb;
+
+	FOR_ALL_BB(bb) {
+		gimple_stmt_iterator si;
+
+		for (si = gsi_start_bb(bb); !gsi_end_p(si); gsi_next(&si))
+			gimple_set_plf(gsi_stmt(si), MY_STMT, false);
+		for (si = gsi_start_phis(bb); !gsi_end_p(si); gsi_next(&si))
+			gimple_set_plf(gsi_stmt(si), MY_STMT, false);
+	}
+}
+
+static unsigned int handle_function(void)
+{
+	basic_block next, bb = ENTRY_BLOCK_PTR->next_bb;
+
+	set_plf_false();
+
+	do {
+		gimple_stmt_iterator gsi;
+		next = bb->next_bb;
+
+		for (gsi = gsi_start_bb(bb); !gsi_end_p(gsi); gsi_next(&gsi)) {
+			tree fndecl, attr;
+			gimple stmt = gsi_stmt(gsi);
+
+			if (!(is_gimple_call(stmt)))
+				continue;
+			fndecl = gimple_call_fndecl(stmt);
+			if (fndecl == NULL_TREE)
+				continue;
+			if (gimple_call_num_args(stmt) == 0)
+				continue;
+			attr = lookup_attribute("size_overflow", DECL_ATTRIBUTES(fndecl));
+			if (!attr || !TREE_VALUE(attr))
+				handle_function_by_hash(stmt, fndecl);
+			else
+				handle_function_by_attribute(stmt, attr, fndecl);
+			gsi = gsi_for_stmt(stmt);
+			next = gimple_bb(stmt)->next_bb;
+		}
+		bb = next;
+	} while (bb);
+	return 0;
+}
+
+static struct gimple_opt_pass size_overflow_pass = {
+	.pass = {
+		.type			= GIMPLE_PASS,
+		.name			= "size_overflow",
+		.gate			= NULL,
+		.execute		= handle_function,
+		.sub			= NULL,
+		.next			= NULL,
+		.static_pass_number	= 0,
+		.tv_id			= TV_NONE,
+		.properties_required	= PROP_cfg | PROP_referenced_vars,
+		.properties_provided	= 0,
+		.properties_destroyed	= 0,
+		.todo_flags_start	= 0,
+		.todo_flags_finish	= TODO_verify_ssa | TODO_verify_stmts | TODO_dump_func | TODO_remove_unused_locals | TODO_update_ssa_no_phi | TODO_cleanup_cfg | TODO_ggc_collect | TODO_verify_flow
+	}
+};
+
+static void start_unit_callback(void __unused *gcc_data, void __unused *user_data)
+{
+	tree fntype;
+
+	const_char_ptr_type_node = build_pointer_type(build_type_variant(char_type_node, 1, 0));
+
+	// void report_size_overflow(const char *loc_file, unsigned int loc_line, const char *current_func, const char *ssa_var)
+	fntype = build_function_type_list(void_type_node,
+					  const_char_ptr_type_node,
+					  unsigned_type_node,
+					  const_char_ptr_type_node,
+					  const_char_ptr_type_node,
+					  NULL_TREE);
+	report_size_overflow_decl = build_fn_decl("report_size_overflow", fntype);
+
+	DECL_ASSEMBLER_NAME(report_size_overflow_decl);
+	TREE_PUBLIC(report_size_overflow_decl) = 1;
+	DECL_EXTERNAL(report_size_overflow_decl) = 1;
+	DECL_ARTIFICIAL(report_size_overflow_decl) = 1;
+	TREE_THIS_VOLATILE(report_size_overflow_decl) = 1;
+}
+
+int plugin_init(struct plugin_name_args *plugin_info, struct plugin_gcc_version *version)
+{
+	int i;
+	const char * const plugin_name = plugin_info->base_name;
+	const int argc = plugin_info->argc;
+	const struct plugin_argument * const argv = plugin_info->argv;
+	bool enable = true;
+
+	struct register_pass_info size_overflow_pass_info = {
+		.pass				= &size_overflow_pass.pass,
+		.reference_pass_name		= "ssa",
+		.ref_pass_instance_number	= 1,
+		.pos_op				= PASS_POS_INSERT_AFTER
+	};
+
+	if (!plugin_default_version_check(version, &gcc_version)) {
+		error(G_("incompatible gcc/plugin versions"));
+		return 1;
+	}
+
+	for (i = 0; i < argc; ++i) {
+		if (!strcmp(argv[i].key, "no-size-overflow")) {
+			enable = false;
+			continue;
+		}
+		error(G_("unkown option '-fplugin-arg-%s-%s'"), plugin_name, argv[i].key);
+	}
+
+	register_callback(plugin_name, PLUGIN_INFO, NULL, &size_overflow_plugin_info);
+	if (enable) {
+		register_callback("start_unit", PLUGIN_START_UNIT, &start_unit_callback, NULL);
+		register_callback(plugin_name, PLUGIN_PASS_MANAGER_SETUP, NULL, &size_overflow_pass_info);
+	}
+	register_callback(plugin_name, PLUGIN_ATTRIBUTES, register_attributes, NULL);
+
+	return 0;
+}
--- tools/gcc/stackleak_plugin.c	1970-01-01 00:00:00.000000000 +0000
+++ tools/gcc/stackleak_plugin.c	2012-10-15 17:30:59.835924531 +0000
@@ -0,0 +1,313 @@
+/*
+ * Copyright 2011 by the PaX Team <pageexec@freemail.hu>
+ * Licensed under the GPL v2
+ *
+ * Note: the choice of the license means that the compilation process is
+ *       NOT 'eligible' as defined by gcc's library exception to the GPL v3,
+ *       but for the kernel it doesn't matter since it doesn't link against
+ *       any of the gcc libraries
+ *
+ * gcc plugin to help implement various PaX features
+ *
+ * - track lowest stack pointer
+ *
+ * TODO:
+ * - initialize all local variables
+ *
+ * BUGS:
+ * - none known
+ */
+#include "gcc-plugin.h"
+#include "config.h"
+#include "system.h"
+#include "coretypes.h"
+#include "tree.h"
+#include "tree-pass.h"
+#include "flags.h"
+#include "intl.h"
+#include "toplev.h"
+#include "plugin.h"
+//#include "expr.h" where are you...
+#include "diagnostic.h"
+#include "plugin-version.h"
+#include "tm.h"
+#include "function.h"
+#include "basic-block.h"
+#include "gimple.h"
+#include "rtl.h"
+#include "emit-rtl.h"
+
+extern void print_gimple_stmt(FILE *, gimple, int, int);
+
+int plugin_is_GPL_compatible;
+
+static int track_frame_size = -1;
+static const char track_function[] = "pax_track_stack";
+static const char check_function[] = "pax_check_alloca";
+static bool init_locals;
+
+static struct plugin_info stackleak_plugin_info = {
+	.version	= "201203140940",
+	.help		= "track-lowest-sp=nn\ttrack sp in functions whose frame size is at least nn bytes\n"
+//			  "initialize-locals\t\tforcibly initialize all stack frames\n"
+};
+
+static bool gate_stackleak_track_stack(void);
+static unsigned int execute_stackleak_tree_instrument(void);
+static unsigned int execute_stackleak_final(void);
+
+static struct gimple_opt_pass stackleak_tree_instrument_pass = {
+	.pass = {
+		.type			= GIMPLE_PASS,
+		.name			= "stackleak_tree_instrument",
+		.gate			= gate_stackleak_track_stack,
+		.execute		= execute_stackleak_tree_instrument,
+		.sub			= NULL,
+		.next			= NULL,
+		.static_pass_number	= 0,
+		.tv_id			= TV_NONE,
+		.properties_required	= PROP_gimple_leh | PROP_cfg,
+		.properties_provided	= 0,
+		.properties_destroyed	= 0,
+		.todo_flags_start	= 0, //TODO_verify_ssa | TODO_verify_flow | TODO_verify_stmts,
+		.todo_flags_finish	= TODO_verify_ssa | TODO_verify_stmts | TODO_dump_func | TODO_update_ssa
+	}
+};
+
+static struct rtl_opt_pass stackleak_final_rtl_opt_pass = {
+	.pass = {
+		.type			= RTL_PASS,
+		.name			= "stackleak_final",
+		.gate			= gate_stackleak_track_stack,
+		.execute		= execute_stackleak_final,
+		.sub			= NULL,
+		.next			= NULL,
+		.static_pass_number	= 0,
+		.tv_id			= TV_NONE,
+		.properties_required	= 0,
+		.properties_provided	= 0,
+		.properties_destroyed	= 0,
+		.todo_flags_start	= 0,
+		.todo_flags_finish	= TODO_dump_func
+	}
+};
+
+static bool gate_stackleak_track_stack(void)
+{
+	return track_frame_size >= 0;
+}
+
+static void stackleak_check_alloca(gimple_stmt_iterator *gsi)
+{
+	gimple check_alloca;
+	tree fntype, fndecl, alloca_size;
+
+	fntype = build_function_type_list(void_type_node, long_unsigned_type_node, NULL_TREE);
+	fndecl = build_fn_decl(check_function, fntype);
+	DECL_ASSEMBLER_NAME(fndecl); // for LTO
+
+	// insert call to void pax_check_alloca(unsigned long size)
+	alloca_size = gimple_call_arg(gsi_stmt(*gsi), 0);
+	check_alloca = gimple_build_call(fndecl, 1, alloca_size);
+	gsi_insert_before(gsi, check_alloca, GSI_SAME_STMT);
+}
+
+static void stackleak_add_instrumentation(gimple_stmt_iterator *gsi)
+{
+	gimple track_stack;
+	tree fntype, fndecl;
+
+	fntype = build_function_type_list(void_type_node, NULL_TREE);
+	fndecl = build_fn_decl(track_function, fntype);
+	DECL_ASSEMBLER_NAME(fndecl); // for LTO
+
+	// insert call to void pax_track_stack(void)
+	track_stack = gimple_build_call(fndecl, 0);
+	gsi_insert_after(gsi, track_stack, GSI_CONTINUE_LINKING);
+}
+
+#if BUILDING_GCC_VERSION == 4005
+static bool gimple_call_builtin_p(gimple stmt, enum built_in_function code)
+{
+	tree fndecl;
+
+	if (!is_gimple_call(stmt))
+		return false;
+	fndecl = gimple_call_fndecl(stmt);
+	if (!fndecl)
+		return false;
+	if (DECL_BUILT_IN_CLASS(fndecl) != BUILT_IN_NORMAL)
+		return false;
+//	print_node(stderr, "pax", fndecl, 4);
+	return DECL_FUNCTION_CODE(fndecl) == code;
+}
+#endif
+
+static bool is_alloca(gimple stmt)
+{
+	if (gimple_call_builtin_p(stmt, BUILT_IN_ALLOCA))
+		return true;
+
+#if BUILDING_GCC_VERSION >= 4007
+	if (gimple_call_builtin_p(stmt, BUILT_IN_ALLOCA_WITH_ALIGN))
+		return true;
+#endif
+
+	return false;
+}
+
+static unsigned int execute_stackleak_tree_instrument(void)
+{
+	basic_block bb, entry_bb;
+	bool prologue_instrumented = false, is_leaf = true;
+
+	entry_bb = ENTRY_BLOCK_PTR_FOR_FUNCTION(cfun)->next_bb;
+
+	// 1. loop through BBs and GIMPLE statements
+	FOR_EACH_BB(bb) {
+		gimple_stmt_iterator gsi;
+
+		for (gsi = gsi_start_bb(bb); !gsi_end_p(gsi); gsi_next(&gsi)) {
+			gimple stmt;
+
+			stmt = gsi_stmt(gsi);
+
+			if (is_gimple_call(stmt))
+				is_leaf = false;
+
+			// gimple match: align 8 built-in BUILT_IN_NORMAL:BUILT_IN_ALLOCA attributes <tree_list 0xb7576450>
+			if (!is_alloca(stmt))
+				continue;
+
+			// 2. insert stack overflow check before each __builtin_alloca call
+			stackleak_check_alloca(&gsi);
+
+			// 3. insert track call after each __builtin_alloca call
+			stackleak_add_instrumentation(&gsi);
+			if (bb == entry_bb)
+				prologue_instrumented = true;
+		}
+	}
+
+	// special cases for some bad linux code: taking the address of static inline functions will materialize them
+	// but we mustn't instrument some of them as the resulting stack alignment required by the function call ABI
+	// will break other assumptions regarding the expected (but not otherwise enforced) register clobbering  ABI.
+	// case in point: native_save_fl on amd64 when optimized for size clobbers rdx if it were instrumented here.
+	if (is_leaf && !TREE_PUBLIC(current_function_decl) && DECL_DECLARED_INLINE_P(current_function_decl))
+		return 0;
+	if (is_leaf && !strncmp(IDENTIFIER_POINTER(DECL_NAME(current_function_decl)), "_paravirt_", 10))
+		return 0;
+
+	// 4. insert track call at the beginning
+	if (!prologue_instrumented) {
+		gimple_stmt_iterator gsi;
+
+		bb = split_block_after_labels(ENTRY_BLOCK_PTR)->dest;
+		if (dom_info_available_p(CDI_DOMINATORS))
+			set_immediate_dominator(CDI_DOMINATORS, bb, ENTRY_BLOCK_PTR);
+		gsi = gsi_start_bb(bb);
+		stackleak_add_instrumentation(&gsi);
+	}
+
+	return 0;
+}
+
+static unsigned int execute_stackleak_final(void)
+{
+	rtx insn;
+
+	if (cfun->calls_alloca)
+		return 0;
+
+	// keep calls only if function frame is big enough
+	if (get_frame_size() >= track_frame_size)
+		return 0;
+
+	// 1. find pax_track_stack calls
+	for (insn = get_insns(); insn; insn = NEXT_INSN(insn)) {
+		// rtl match: (call_insn 8 7 9 3 (call (mem (symbol_ref ("pax_track_stack") [flags 0x41] <function_decl 0xb7470e80 pax_track_stack>) [0 S1 A8]) (4)) -1 (nil) (nil))
+		rtx body;
+
+		if (!CALL_P(insn))
+			continue;
+		body = PATTERN(insn);
+		if (GET_CODE(body) != CALL)
+			continue;
+		body = XEXP(body, 0);
+		if (GET_CODE(body) != MEM)
+			continue;
+		body = XEXP(body, 0);
+		if (GET_CODE(body) != SYMBOL_REF)
+			continue;
+		if (strcmp(XSTR(body, 0), track_function))
+			continue;
+//		warning(0, "track_frame_size: %d %ld %d", cfun->calls_alloca, get_frame_size(), track_frame_size);
+		// 2. delete call
+		insn = delete_insn_and_edges(insn);
+#if BUILDING_GCC_VERSION >= 4007
+		if (GET_CODE(insn) == NOTE && NOTE_KIND(insn) == NOTE_INSN_CALL_ARG_LOCATION)
+			insn = delete_insn_and_edges(insn);
+#endif
+	}
+
+//	print_simple_rtl(stderr, get_insns());
+//	print_rtl(stderr, get_insns());
+//	warning(0, "track_frame_size: %d %ld %d", cfun->calls_alloca, get_frame_size(), track_frame_size);
+
+	return 0;
+}
+
+int plugin_init(struct plugin_name_args *plugin_info, struct plugin_gcc_version *version)
+{
+	const char * const plugin_name = plugin_info->base_name;
+	const int argc = plugin_info->argc;
+	const struct plugin_argument * const argv = plugin_info->argv;
+	int i;
+	struct register_pass_info stackleak_tree_instrument_pass_info = {
+		.pass				= &stackleak_tree_instrument_pass.pass,
+//		.reference_pass_name		= "tree_profile",
+		.reference_pass_name		= "optimized",
+		.ref_pass_instance_number	= 1,
+		.pos_op 			= PASS_POS_INSERT_BEFORE
+	};
+	struct register_pass_info stackleak_final_pass_info = {
+		.pass				= &stackleak_final_rtl_opt_pass.pass,
+		.reference_pass_name		= "final",
+		.ref_pass_instance_number	= 1,
+		.pos_op 			= PASS_POS_INSERT_BEFORE
+	};
+
+	if (!plugin_default_version_check(version, &gcc_version)) {
+		error(G_("incompatible gcc/plugin versions"));
+		return 1;
+	}
+
+	register_callback(plugin_name, PLUGIN_INFO, NULL, &stackleak_plugin_info);
+
+	for (i = 0; i < argc; ++i) {
+		if (!strcmp(argv[i].key, "track-lowest-sp")) {
+			if (!argv[i].value) {
+				error(G_("no value supplied for option '-fplugin-arg-%s-%s'"), plugin_name, argv[i].key);
+				continue;
+			}
+			track_frame_size = atoi(argv[i].value);
+			if (argv[i].value[0] < '0' || argv[i].value[0] > '9' || track_frame_size < 0)
+				error(G_("invalid option argument '-fplugin-arg-%s-%s=%s'"), plugin_name, argv[i].key, argv[i].value);
+			continue;
+		}
+		if (!strcmp(argv[i].key, "initialize-locals")) {
+			if (argv[i].value) {
+				error(G_("invalid option argument '-fplugin-arg-%s-%s=%s'"), plugin_name, argv[i].key, argv[i].value);
+				continue;
+			}
+			init_locals = true;
+			continue;
+		}
+		error(G_("unkown option '-fplugin-arg-%s-%s'"), plugin_name, argv[i].key);
+	}
+
+	register_callback(plugin_name, PLUGIN_PASS_MANAGER_SETUP, NULL, &stackleak_tree_instrument_pass_info);
+	register_callback(plugin_name, PLUGIN_PASS_MANAGER_SETUP, NULL, &stackleak_final_pass_info);
+
+	return 0;
+}
--- include/net/bluetooth/bluetooth.h
+++ include/net/bluetooth/bluetooth.h
@@ -207,7 +207,7 @@
         struct file_operations   fops;
         int (* custom_seq_show)(struct seq_file *, void *);
 #endif
-};
+} __no_const;
 
 int  bt_sock_register(int proto, const struct net_proto_family *ops);
 int  bt_sock_unregister(int proto);
--- drivers/gpu/drm/i915/i915_drv.h
+++ drivers/gpu/drm/i915/i915_drv.h
@@ -274,12 +274,12 @@
 	/* render clock increase/decrease */
 	/* display clock increase/decrease */
 	/* pll clock increase/decrease */
-};
+} __no_const;
 
 struct drm_i915_gt_funcs {
 	void (*force_wake_get)(struct drm_i915_private *dev_priv);
 	void (*force_wake_put)(struct drm_i915_private *dev_priv);
-};
+} __no_const;
 
 #define DEV_INFO_FLAGS \
 	DEV_INFO_FLAG(is_mobile) DEV_INFO_SEP \
