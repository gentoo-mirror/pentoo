From d24ad5d0542c14dce3790bb6d08589ae4019caa9 Mon Sep 17 00:00:00 2001
From: Moritz Lipp <mlq@pwmt.org>
Date: Tue, 23 Jul 2013 21:42:36 +0200
Subject: [PATCH 1/2] Include signal.h for SIGTERM declaration

---
 test_proxy.c | 1 +
 1 file changed, 1 insertion(+)

diff --git a/test_proxy.c b/test_proxy.c
index 2b391613..4adafdeb 100644
--- a/test_proxy.c
+++ b/test_proxy.c
@@ -2,6 +2,7 @@
 #include <stdlib.h>
 #include <string.h>
 #include <stdint.h>
+#include <signal.h>
 #include <errno.h>
 #include <evhtp.h>
 

From bb238f6f802707eb147129de481a8c55c32b06b8 Mon Sep 17 00:00:00 2001
From: Moritz Lipp <mlq@pwmt.org>
Date: Tue, 23 Jul 2013 21:44:50 +0200
Subject: [PATCH 2/2] Resolve memory leaks in evhtp.c

This patch resolves memory leaks of the variable key_s in
_evhtp_request_parser_header_key by adding proper calls to free the previously
allocated memory upon failure and return. In addition it checks if the initial
allocation of the memory succeeded and acts accordingly.
---
 evhtp.c | 10 +++++++++-
 1 file changed, 9 insertions(+), 1 deletion(-)

diff --git a/evhtp.c b/evhtp.c
index 2cde1da0..ca10a6c0 100644
--- a/evhtp.c
+++ b/evhtp.c
@@ -902,16 +902,24 @@ _evhtp_request_parser_header_key(htparser * p, const char * data, size_t len) {
     char               * key_s;     /* = strndup(data, len); */
     evhtp_header_t     * hdr;
 
-    key_s      = malloc(len + 1);
+    key_s = malloc(len + 1);
+    if (key_s == NULL) {
+      return -1;
+    }
+
     key_s[len] = '\0';
     memcpy(key_s, data, len);
 
     if ((hdr = evhtp_header_key_add(c->request->headers_in, key_s, 0)) == NULL) {
         c->request->status = EVHTP_RES_FATAL;
+        free(key_s);
         return -1;
     }
 
     hdr->k_heaped = 1;
+
+    free(key_s);
+
     return 0;
 }
 
