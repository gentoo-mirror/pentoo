--- a/setup.py.orig	2018-08-25 20:18:30.000000000 +0800
+++ b/setup.py	2018-09-15 10:45:39.666991896 +0800
@@ -79,38 +79,7 @@
 
             network_error = None
 
-            try:
-                print("querying pypi for available prebuilds")
-                client = xmlrpclib.ServerProxy("https://pypi.python.org/pypi", transport=UrllibTransport())
-                urls = client.release_urls("frida", frida_version)
-
-                urls = [url for url in urls if url['python_version'] != 'source']
-
-                def parse_version(version):
-                    return tuple(map(int, version.split(".")))
-
-                if python_major_version >= 3:
-                    urls = [url for url in urls if parse_version(url['python_version'])[0] == python_major_version]
-                else:
-                    urls = [url for url in urls if parse_version(url['python_version']) == python_version]
-
-                os_suffix = "-{}.egg".format(os_version)
-                urls = [url for url in urls if url['filename'].endswith(os_suffix)]
-
-                if len(urls) == 0:
-                    raise Exception("Could not find prebuilt Frida extension. "
-                                    "Prebuilds only provided for Python 2.7 and 3.4+.")
-
-                url = urls[0]
-                egg_filename = url['filename']
-                egg_url = url['url']
-
-                print("downloading prebuilt extension from", egg_url)
-                egg_data = urlopen(egg_url).read()
-            except Exception as e:
-                network_error = e
-
-            if network_error is not None:
+            if network_error is None:
                 print("network query failed")
 
                 egg_path = os.path.expanduser("~/frida-{}-py{}.{}-{}.egg".format(frida_version, python_version[0], python_version[1], os_version))
